/*
Copyright 2020 AppsCode Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/


// This file was autogenerated by go-to-protobuf. Do not edit it manually!

syntax = "proto2";

package go.bytebuilders.dev.resource_model.apis.cloud.v1alpha1;

import "k8s.io/apimachinery/pkg/api/resource/generated.proto";
import "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/schema/generated.proto";

// Package-wide variables from generator "generated".
option go_package = "go.bytebuilders.dev/resource-model/apis/cloud/v1alpha1";

message AWSCredential {
  optional string accessKeyID = 1;

  optional string secretAccessKey = 2;
}

message AzureCredential {
  optional string tenantID = 1;

  optional string subscriptionID = 2;

  optional string clientID = 3;

  optional string clientSecret = 4;
}

message AzureStorageCredential {
  optional string account = 1;

  optional string key = 2;
}

// +kubebuilder:object:root=true
// +kubebuilder:resource:path=cloudproviders,singular=cloudprovider,scope=Cluster,categories={cloud,appscode}
message CloudProvider {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional CloudProviderSpec spec = 2;
}

// CloudProviderList contains a list of CloudProvider
message CloudProviderList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated CloudProvider items = 2;
}

// CloudProviderSpec defines the desired state of CloudProvider
message CloudProviderSpec {
  repeated Region regions = 1;

  repeated MachineType machineTypes = 2;
}

// +kubebuilder:object:root=true
// +kubebuilder:resource:path=credentials,singular=credential,scope=Cluster,categories={kubernetes,resource-model,appscode}
// +kubebuilder:subresource:status
message Credential {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional CredentialSpec spec = 2;

  optional CredentialStatus status = 3;
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
message CredentialList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated Credential items = 2;
}

message CredentialSpec {
  optional string name = 1;

  optional string type = 2;

  optional int64 ownerID = 3;

  // +optional
  optional AWSCredential aws = 4;

  // +optional
  optional AzureCredential azure = 5;

  // +optional
  optional AzureStorageCredential azureStorage = 6;

  // +optional
  optional DigitalOceanCredential digitalocean = 7;

  // +optional
  optional GoogleCloudCredential googleCloud = 8;

  // +optional
  optional GoogleOAuthCredential googleOAuth = 9;

  // +optional
  optional LinodeCredential linode = 10;

  // +optional
  optional PacketCredential packet = 11;

  // +optional
  optional ScalewayCredential scaleway = 12;

  // +optional
  optional SwiftCredential swift = 13;

  // +optional
  optional VultrCredential vultr = 14;
}

message CredentialStatus {
  // ObservedGeneration is the most recent generation observed for this resource. It corresponds to the
  // resource's generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;
}

message DigitalOceanCredential {
  optional string token = 1;
}

message GoogleCloudCredential {
  optional string projectID = 1;

  optional string serviceAccount = 2;
}

message GoogleOAuthCredential {
  optional string clientID = 1;

  optional string clientSecret = 2;

  optional string accessToken = 3;

  // +optional
  optional string refreshToken = 4;

  // +optional
  repeated string scopes = 5;

  // +optional
  optional int64 expiry = 6;
}

message LinodeCredential {
  optional string token = 1;
}

// +kubebuilder:object:root=true
// +kubebuilder:resource:path=machinetypes,singular=machinetype,scope=Cluster,categories={cloud,appscode}
// +kubebuilder:printcolumn:name="SKU",type="string",JSONPath=".spec.sku"
// +kubebuilder:printcolumn:name="CPU",type="string",JSONPath=".spec.cpu"
// +kubebuilder:printcolumn:name="RAM",type="string",JSONPath=".spec.ram"
message MachineType {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional MachineTypeSpec spec = 2;
}

// MachineTypeList contains a list of MachineType
message MachineTypeList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated MachineType items = 2;
}

// MachineTypeSpec defines the desired state of MachineType
message MachineTypeSpec {
  optional string sku = 1;

  optional string description = 2;

  optional string category = 3;

  optional k8s.io.apimachinery.pkg.api.resource.Quantity cpu = 4;

  optional k8s.io.apimachinery.pkg.api.resource.Quantity ram = 5;

  optional k8s.io.apimachinery.pkg.api.resource.Quantity disk = 6;

  repeated string regions = 7;

  repeated string zones = 8;

  optional bool deprecated = 9;
}

message PacketCredential {
  optional string projectID = 1;

  optional string apiKey = 2;
}

// Region defines the desired state of Region
message Region {
  optional string region = 1;

  repeated string zones = 2;

  optional string location = 3;
}

message ScalewayCredential {
  optional string organization = 1;

  optional string token = 2;
}

message SwiftCredential {
  optional string username = 1;

  optional string password = 2;

  optional string tenantName = 3;

  optional string tenantAuthURL = 4;

  optional string domain = 5;

  optional string region = 6;

  optional string tenantID = 7;

  optional string tenantDomain = 8;
}

message VultrCredential {
  optional string token = 1;
}

