/*
Copyright 2020 AppsCode Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/


// This file was autogenerated by go-to-protobuf. Do not edit it manually!

syntax = 'proto2';

package go.bytebuilders.dev.resource_model.apis.cluster.v1alpha1;

import "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/schema/generated.proto";

// Package-wide variables from generator "generated".
option go_package = "v1alpha1";

message AWSCredential {
  optional string accessKeyID = 1;

  optional string secretAccessKey = 2;
}

message AWSProvider {
  // +optional
  optional string region = 1;

  // +optional
  optional string clusterID = 2;

  // +optional
  optional string assumeRoleArn = 3;

  // +optional
  optional string assumeRoleExternalID = 4;

  // +optional
  optional string sessionName = 5;

  // +optional
  optional bool forwardSessionName = 6;

  // +optional
  optional bool cache = 7;
}

// AuthProviderConfig holds the configuration for a specified auth provider.
message AuthProviderConfig {
  optional string name = 1;

  // +optional
  optional AzureAuthProviderConfig azureConfig = 2;
}

message AzureAuthProviderConfig {
  optional string apiserverID = 1;

  optional string clientID = 2;

  // +optional
  optional string configMode = 3;

  optional string environment = 4;

  optional string tenantID = 5;
}

message AzureCredential {
  optional string tenantID = 1;

  optional string subscriptionID = 2;

  optional string clientID = 3;

  optional string clientSecret = 4;
}

// +kubebuilder:object:root=true
// +kubebuilder:resource:path=clusterauthinfotemplates,singular=clusterauthinfotemplate,scope=Cluster,categories={kubernetes,resource-model,appscode}
// +kubebuilder:subresource:status
message ClusterAuthInfoTemplate {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ClusterAuthInfoTemplateSpec spec = 2;

  optional ClusterAuthInfoTemplateStatus status = 3;
}

message ClusterAuthInfoTemplateList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated ClusterAuthInfoTemplate items = 2;
}

message ClusterAuthInfoTemplateSpec {
  optional string uid = 1;

  optional int64 ownerID = 2;

  // KubeConfig contains final kube config for the cluster
  // +optional
  optional string kubeConfig = 3;

  // CertificateAuthorityData contains PEM-encoded certificate authority certificates.
  // +optional
  optional bytes certificateAuthorityData = 4;

  // ClientCertificateData contains PEM-encoded data from a client cert file for TLS.
  // +optional
  optional bytes clientCertificateData = 5;

  // ClientKeyData contains PEM-encoded data from a client key file for TLS.
  // +optional
  optional bytes clientKeyData = 6;

  // Token is the bearer token for authentication to the kubernetes cluster.
  // +optional
  optional string token = 7;

  // Username is the username for basic authentication to the kubernetes cluster.
  // +optional
  optional string username = 8;

  // Password is the password for basic authentication to the kubernetes cluster.
  // +optional
  optional string password = 9;

  // Impersonate is the username to act-as.
  // +optional
  optional string impersonate = 10;

  // ImpersonateGroups is the groups to impersonate.
  // +optional
  repeated string impersonateGroups = 11;

  // ImpersonateUserExtra contains additional information for impersonated user.
  // +optional
  map<string, ExtraValue> impersonateUserExtra = 12;

  // AuthProvider specifies a custom authentication plugin for the kubernetes cluster.
  // +optional
  optional AuthProviderConfig authProvider = 13;
}

message ClusterAuthInfoTemplateStatus {
  // ObservedGeneration is the most recent generation observed for this resource. It corresponds to the
  // resource's generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;
}

// +kubebuilder:object:root=true
// +kubebuilder:resource:path=clustercredentials,singular=clustercredential,scope=Cluster,categories={kubernetes,resource-model,appscode}
// +kubebuilder:subresource:status
message ClusterCredential {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ClusterCredentialSpec spec = 2;

  optional ClusterCredentialStatus status = 3;
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
message ClusterCredentialList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated ClusterCredential items = 2;
}

message ClusterCredentialSpec {
  optional string name = 1;

  optional string provider = 2;

  optional int64 ownerID = 3;

  // +optional
  optional GCECredential gceCredential = 4;

  // +optional
  optional DigitalOceanCredential digitalOceanCredential = 5;

  // +optional
  optional AzureCredential azureCredential = 6;

  // +optional
  optional AWSCredential awsCredential = 7;

  // +optional
  optional PacketCredential packetCredential = 8;

  // +optional
  optional ScalewayCredential scalewayCredential = 9;

  // +optional
  optional LinodeCredential linodeCredential = 10;

  // +optional
  optional VultrCredential vultrCredential = 11;

  // +optional
  optional GKECredential googleCredential = 12;
}

message ClusterCredentialStatus {
  // ObservedGeneration is the most recent generation observed for this resource. It corresponds to the
  // resource's generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;
}

// +kubebuilder:object:root=true
// +kubebuilder:resource:path=clusterinfos,singular=clusterinfo,scope=Cluster,categories={kubernetes,resource-model,appscode}
// +kubebuilder:subresource:status
message ClusterInfo {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ClusterInfoSpec spec = 2;

  optional ClusterInfoStatus status = 3;
}

message ClusterInfoList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated ClusterInfo items = 2;
}

message ClusterInfoSpec {
  optional string name = 1;

  optional string uid = 2;

  optional int64 ownerID = 3;

  // +optional
  optional string ownerName = 4;

  // +optional
  optional string provider = 5;

  // +optional
  optional string endpoint = 6;

  // +optional
  optional string location = 7;

  // +optional
  optional string project = 8;

  // +optional
  optional string initialKubernetesVersion = 9;

  // +optional
  optional int32 initialNodeCount = 10;

  // +optional
  optional int64 createdAt = 11;
}

message ClusterInfoStatus {
  // ObservedGeneration is the most recent generation observed for this resource. It corresponds to the
  // resource's generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // Phase represents current status of the cluster
  // +optional
  optional string phase = 2;
}

// +kubebuilder:object:root=true
// +kubebuilder:resource:path=clusteruserauths,singular=clusteruserauth,scope=Cluster,categories={kubernetes,resource-model,appscode}
// +kubebuilder:subresource:status
message ClusterUserAuth {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ClusterUserAuthSpec spec = 2;

  optional ClusterUserAuthStatus status = 3;
}

message ClusterUserAuthList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated ClusterUserAuth items = 2;
}

message ClusterUserAuthSpec {
  optional string clusterUID = 1;

  optional int64 userID = 2;

  // +optional
  // KubeConfig contains final kube config for the cluster
  // +optional
  optional string kubeConfig = 3;

  // ClientCertificateData contains PEM-encoded data from a client cert file for TLS.
  // +optional
  optional bytes clientCertificateData = 4;

  // ClientKeyData contains PEM-encoded data from a client key file for TLS.
  // +optional
  optional bytes clientKeyData = 5;

  // Token is the bearer token for authentication to the kubernetes cluster.
  // +optional
  optional string token = 6;

  // Username is the username for basic authentication to the kubernetes cluster.
  // +optional
  optional string username = 7;

  // Password is the password for basic authentication to the kubernetes cluster.
  // +optional
  optional string password = 8;

  // Impersonate is the username to act-as.
  // +optional
  optional string impersonate = 9;

  // ImpersonateGroups is the groups to impersonate.
  // +optional
  repeated string impersonateGroups = 10;

  // ImpersonateUserExtra contains additional information for impersonated user.
  // +optional
  map<string, ExtraValue> impersonateUserExtra = 11;

  // AuthProvider specifies a custom authentication plugin for the kubernetes cluster.
  // +optional
  optional AuthProviderConfig authProvider = 12;

  // +optional
  optional string provider = 13;

  optional GKEProvider gkeProvider = 14;

  optional AWSProvider awsProvider = 15;
}

message ClusterUserAuthStatus {
  // ObservedGeneration is the most recent generation observed for this resource. It corresponds to the
  // resource's generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;
}

message DigitalOceanCredential {
  optional string token = 1;
}

// ExtraValue masks the value so protobuf can generate
// +protobuf.nullable=true
// +protobuf.options.(gogoproto.goproto_stringer)=false
message ExtraValue {
  // items, if empty, will result in an empty slice

  repeated string items = 1;
}

message GCECredential {
  optional string projectID = 1;

  optional string serviceAccount = 2;
}

message GKECredential {
  optional string clientID = 1;

  optional string clientSecret = 2;

  optional string accessToken = 3;

  // +optional
  optional string refreshToken = 4;

  // +optional
  repeated string scopes = 5;

  // +optional
  optional int64 expiry = 6;
}

message GKEProvider {
  optional string clientID = 1;

  optional string clientSecret = 2;

  optional string accessToken = 3;

  // +optional
  optional string refreshToken = 4;

  // +optional
  optional int64 expiry = 5;
}

message LinodeCredential {
  optional string token = 1;
}

message PacketCredential {
  optional string projectID = 1;

  optional string apiKey = 2;
}

message ScalewayCredential {
  optional string organization = 1;

  optional string token = 2;
}

message VultrCredential {
  optional string token = 1;
}

