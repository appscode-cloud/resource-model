/*
Copyright 2020 AppsCode Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/


// This file was autogenerated by go-to-protobuf. Do not edit it manually!

syntax = 'proto2';

package go.bytebuilders.dev.resource_model.apis.identity.v1alpha1;

import "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/schema/generated.proto";

// Package-wide variables from generator "generated".
option go_package = "v1alpha1";

// +kubebuilder:object:root=true
// +kubebuilder:resource:path=orgusers,singular=orguser,scope=Cluster,categories={kubernetes,resource-model,appscode}
// +kubebuilder:subresource:status
message OrgUser {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional OrgUserSpec spec = 2;

  optional OrgUserStatus status = 3;
}

message OrgUserList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated OrgUser items = 2;
}

message OrgUserSpec {
  optional int64 userID = 1;

  // +optional
  optional string userName = 2;

  // +optional
  optional string fullName = 3;

  // +optional
  optional string email = 4;

  // +optional
  optional string avatarURL = 5;

  optional int64 orgID = 6;

  // +optional
  optional string orgName = 7;

  optional bool isPublic = 8;
}

message OrgUserStatus {
  // ObservedGeneration is the most recent generation observed for this resource. It corresponds to the
  // resource's generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;
}

// +kubebuilder:object:root=true
// +kubebuilder:resource:path=teams,singular=team,scope=Cluster,categories={kubernetes,resource-model,appscode}
// +kubebuilder:subresource:status
message Team {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional TeamSpec spec = 2;

  optional TeamStatus status = 3;
}

message TeamList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated Team items = 2;
}

message TeamSpec {
  optional string name = 1;

  optional string lowerName = 2;

  optional string uid = 3;

  repeated string tags = 4;

  optional int64 ownerID = 5;

  // +optional
  optional string orgName = 6;

  optional string description = 7;

  optional string authorize = 8;

  optional int64 numMembers = 9;

  // +optional
  repeated TeamUser members = 10;
}

message TeamStatus {
  // ObservedGeneration is the most recent generation observed for this resource. It corresponds to the
  // resource's generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;
}

// +kubebuilder:object:root=true
// +kubebuilder:resource:path=teamusers,singular=teamuser,scope=Cluster,categories={kubernetes,resource-model,appscode}
// +kubebuilder:subresource:status
message TeamUser {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional TeamUserSpec spec = 2;

  optional TeamUserStatus status = 3;
}

message TeamUserList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated TeamUser items = 2;
}

message TeamUserSpec {
  optional int64 userID = 1;

  // +optional
  optional string userName = 2;

  // +optional
  optional string fullName = 3;

  // +optional
  optional string email = 4;

  // +optional
  optional string avatarURL = 5;

  optional int64 orgID = 6;

  // +optional
  optional string orgName = 7;

  optional int64 teamID = 8;

  // +optional
  optional int64 teamName = 9;

  optional bool isPublic = 10;
}

message TeamUserStatus {
  // ObservedGeneration is the most recent generation observed for this resource. It corresponds to the
  // resource's generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;
}

