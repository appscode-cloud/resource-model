/*
Copyright 2020 AppsCode Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/


// This file was autogenerated by go-to-protobuf. Do not edit it manually!

syntax = "proto2";

package go.bytebuilders.dev.resource_model.apis.ui.v1alpha1;

import "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/schema/generated.proto";

// Package-wide variables from generator "generated".
option go_package = "go.bytebuilders.dev/resource-model/apis/ui/v1alpha1";

// ChartRepoRef references to a single version of a Chart
message ChartRepoRef {
  optional string name = 1;

  optional string url = 2;

  optional string version = 3;
}

// +kubebuilder:object:root=true
// +kubebuilder:resource:path=optionseditors,singular=optionseditor,scope=Cluster,categories={ui,appscode}
// +kubebuilder:subresource:status
message OptionsEditor {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional OptionsEditorSpec spec = 2;

  optional OptionsEditorStatus status = 3;
}

message OptionsEditorList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated OptionsEditor items = 2;
}

message OptionsEditorSpec {
  // Resource identifies the resource to which this editor applies
  optional ResourceID resource = 1;

  // ChartRef references a Helm chart with the ui.json
  optional ChartRepoRef chartRef = 2;

  // Category defines the category of the application that this editor is for (eg, database)
  optional string category = 3;

  // Provider defines the name of the provider for this application (eg, kubedb.com)
  optional string provider = 4;
}

message OptionsEditorStatus {
  // ObservedGeneration is the most recent generation observed for this resource. It corresponds to the
  // resource's generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;
}

// ResourceID identifies a resource
message ResourceID {
  optional string group = 1;

  optional string version = 2;

  // Name is the plural name of the resource to serve.  It must match the name of the CustomResourceDefinition-registration
  // too: plural.group and it must be all lowercase.
  optional string name = 3;

  // Kind is the serialized kind of the resource.  It is normally CamelCase and singular.
  optional string kind = 4;

  optional string scope = 5;
}

