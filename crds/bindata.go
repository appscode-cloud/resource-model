// Package crds Code generated by go-bindata. (@generated) DO NOT EDIT.
// sources:
// cluster.bytebuilders.dev_clusterauthinfotemplates.yaml
// cluster.bytebuilders.dev_clustercredentials.yaml
// cluster.bytebuilders.dev_clusterinfos.yaml
// cluster.bytebuilders.dev_clusters.yaml
// cluster.bytebuilders.dev_clusteruserauths.yaml
package crds

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _clusterBytebuildersDev_clusterauthinfotemplatesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x58\x4d\x8f\xdb\x36\x13\xbe\xfb\x57\x0c\xf0\x1e\x72\x89\x6d\x04\x6f\x51\x14\xbe\x2d\x36\x41\x60\x24\x41\x8d\xec\x26\x77\x8a\x1a\xc9\xac\x25\x92\x1d\x0e\xbd\x71\x8a\xfe\xf7\x82\xd4\x87\x65\x49\xf4\xba\xdd\xa6\xba\x91\x1c\x0e\x9f\x67\xbe\x38\x94\xb0\xea\x2b\x92\x53\x46\x6f\x40\x58\x85\xdf\x18\x75\x18\xb9\xd5\xe1\x17\xb7\x52\x66\x7d\x7c\xb3\x38\x28\x9d\x6f\xe0\xde\x3b\x36\xf5\x67\x74\xc6\x93\xc4\xb7\x58\x28\xad\x58\x19\xbd\xa8\x91\x45\x2e\x58\x6c\x16\x00\x92\x50\x84\xc9\x47\x55\xa3\x63\x51\xdb\x0d\x68\x5f\x55\x0b\x80\x4a\x64\x58\xb9\x20\x03\x20\xac\x5d\x1d\x7c\x86\xa4\x91\x31\x9e\xa2\x45\x8d\x1b\xc8\x4e\x8c\x99\x57\x55\x8e\xe4\x16\x00\xcd\xa4\xac\xbc\x63\x24\xe1\x79\xaf\x74\x61\x18\x6b\x5b\x89\xb0\xad\x5d\x58\x0d\x77\xad\x72\x3c\x2e\x9c\x45\x19\x0e\x2a\xc9\x78\xdb\x2b\x98\xca\x35\x27\xb4\x98\xa4\x60\x2c\x0d\xa9\x6e\xbc\x84\x33\xc2\x76\x82\x5a\xee\xcb\xda\xe4\x58\xb5\x93\xc2\x5a\x27\x4d\x8e\x71\xd8\x5a\xaa\x39\xf0\xce\xf3\x7e\xab\x0b\xf3\xd8\x22\x8e\x12\x95\x72\xfc\xe1\x9a\xd4\x47\xe5\x38\x4a\xda\xca\x93\xa8\xd2\xfc\xa3\x90\x53\xba\xf4\x95\xa0\xa4\xd8\x02\xc0\x49\x63\xb1\x3f\x6f\x01\x70\x6c\x1c\x1e\x89\x2e\x5b\x2b\x1f\xdf\x88\xca\xee\xc5\x9b\x46\xab\xdc\x63\x2d\x1a\x3b\x00\x18\x8b\xfa\x6e\xb7\xfd\xfa\xff\x87\x8b\x69\x00\x4b\xc6\x22\x71\x6f\xb2\xe6\x1b\x44\xd4\x60\x16\x20\x47\x27\x49\x59\x8e\xa1\xf6\x2a\x28\x6c\xa4\x20\x0f\xa1\x84\x0e\x78\x8f\x1d\x34\xcc\x5b\x0c\x60\x0a\xe0\xbd\x72\x40\x68\x09\x1d\x6a\x8e\xe1\x75\xa1\x18\x82\x90\xd0\x60\xb2\xdf\x50\xf2\x0a\x1e\x90\x82\x1a\x70\x7b\xe3\xab\x1c\xa4\xd1\x47\x24\x06\x42\x69\x4a\xad\xbe\xf7\xba\x1d\xb0\x89\x87\x46\x73\xf2\x48\xa7\xd2\x8c\xa4\x45\x05\x47\x51\x79\x7c\x0d\x42\xe7\x50\x8b\x13\x10\x86\x53\xc0\xeb\x81\xbe\x28\xe2\x56\xf0\xc9\x10\x42\xb0\xfe\x06\xf6\xcc\xd6\x6d\xd6\xeb\x52\x71\x97\x49\xd2\xd4\xb5\xd7\x8a\x4f\x6b\x69\x34\x93\xca\x3c\x1b\x72\xeb\x1c\x8f\x58\xad\x9d\x2a\x97\x82\xe4\x5e\x31\x4a\xf6\x84\x6b\x61\xd5\x32\x42\xd7\x1c\xd3\xb1\xce\xff\xd7\xc5\x9f\x7b\x75\x81\x95\x4f\xc1\xbd\x8e\x49\xe9\x72\xb0\x10\x63\xf1\x8a\x07\x42\x14\x82\x72\x20\xda\xad\x0d\x8b\xb3\xa1\xc3\x54\xb0\xce\xe7\x77\x0f\x8f\x7d\xe8\x47\x67\x8c\xad\x1f\xed\x7e\xde\xe8\xce\x2e\x08\x06\x53\xba\x40\x6a\x9c\x58\x90\xa9\xa3\x4e\xd4\xb9\x35\x4a\x73\x1c\xc8\x4a\xa1\x1e\x9b\xdf\xf9\xac\x56\x1c\xfc\xfe\xbb\x47\xc7\xc1\x57\x2b\xb8\x17\x5a\x1b\x86\x0c\xc1\xdb\x5c\x30\xe6\x2b\xd8\x6a\xb8\x17\x35\x56\xf7\xc2\xe1\x0f\x77\x40\xb0\xb4\x5b\x06\xc3\xde\xe6\x82\x61\x65\x1c\x0b\x37\x56\x1b\x2c\x74\x55\xeb\xfc\xcd\xe7\x57\xf8\x42\x96\xef\xc8\x1c\x55\x8e\x34\x5e\x1b\xf9\xf9\x6e\x20\x1a\xcf\x50\x85\xc2\xe0\x75\x19\xeb\x79\x54\x15\x28\xca\x98\x58\xa1\xea\x94\x6a\x9c\x5f\xe1\x2b\x0c\x45\x6f\x9d\xab\x62\x5f\x58\x27\xd2\x69\xe0\x11\xfc\x77\x4f\x78\x6f\x74\xa1\xca\xb9\xe5\xe7\xb6\x43\x53\x63\x5c\x0c\xb1\xa5\xca\x53\x32\x49\xaf\x0c\xbf\x26\xf6\x5e\xac\x25\x92\x89\xd7\xc2\x8b\xf4\xa0\x3e\x2a\x32\xba\x46\xcd\x2f\xd2\xc3\xa8\xc5\x4b\x59\x85\xc4\x53\x84\x09\x15\xcb\x0b\x17\x24\x44\x7a\xe3\x26\xd6\x07\x74\x13\x12\x3d\x91\xd9\xf5\x44\x22\x75\x5f\xbc\xd8\xae\x6c\x4c\x90\x4f\x13\x6f\xee\xca\xc9\xf4\x15\x18\x32\x84\x71\x11\x72\x0b\x43\x1e\x1a\x52\x7c\x7a\x3b\x29\x08\x30\xce\xd9\xfb\xc4\xb6\x10\x68\x2c\x94\x76\xb0\x7b\xf7\x69\x89\x3a\xf4\x1d\xf9\xf0\x90\xb9\x6c\xeb\x14\x0c\xe5\xdc\x34\x67\x0b\x43\xb5\xe0\xa6\x07\x4b\x50\x9c\x35\x58\xe3\xe4\x01\xe2\x5b\xf8\xcd\xed\x99\x27\x17\xca\x67\xbc\x37\xe6\xa8\xb5\x87\x47\x66\x50\xa8\x0a\x63\x95\x7a\xfc\xf8\xf0\x6f\xd3\xfb\x80\x37\xb9\x6d\x28\xfb\x0c\x9d\x1e\xfc\x0c\xaf\x03\x9e\x7e\x10\x1b\x55\x5b\x24\x67\xb4\xe0\x99\xcc\xb8\xe0\xb2\x3d\x4b\x86\x26\x21\x54\x7e\xef\x42\x43\x54\x63\x68\x9b\x84\xe4\xa5\x98\x89\xa2\xdb\xce\x7e\x1f\x1a\xf3\x99\xe2\x9e\x42\xd0\xc8\x77\x38\xca\x66\xc4\x66\xa8\x72\x0a\x45\x31\xd6\xb3\x17\xc8\xd5\xec\x6f\x16\x05\x91\x38\xa5\xf1\x7f\x71\x48\xef\xbe\x31\xcd\x04\x84\xc8\xf3\xf8\x2a\x12\xd5\xee\xea\x2d\x76\x41\x35\xea\xfa\x1a\xdb\xaf\x5a\xb8\x43\xdb\x0a\xc7\xb1\x33\xe1\x3a\x64\x93\xf9\x02\xa4\xd0\x50\xa2\x46\x9a\xcf\xf4\x24\xe1\x67\xab\x7d\x9a\x74\xda\x27\xbd\x0d\xce\x81\x7e\xe6\x1e\x7b\xb0\x10\xa2\xd3\x5e\x1d\xda\x5e\x62\x60\xce\x3c\x86\x56\x2a\x98\x66\x0b\x6b\xe8\x42\x52\x2d\xc4\x05\xe2\x0f\xbd\xe0\x19\x67\xa1\x02\xc4\xa0\xa2\xbd\xb9\xfb\xe6\x46\xf6\x6f\xa4\x9b\xed\x67\x9e\x34\xd2\xf6\xed\x14\x46\x97\xa3\x4a\xf3\xcf\x3f\x25\x34\x86\x47\x46\x39\x39\xcf\x0a\xe7\x9e\x0c\xcd\xdc\x40\x17\xd4\x76\xad\x58\x97\x17\xdd\xb6\xc8\x26\x13\x4e\xc9\x71\x73\xc7\x66\xce\xf9\x37\x36\x75\x57\x6c\xc0\xe6\x80\xfa\x19\xb4\x8f\x41\xa6\x83\x9a\xa1\xa0\xf0\x28\x88\x73\x01\xee\x04\xe8\x08\xd6\x0c\xee\x7f\x02\xd4\xcf\xb5\x44\xd7\xe4\xdb\x92\xf7\x0c\xb7\x2f\x5d\x65\x1c\x57\xca\xff\xd8\x13\xf3\xad\xcb\xb2\x8b\xd1\xd1\xac\x1f\xb5\x55\xa9\x77\x09\x0b\xf6\xee\xd6\x97\x89\xc9\x62\x57\x98\xbf\x6f\xea\xd4\xe4\x2f\xc0\xc4\x76\xbf\x4e\x36\x74\x56\xac\x8d\x8b\xaf\xf6\x70\xc3\x97\xe7\xd5\xee\x84\xe4\x1b\x25\xfe\x2d\x68\x9e\xab\x2b\xd8\x32\x48\x43\x84\xce\x1a\x9d\xf7\x2f\xfe\x6e\xfd\x95\x1b\x68\x7e\x3d\xa3\xf1\x69\xaf\xe4\x3e\x00\x6a\x1f\x9c\x60\x34\xd4\xbe\xf9\x09\x01\xd9\x29\x2a\xbb\xdb\x6d\xdb\x07\x6f\xfa\xa2\xfe\xbb\x45\x60\xd6\x17\x93\xc9\xc6\x10\x1b\x60\xf2\xcd\x85\xe0\xd8\x90\x28\x71\x38\xe3\xb3\xfe\xb7\x41\xe7\x89\xd6\xa3\xf0\xc7\x9f\x8b\xbf\x02\x00\x00\xff\xff\x3e\x4f\xaa\xa9\xff\x13\x00\x00")

func clusterBytebuildersDev_clusterauthinfotemplatesYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterBytebuildersDev_clusterauthinfotemplatesYaml,
		"cluster.bytebuilders.dev_clusterauthinfotemplates.yaml",
	)
}

func clusterBytebuildersDev_clusterauthinfotemplatesYaml() (*asset, error) {
	bytes, err := clusterBytebuildersDev_clusterauthinfotemplatesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cluster.bytebuilders.dev_clusterauthinfotemplates.yaml", size: 5119, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterBytebuildersDev_clustercredentialsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x57\x51\x6f\x1b\xb7\x0f\x7f\xf7\xa7\x20\xf0\x7f\xe8\x4b\x7d\x46\xf1\x1f\x86\xc1\x6f\x41\x3a\x0c\x41\x37\xb4\x68\x8a\xbe\xeb\x24\xfa\xac\x45\x27\x69\x24\xe5\xcc\x1d\xf6\xdd\x07\xe9\xee\xec\x8b\x73\x36\x92\x4b\x0a\x6c\x7a\x3b\x92\xa2\xc8\xdf\x8f\xd4\x89\x2a\xda\xaf\x48\x6c\x83\x5f\x83\x8a\x16\xff\x14\xf4\xf9\x8b\xab\xbb\x9f\xb8\xb2\x61\xb5\x7b\xb7\xb8\xb3\xde\xac\xe1\x3a\xb1\x84\xf6\x33\x72\x48\xa4\xf1\x3d\x6e\xac\xb7\x62\x83\x5f\xb4\x28\xca\x28\x51\xeb\x05\x80\x26\x54\x59\xf8\xc5\xb6\xc8\xa2\xda\xb8\x06\x9f\x9c\x5b\x00\x38\x55\xa3\xe3\x6c\x03\xa0\x62\xac\xee\x52\x8d\xe4\x51\xb0\x9c\xe2\x55\x8b\x6b\xa8\xf7\x82\x75\xb2\xce\x20\xf1\x02\xa0\x13\x6a\x97\x58\x90\x34\xa1\x41\x2f\x56\x39\xae\x7a\x51\x35\xb6\xaf\x0c\xee\x16\x1c\x51\xe7\x23\x1a\x0a\x29\x1e\xb6\x3e\xb6\xeb\x7c\xf7\xd1\x68\x25\xd8\x04\xb2\xc3\xf7\x12\x8e\xb1\xf5\x02\xea\xb3\x5e\xb6\xc1\xa0\xeb\x85\x2a\x46\xd6\xc1\x60\xf9\xec\x31\xea\x0e\xbc\x3e\xc4\x5a\x74\xce\xb2\x7c\x98\xd6\xff\x6a\x59\x8a\x4d\x74\x89\x94\x9b\xca\xb6\xa8\xd9\xfa\x26\x39\x45\x13\x06\x0b\x00\xd6\x21\xe2\xc1\xfb\x02\x60\xd7\x51\x5a\x12\x5a\xf6\x38\xee\xde\x29\x17\xb7\xea\x5d\xe7\x4f\x6f\xb1\x55\x5d\xbe\x00\x21\xa2\xbf\xfa\x74\xf3\xf5\xff\xb7\x0f\xc4\x00\x91\x42\x44\x92\x03\x34\xdd\x1a\xd5\xcc\x48\x0a\x60\x90\x35\xd9\x28\xa5\x98\xde\x64\x87\x9d\x15\x98\x5c\x2c\xc8\x20\x5b\x1c\x42\x43\xd3\xc7\x00\x61\x03\xb2\xb5\x0c\x84\x91\x90\xd1\x4b\x29\xa0\x07\x8e\x21\x1b\x29\x0f\xa1\xfe\x1d\xb5\x54\x70\x8b\x94\xdd\x00\x6f\x43\x72\x06\x74\xf0\x3b\x24\x01\x42\x1d\x1a\x6f\xbf\x1d\x7c\x33\x48\x28\x87\x3a\x25\xd8\x03\x7d\x5c\xd6\x0b\x92\x57\x0e\x76\xca\x25\x7c\x0b\xca\x1b\x68\xd5\x1e\x08\xf3\x29\x90\xfc\xc8\x5f\x31\xe1\x0a\x7e\x0b\x84\x60\xfd\x26\xac\x61\x2b\x12\x79\xbd\x5a\x35\x56\x86\x5e\xd1\xa1\x6d\x93\xb7\xb2\x5f\xe9\xe0\x85\x6c\x9d\x24\x10\xaf\x0c\xee\xd0\xad\xd8\x36\x4b\x45\x7a\x6b\x05\xb5\x24\xc2\x95\x8a\x76\x59\x42\xf7\x52\x1a\xae\x35\xff\x1b\xea\x8c\xdf\x3c\x88\x55\xf6\x99\x5e\x16\xb2\xbe\x19\x29\x4a\xcd\x5d\x60\x20\xd7\x1c\x58\x06\xd5\x6f\xed\xb2\x38\x02\x9d\x45\x19\x9d\xcf\x3f\xdf\x7e\x39\x94\x78\x21\xe3\x14\xfd\x82\xfb\x71\x23\x1f\x29\xc8\x80\x59\xbf\x41\xea\x48\xdc\x50\x68\x8b\x4f\xf4\x26\x06\xeb\xa5\x7c\x68\x67\xd1\x9f\xc2\xcf\xa9\x6e\xad\x64\xde\xff\x48\xc8\x92\xb9\xaa\xe0\x5a\x79\x1f\x04\x6a\x84\x14\x8d\x12\x34\x15\xdc\x78\xb8\x56\x2d\xba\x6b\xc5\xf8\xdd\x09\xc8\x48\xf3\x32\x03\xfb\x34\x0a\xc6\x77\xdf\xa9\x71\x87\xda\x48\x31\xdc\x4e\xc7\x35\xdd\x5f\x79\xa9\x7b\x3e\xde\x12\xa7\xca\x4b\x1b\xcb\x66\xad\x91\xf9\x03\xee\x6f\xde\x4f\xa9\xcf\x66\x73\x08\x14\x35\xa1\x5c\x0d\x5e\x66\xf8\xc8\xa4\x5a\x42\xf3\x78\xeb\x72\x1c\xdd\x84\xf6\xe4\xec\x47\x16\x67\xb0\x2d\x69\x7f\x4b\x84\xf3\x51\xeb\xaa\x74\x26\x64\xdd\xe6\xdb\x12\xfc\x3c\xcc\x53\x7d\xe8\xdd\x99\x31\x08\x7a\x35\x33\x81\x4b\x7c\x0d\xb8\x9c\x55\x75\x59\x4f\x71\xf9\x20\xa7\x09\x83\x21\xe2\xe7\xb0\x6c\x6c\x63\x45\xb9\x8f\x1a\x95\x9f\x4f\xb6\x84\x3b\xf4\xaf\x0c\x54\xf1\xf9\x9c\x54\x1a\xfd\x82\x72\x8d\x14\xb2\xcb\xd9\x2d\x4e\x3b\xab\xf1\x4a\xeb\x90\xfc\x9c\x8a\xbd\x04\xc4\x21\xb4\xc9\xfe\x1e\x1f\xfc\x1c\xb4\x9c\xf5\xc1\xbc\x00\xb0\x7f\x05\xe5\xe5\x2d\x76\x66\xc3\xe4\xf9\xe1\xde\x23\x4d\x91\xbc\x09\xd4\x2a\x59\xe7\x67\xcc\x8f\x3f\x9c\xf1\x98\x9f\x38\x4d\x79\x11\x8e\x57\x54\xfa\x0e\xe5\x05\xbf\x97\x68\xe7\xfd\x15\x5e\x56\xb4\x17\xff\x29\x25\xa4\x67\x95\xe2\x05\x92\x22\x85\x9d\x35\x48\xcf\x22\x8a\xb5\x72\x78\xaf\xf6\xf3\x71\x0d\xd4\x28\x6f\xbf\x95\xf7\xef\xbc\x1f\xc0\x77\xa8\xf0\x71\x50\xaf\xd1\x00\xbb\xe4\x84\xfe\xd3\x4d\x3c\xed\xaa\x1b\xb3\x4e\x44\x7d\xf3\x9e\x48\x87\xf2\x7a\xd2\x9b\x51\x94\x24\x7e\xea\xab\x31\xd4\xf9\x7a\x45\xf3\x0b\x7a\xa4\x33\x75\xf4\x60\x46\xf8\xf8\x68\x43\x1e\x18\xf2\x9b\xbd\x0d\x5c\x26\x2a\xf4\x02\xcd\x51\x3b\x9c\x30\xc1\xc0\x26\xd0\x30\xc9\x75\xa3\x44\x05\x37\x02\x3a\x10\x21\xc7\xe0\xcd\x61\x1a\x1b\xf4\x6f\x78\xe4\xf9\xed\x84\xc7\xfb\xad\xd5\xdb\x1c\x50\x3f\x0c\x40\xf0\xd0\xa6\x6e\x40\x84\x7a\x5f\x9c\x5d\x7d\xba\xe9\x87\x91\xea\xd5\xae\xc8\x49\x2e\x1e\x09\x3b\x20\xd6\x20\x94\x3a\xde\x59\x02\xa9\x06\xc7\x92\x54\x1f\x46\xba\x81\x89\x9e\x51\xf8\xeb\xef\xc5\x3f\x01\x00\x00\xff\xff\xe3\x7a\xb7\xef\x7d\x11\x00\x00")

func clusterBytebuildersDev_clustercredentialsYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterBytebuildersDev_clustercredentialsYaml,
		"cluster.bytebuilders.dev_clustercredentials.yaml",
	)
}

func clusterBytebuildersDev_clustercredentialsYaml() (*asset, error) {
	bytes, err := clusterBytebuildersDev_clustercredentialsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cluster.bytebuilders.dev_clustercredentials.yaml", size: 4477, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterBytebuildersDev_clusterinfosYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\x4f\x8f\x1b\xb7\x0f\xbd\xfb\x53\x10\xf8\x1d\xf6\x12\x8f\xb1\xbf\x14\x45\xe1\xdb\x62\x53\x14\x46\xda\x74\x91\x0d\x72\xd7\x48\xb4\xad\xae\x46\x54\x49\xca\xe9\xb6\xe8\x77\x2f\xa4\x99\xb1\xc7\x7f\x52\xd8\x40\x3a\x37\x91\xd4\x13\xf5\xf8\x44\x8e\x49\xfe\x33\xb2\x78\x8a\x4b\x30\xc9\xe3\x1f\x8a\xb1\xac\xa4\x79\xf9\x41\x1a\x4f\x8b\xdd\xfd\xec\xc5\x47\xb7\x84\xc7\x2c\x4a\xdd\x47\x14\xca\x6c\xf1\x1d\xae\x7d\xf4\xea\x29\xce\x3a\x54\xe3\x8c\x9a\xe5\x0c\xc0\x32\x9a\x62\xfc\xe4\x3b\x14\x35\x5d\x5a\x42\xcc\x21\xcc\x00\x82\x69\x31\x48\x89\x01\x30\x29\x35\x2f\xb9\x45\x8e\xa8\x58\x4f\x89\xa6\xc3\x25\xb4\xaf\x8a\x6d\xf6\xc1\x21\xcb\x0c\xa0\x37\xda\x90\x45\x91\x7d\x5c\x93\x34\xc3\xa2\x99\x46\x36\x0e\x77\x33\x49\x68\x0b\xf8\x86\x29\xa7\xfd\xa6\xf3\xb8\x1e\x75\xc8\xc3\x1a\xc5\x0d\xb1\x1f\xd7\x73\x38\x64\x35\x18\x78\xb8\xef\xbc\x23\x87\x61\x30\x9a\x94\xc4\x92\xc3\xba\x1c\xd8\xe9\x0f\x5c\xc5\x35\x55\x6b\xf0\xa2\xef\x4f\x3d\x3f\x7b\xd1\xea\x4d\x21\xb3\x09\xc7\x77\xab\x0e\xf1\x71\x93\x83\xe1\x23\xd7\x0c\x40\x2c\x25\xdc\x63\xcd\x00\x76\x7d\xd1\x6a\xe2\xf3\x81\xa9\xdd\xbd\x09\x69\x6b\xee\x7b\x24\xbb\xc5\xce\xf4\xf7\x02\xa0\x84\xf1\xe1\x69\xf5\xf9\xed\xf3\x91\x19\x20\x31\x25\x64\xdd\x53\xd0\x7f\x13\x55\x4c\xac\x00\x0e\xc5\xb2\x4f\x5a\xe5\x72\x57\x00\xfb\x28\x70\x45\x0e\x28\xa0\x5b\x1c\x53\x43\x37\xe4\x00\xb4\x06\xdd\x7a\x01\xc6\xc4\x28\x18\xb5\x4a\xe4\x08\x18\x4a\x90\x89\x40\xed\x6f\x68\xb5\x81\x67\xe4\x02\x03\xb2\xa5\x1c\x1c\x58\x8a\x3b\x64\x05\x46\x4b\x9b\xe8\xff\xdc\x63\x0b\x28\xd5\x43\x83\x51\x1c\xc8\x3d\x7c\x3e\x2a\x72\x34\x01\x76\x26\x64\x7c\x03\x26\x3a\xe8\xcc\x2b\x30\x96\x53\x20\xc7\x09\x5e\x0d\x91\x06\x7e\x21\x46\x28\xac\x2f\x61\xab\x9a\x64\xb9\x58\x6c\xbc\x8e\xaf\xc1\x52\xd7\xe5\xe8\xf5\x75\x61\x29\x2a\xfb\x36\x2b\xb1\x2c\x1c\xee\x30\x2c\xc4\x6f\xe6\x86\xed\xd6\x2b\x5a\xcd\x8c\x0b\x93\xfc\xbc\xa6\x1e\xb5\x3e\xa9\xce\xfd\x6f\xd4\x93\xdc\x1d\xe5\xaa\xaf\xa5\xbc\xa2\xec\xe3\x66\xe2\xa8\xda\xfa\x97\x0a\x14\x85\x81\x17\x30\xc3\xd6\xfe\x16\x07\xa2\x8b\xa9\xb0\xf3\xf1\xc7\xe7\x4f\x7b\x29\xd7\x62\x9c\xb2\x5f\x79\x3f\x6c\x94\x43\x09\x0a\x61\x3e\xae\x91\xfb\x22\xae\x99\xba\x8a\x89\xd1\x25\xf2\x51\xeb\xc2\x06\x8f\xf1\x94\x7e\xc9\x6d\xe7\xb5\xd4\xfd\xf7\x8c\xa2\xa5\x56\x0d\x3c\x9a\x18\x49\xa1\x45\xc8\xc9\x19\x45\xd7\xc0\x2a\xc2\xa3\xe9\x30\x3c\x1a\xc1\xff\xbc\x00\x85\x69\x99\x17\x62\xaf\x2b\xc1\xb4\xbb\x9d\x06\xf7\xac\x4d\x1c\x63\x17\x3a\x7c\x97\xdf\x57\xf9\x6a\xab\x44\xf7\xa0\xa7\x0e\x80\x35\x71\x67\x74\x59\xf4\xfb\xfd\x77\x67\xde\xfe\xec\xa2\xed\x4d\x6d\x05\xd3\x6f\x2c\xca\x39\xe6\x57\xae\x07\xf5\x99\x78\xf5\x26\xbc\xdf\xf7\xbe\x8b\x6f\xff\x3a\x90\x0f\xe4\xf0\x91\xf2\xa5\x0c\x26\xb7\x7a\xfb\xff\x9b\x6e\x15\xc8\xd6\x96\x71\x53\x42\xb5\x27\xde\xb2\x81\xbe\x44\xe4\xd5\xbb\x6f\x59\x8e\x0a\xf9\xe1\xd6\x44\x12\x53\xd1\xd5\xad\x7b\x76\xde\x21\xdf\xb4\x29\x7b\x77\x43\x7c\x79\xc6\x9e\xf1\x64\x4b\x3f\x7c\x4e\x4c\x03\x95\x27\xd6\xec\xdd\x55\x8f\x48\x8d\x66\xb9\xf6\x19\x51\x2b\xa5\x51\xb9\x9f\x30\x22\x7f\x45\x25\x47\x4d\xf3\xd7\xb3\x0d\xa5\x83\x96\x26\xd6\x91\xd4\x11\x83\x51\x61\x73\xf0\x8e\x27\x9c\xc1\x56\x65\x8c\xa3\xad\xef\xad\x0d\xac\x14\x2c\x31\xa3\x24\x8a\x6e\x3f\x9e\x46\xff\x9d\x4c\x90\xdf\x5c\x40\xfc\xb2\xf5\x76\x5b\x12\x1a\xba\x23\x50\x84\x2e\xf7\x13\x13\xda\xd7\x0a\xf6\xf0\xb4\x1a\xba\x73\xf3\x0d\xb5\x9a\xb6\x46\x2e\xe8\xf4\x88\xbb\xa7\x12\x33\x99\x12\x60\x33\x73\xa1\xab\xaf\x59\x3f\xe9\x71\xfc\x77\xb9\x5e\x5a\x17\x95\x70\x66\xec\xcb\xb0\x04\xe5\xdc\x0b\x4e\x94\xd8\x6c\x70\x6a\xc9\xed\x7e\xc2\x8e\x77\x19\xf4\x04\x7f\xfd\x3d\xfb\x27\x00\x00\xff\xff\x4b\x9a\xec\xa2\xee\x0a\x00\x00")

func clusterBytebuildersDev_clusterinfosYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterBytebuildersDev_clusterinfosYaml,
		"cluster.bytebuilders.dev_clusterinfos.yaml",
	)
}

func clusterBytebuildersDev_clusterinfosYaml() (*asset, error) {
	bytes, err := clusterBytebuildersDev_clusterinfosYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cluster.bytebuilders.dev_clusterinfos.yaml", size: 2798, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterBytebuildersDev_clustersYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x54\x4d\x8f\xe3\x36\x0c\xbd\xe7\x57\x10\xe8\x61\x2e\x1b\x07\x83\x16\x45\xe1\xdb\x20\x2d\x8a\x41\xbf\x06\x3b\x8b\xbd\xd3\x12\x63\x6b\x47\x96\x54\x92\x4a\x9b\x16\xfd\xef\x85\x64\x3b\xf1\x24\x8b\x69\x2f\x9b\x53\xf4\x48\x3d\xd1\xef\x91\xc4\xe4\x3e\x12\x8b\x8b\xa1\x05\x4c\x8e\xfe\x54\x0a\xe5\x24\xcd\xcb\x77\xd2\xb8\xb8\x3b\xde\x6f\x5e\x5c\xb0\x2d\xec\xb3\x68\x1c\xdf\x93\xc4\xcc\x86\xbe\xa7\x83\x0b\x4e\x5d\x0c\x9b\x91\x14\x2d\x2a\xb6\x1b\x00\xc3\x84\x05\xfc\xe0\x46\x12\xc5\x31\xb5\x10\xb2\xf7\x1b\x00\x8f\x1d\x79\x29\x39\x00\x98\x52\xf3\x92\x3b\xe2\x40\x4a\xf5\x95\x80\x23\xb5\xd0\x9d\x94\xba\xec\xbc\x25\x96\x0d\xc0\x04\x1a\x9f\x45\x89\xa5\x99\xff\x34\xeb\xac\xc6\xd2\x71\x23\x89\x4c\x21\xee\x39\xe6\x74\xbe\x70\x9b\x37\x31\xce\x35\x18\x54\xea\x23\xbb\xe5\xbc\x85\x4b\x45\x33\x80\x29\x89\x89\x96\xea\x71\x16\x61\xe2\xae\x88\x77\xa2\x3f\xad\xd1\x9f\x9d\x68\x8d\x24\x9f\x19\xfd\xa5\xf4\x0a\x8a\x0b\x7d\xf6\xc8\x67\x78\x03\x20\x26\x26\x6a\xe1\xd7\x52\x56\x42\x43\x76\x03\x70\x9c\xec\xa8\x65\x6d\x01\xad\xad\x2a\xa3\x7f\x62\x17\x94\x78\x1f\x7d\x1e\xc3\xb9\xe8\x4f\x12\xc3\x13\xea\xd0\x42\xb3\xf8\xd0\xdc\x98\x50\x73\x17\x3d\x1f\x7a\x9a\xcf\x7a\x2a\x8f\x5b\xd4\x09\x98\xc2\xc7\x7b\xf4\x69\xc0\xfb\xa9\x66\x33\xd0\x88\xed\x9c\x1f\x13\x85\x87\xa7\xc7\x8f\x5f\x3f\xbf\x82\x01\x12\xc7\x44\xac\x67\x2d\xa7\xdf\xaa\xb5\x56\x28\x80\x25\x31\xec\x92\xd6\x9e\xbb\x2b\x84\x53\x16\xd8\xd2\x53\x24\xa0\x03\x2d\x2a\x90\x9d\x6b\x80\x78\x00\x1d\x9c\x00\x53\x62\x12\x0a\x5a\x3f\xf1\x15\x31\x94\x24\x0c\x10\xbb\x4f\x64\xb4\x81\x67\xe2\x42\x03\x32\xc4\xec\x2d\x98\x18\x8e\xc4\x0a\x4c\x26\xf6\xc1\xfd\x75\xe6\x16\xd0\x58\x1f\xf5\xa8\x34\x5b\x78\xf9\x55\xd5\x03\x7a\x38\xa2\xcf\xf4\x0e\x30\x58\x18\xf1\x04\x4c\xe5\x15\xc8\x61\xc5\x57\x53\xa4\x81\x5f\x22\x13\xb8\x70\x88\x2d\x0c\xaa\x49\xda\xdd\xae\x77\xba\x8c\x94\x89\xe3\x98\x83\xd3\xd3\xce\xc4\xa0\xec\xba\xac\x91\x65\x67\xe9\x48\x7e\x27\xae\xdf\x22\x9b\xc1\x29\x19\xcd\x4c\x3b\x4c\x6e\x5b\x4b\x0f\x5a\xe7\x72\xb4\x5f\xf1\x3c\x84\x72\xf7\xaa\xd6\xc9\x4f\x51\x76\xa1\x5f\x05\x6a\xe7\xbe\xe1\x40\xe9\x61\x70\x02\x38\x5f\x9d\xbe\xe2\x22\x74\x81\x8a\x3a\xef\x7f\x78\xfe\x00\xcb\xd3\xd5\x8c\x6b\xf5\xab\xee\x97\x8b\x72\xb1\xa0\x08\xe6\xc2\x81\x78\x32\xf1\xc0\x71\xac\x9c\x14\x6c\x8a\x2e\x68\x3d\x18\xef\x28\x5c\xcb\x2f\xb9\x1b\x9d\x16\xdf\x7f\xcf\x24\x5a\xbc\x6a\x60\x8f\x21\x44\x85\x8e\x20\xa7\xd2\xbf\xb6\x81\xc7\x00\x7b\x1c\xc9\xef\x51\xe8\x8b\x1b\x50\x94\x96\x6d\x11\xf6\xff\x59\xb0\x5e\x91\xd7\xc9\x93\x6a\xab\xc0\xb2\xce\xfe\x3b\x51\x51\xb3\xbc\x4e\xfd\xfc\x28\x4e\xee\x48\x31\xc3\xfe\x48\x81\xb8\x0e\xcf\x75\xc6\x55\x63\xfc\x76\x73\xa1\x74\x49\x31\x6a\x8c\x52\xc7\x88\x82\x42\x7f\x89\x2e\x2f\xdc\xd0\x02\x1c\xe2\xec\xfc\xbc\x2a\x1b\x78\x54\x30\x91\x99\x24\xc5\x60\xcf\x13\x38\x87\xef\x64\xc5\xfb\x0e\xfe\x18\x9c\x19\x3e\xc3\xea\x64\xf1\x1f\x62\x80\x31\x4f\x3b\x01\xba\x53\xe5\x7a\x78\x7a\x9c\xfb\xaf\xb9\xb9\x7b\x88\x3c\xa2\xb6\x65\xb8\xbf\xfd\xe6\x26\x3a\xe9\x5d\x06\xbf\x9f\x77\xfd\x9b\x4e\xdc\x80\x93\x0c\x2d\x28\xe7\x69\xb5\x8a\x46\xc6\x9e\xd6\x48\xee\xce\x53\xbc\xf8\x30\xfb\x09\x7f\xff\xb3\xf9\x37\x00\x00\xff\xff\xd6\xd2\x64\xd4\x97\x07\x00\x00")

func clusterBytebuildersDev_clustersYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterBytebuildersDev_clustersYaml,
		"cluster.bytebuilders.dev_clusters.yaml",
	)
}

func clusterBytebuildersDev_clustersYaml() (*asset, error) {
	bytes, err := clusterBytebuildersDev_clustersYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cluster.bytebuilders.dev_clusters.yaml", size: 1943, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterBytebuildersDev_clusteruserauthsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x58\x4b\x6f\x1b\xb7\x13\xbf\xeb\x53\x0c\xf0\x3f\xe4\x12\xc9\x08\xfe\x45\x51\xe8\x66\x28\x46\x60\x24\x69\x8d\xd8\xc9\x9d\xcb\x9d\x5d\xb1\xda\x25\xb7\x33\x43\xd9\x4a\xd1\xef\x5e\x90\xfb\xd0\x4a\xfb\xb0\x62\x23\xe5\x8d\xe4\x70\x38\xbf\x79\x71\x86\xaa\x32\xdf\x90\xd8\x38\xbb\x06\x55\x19\x7c\x12\xb4\x61\xc6\xab\xdd\x6f\xbc\x32\xee\x6a\xff\x6e\xb1\x33\x36\x5d\xc3\xc6\xb3\xb8\xf2\x0b\xb2\xf3\xa4\xf1\x3d\x66\xc6\x1a\x31\xce\x2e\x4a\x14\x95\x2a\x51\xeb\x05\x80\x26\x54\x61\xf1\xc1\x94\xc8\xa2\xca\x6a\x0d\xd6\x17\xc5\x02\xa0\x50\x09\x16\x1c\x68\x00\x54\x55\xad\x76\x3e\x41\xb2\x28\x18\x6f\xb1\xaa\xc4\x35\x24\x07\xc1\xc4\x9b\x22\x45\xe2\x05\x40\xbd\xa8\x0b\xcf\x82\xe4\x19\x49\x79\xd9\xf2\xaa\x59\x58\xf5\xa9\x57\x29\xee\x17\x5c\xa1\x0e\x17\xe4\xe4\x7c\xd5\x1d\x1c\xd2\xd5\x9c\x1b\x59\xb4\x12\xcc\x1d\x99\x76\xbe\x84\xa3\x64\xcd\x02\x35\x98\x97\xa5\x4b\xb1\x68\x16\x55\x55\xb1\x76\x29\xc6\x69\xa3\xa1\xfa\xc2\xaf\x8c\x74\xed\x65\x1b\x77\x0a\xc3\xf2\x71\x6c\xf7\x93\x61\x89\x14\x55\xe1\x49\x15\x43\x9c\x71\x93\x8d\xcd\x7d\xa1\x68\xb0\xbd\x00\x60\xed\x2a\xec\xf8\x2e\x00\xf6\xb5\x21\x23\x90\x65\xa3\xbd\xfd\x3b\x55\x54\x5b\xf5\xae\xe6\xa6\xb7\x58\xaa\x1a\x27\x80\xab\xd0\x5e\xdf\xdd\x7e\xfb\xff\xfd\xc9\x32\x40\x45\xae\x42\x92\x4e\x25\xf5\xe8\x79\x4a\x6f\x15\x20\x45\xd6\x64\x2a\x89\x2e\xf4\x26\x30\xac\xa9\x20\x0d\x2e\x82\x0c\xb2\xc5\x56\x34\x4c\x1b\x19\xc0\x65\x20\x5b\xc3\x40\x58\x11\x32\x5a\x89\x6e\x73\xc2\x18\x02\x91\xb2\xe0\x92\x3f\x51\xcb\x0a\xee\x91\x02\x1b\xe0\xad\xf3\x45\x0a\xda\xd9\x3d\x92\x00\xa1\x76\xb9\x35\xdf\x3b\xde\x0c\xe2\xe2\xa5\x85\x12\x6c\x94\x7c\x1c\xc6\x0a\x92\x55\x05\xec\x55\xe1\xf1\x2d\x28\x9b\x42\xa9\x0e\x40\x18\x6e\x01\x6f\x7b\xfc\x22\x09\xaf\xe0\xb3\x23\x04\x63\x33\xb7\x86\xad\x48\xc5\xeb\xab\xab\xdc\x48\x1b\x21\xda\x95\xa5\xb7\x46\x0e\x57\xda\x59\x21\x93\x78\x71\xc4\x57\x29\xee\xb1\xb8\x62\x93\x2f\x15\xe9\xad\x11\xd4\xe2\x09\xaf\x54\x65\x96\x51\x74\x2b\x31\xcc\xca\xf4\x7f\xad\x7f\xf1\x9b\x13\x59\xe5\x10\xcc\xcb\x42\xc6\xe6\xbd\x8d\xe8\x6b\x33\x16\x08\xde\x06\x86\x41\x35\x47\x6b\x14\x47\x45\x87\xa5\xa0\x9d\x2f\x37\xf7\x0f\x9d\x6b\x47\x63\x9c\x6b\x3f\xea\xfd\x78\x90\x8f\x26\x08\x0a\x33\x36\x43\xaa\x8d\x98\x91\x2b\x23\x4f\xb4\x69\xe5\x8c\x95\x38\xd1\x85\x41\x7b\xae\x7e\xf6\x49\x69\x24\xd8\xfd\x2f\x8f\x2c\xc1\x56\x2b\xd8\x28\x6b\x9d\x40\x82\xe0\xab\x54\x09\xa6\x2b\xb8\xb5\xb0\x51\x25\x16\x1b\xc5\xf8\xd3\x0d\x10\x34\xcd\xcb\xa0\xd8\xcb\x4c\xd0\xcf\x78\xe7\xc4\xb5\xd6\x7a\x1b\x6d\x56\x3a\x8e\xf1\xf8\x0a\x23\x44\xf6\x1d\xb9\xbd\x49\x91\xce\xf7\xce\xec\x7c\xdd\x23\x8d\x77\x98\xcc\x60\xb0\xba\x8e\x79\x3a\xb2\x0a\x10\x75\x0c\xac\x90\x65\x72\x73\x1e\x5f\x61\x64\x8e\xa2\xb5\x8e\x59\xaf\x4b\x9c\x03\xea\x69\xc1\xa3\xf0\xdf\x3d\xe1\xc6\xd9\xcc\xe4\x63\xdb\xcf\x1d\x87\x3a\xc7\x70\x74\xb1\xa5\x49\xa7\x68\x26\xad\xd2\x1f\xb5\xef\xbd\x9a\x4b\x04\x13\xd3\xfe\xab\xf8\xa0\xdd\x1b\x72\xb6\x44\x2b\xaf\xe2\x23\x68\xd5\x6b\x51\x85\xc0\x33\x84\x13\x2c\x96\x27\x26\x98\x20\xe9\x94\x3b\xb1\xdf\x83\x3b\x41\xd1\x01\x19\xdd\x9f\x08\xa4\x76\xc4\x87\x6d\xe6\xe0\x04\xf8\x69\xe0\xf5\x5b\x39\x58\x9e\x11\x43\x3d\xf2\x74\x98\x3e\x13\x25\xcc\xbe\xc4\x2f\xae\xc0\x6b\xb2\x2f\x80\xd1\xe7\x70\xf3\x54\xbf\x65\xb7\xef\x5f\xc4\x48\x2b\xbd\x9d\xd5\x64\xe2\x5c\x81\x6a\x2c\x6b\x34\x29\xe2\x85\x17\x67\x8e\x1e\x15\xa5\xf7\xc8\xa1\x28\xf8\xfd\x19\x7b\x4e\x4b\x41\x98\x0f\xca\x91\x0b\x45\xe0\xcb\xee\x9e\x38\x3f\xe3\x1a\x75\x70\x6c\x82\x03\x64\x21\xf9\xe2\xfb\xc1\x43\x01\xe7\xb9\x7c\x33\x76\x26\x64\x1f\x51\xc6\x32\xdc\xdd\x7c\x5e\xa2\x0d\xc5\x66\x0a\xe1\xd9\x89\xef\xed\x98\x63\x34\x97\x83\x0e\x75\x51\x66\x0a\x8c\xd9\xfd\xe1\xd3\xfd\x30\x95\x67\x8e\x4a\x25\x75\xc9\x3d\x01\x6f\x14\x7b\x7d\xc3\x47\x3c\x5c\x0c\xab\xa1\x7d\x06\x4e\x27\xfc\x08\xae\x1d\x1e\x7e\x1a\x9a\xba\x26\x1f\xf3\xe3\x99\x63\xf9\x0e\x5f\x1c\xfe\x5a\x23\xf3\x83\xdb\xe1\xcb\xfc\x16\x9f\x2a\x43\x87\xf1\xa3\xad\x16\x8c\x95\x5f\x7f\x99\x61\x1e\x4a\xe0\x3c\x76\x0c\xe7\x83\x30\x23\xe4\xed\x4b\xc5\x9b\x09\x0b\x53\x56\x48\xec\xac\x92\x91\x78\x3b\xf1\x9a\xdb\x23\x65\x28\x63\x43\x6d\x12\x9a\x9e\x90\xa2\x43\x61\xaf\xb4\x2c\x15\x0f\x5d\x60\x46\xb0\xde\xdd\x1f\x42\x6b\x38\x62\x98\x29\x09\x6a\xfa\x56\x8e\xbc\x9e\x89\xeb\xb3\x1c\x8a\x62\x04\xcb\x51\xe3\x5f\xa0\x3c\x45\xa4\x0e\xd3\xf2\x87\xee\xf1\xe6\x49\x68\x24\xf4\x54\x9a\xc6\x7e\x5c\x15\x77\xb3\x1e\x78\x02\x35\xf2\xfa\x16\x1b\x84\x52\xf1\xae\x69\xd6\xe2\x9c\x5d\x70\x65\x71\x89\xcf\x40\x2b\x0b\x39\x5a\x24\x35\x12\x5f\x33\x80\x9f\x75\xe7\x69\xd0\xd3\x36\xe9\x74\x70\x4c\x29\x47\xec\xb1\x4b\x08\x61\x30\xec\x26\xa1\xa9\x76\x7b\xea\x4c\xa3\x6b\x4d\x39\xd3\xa8\x23\x87\x3a\x79\xaa\xc8\x3d\x91\xf8\x63\x47\x78\x94\x33\x33\x41\xc4\xc0\xa2\xa9\x2d\xbb\xf2\x5b\x77\x5d\xfc\xc5\xfa\xab\x14\xf3\xa3\xa3\x91\x82\xe6\x44\x8e\xbb\x86\xac\x75\xe2\xf6\x58\xbc\x3a\x51\x6c\xf4\x79\xaf\x20\x6e\xcc\x52\x17\xf6\x08\x73\x02\x4f\xe6\xcc\x99\x43\x32\x9e\x8b\x4e\x20\xc6\x7c\xd5\xe2\x4b\x50\x51\x68\x4c\xe3\x5a\xc0\x38\x40\x77\x86\x65\xba\xbc\xf9\x21\x74\xc1\x93\xc6\xde\x91\xf9\xac\x3c\x97\x91\xdb\xb4\xf7\x0c\xfa\xaf\x6d\x76\x3c\xcf\x96\xff\xb1\x81\xc7\x0b\xec\x65\xef\x91\x3d\xdb\xa8\x35\x76\x51\x0f\x2d\x4a\x3c\x5f\xda\x45\xbb\x24\x76\x30\xe9\x87\x3a\x63\x8d\x96\x88\x27\x1a\xfc\x63\x70\xa0\xd5\x65\xe9\x38\xfe\x30\x85\xaa\x2a\x3f\xee\xb6\x37\x4c\xf6\xd3\xf1\x67\xab\xfe\x5a\x59\xc1\xad\x80\x76\x44\xc8\x95\xb3\x69\xf7\x3b\xd5\xee\xbf\xe1\x1e\xe7\xb7\x23\x1c\x1f\xb7\x46\x6f\x83\x40\xcd\xe7\x08\x38\x0b\xa5\xaf\x3f\xcc\x20\x39\x44\x66\xd7\x77\xb7\xcd\xe7\xcc\x74\x71\xf4\xa3\x0e\x38\x6a\x8b\xc1\x62\xad\x88\x35\x08\xf9\xfa\x69\x60\x71\xa4\x72\xec\xaf\xf8\xa4\xfb\xe2\x6a\x2d\xd1\x58\x14\xfe\xfe\x67\xf1\x6f\x00\x00\x00\xff\xff\x9e\x24\x0d\x4d\x83\x16\x00\x00")

func clusterBytebuildersDev_clusteruserauthsYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterBytebuildersDev_clusteruserauthsYaml,
		"cluster.bytebuilders.dev_clusteruserauths.yaml",
	)
}

func clusterBytebuildersDev_clusteruserauthsYaml() (*asset, error) {
	bytes, err := clusterBytebuildersDev_clusteruserauthsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cluster.bytebuilders.dev_clusteruserauths.yaml", size: 5763, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"cluster.bytebuilders.dev_clusterauthinfotemplates.yaml": clusterBytebuildersDev_clusterauthinfotemplatesYaml,
	"cluster.bytebuilders.dev_clustercredentials.yaml":       clusterBytebuildersDev_clustercredentialsYaml,
	"cluster.bytebuilders.dev_clusterinfos.yaml":             clusterBytebuildersDev_clusterinfosYaml,
	"cluster.bytebuilders.dev_clusters.yaml":                 clusterBytebuildersDev_clustersYaml,
	"cluster.bytebuilders.dev_clusteruserauths.yaml":         clusterBytebuildersDev_clusteruserauthsYaml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"cluster.bytebuilders.dev_clusterauthinfotemplates.yaml": {clusterBytebuildersDev_clusterauthinfotemplatesYaml, map[string]*bintree{}},
	"cluster.bytebuilders.dev_clustercredentials.yaml":       {clusterBytebuildersDev_clustercredentialsYaml, map[string]*bintree{}},
	"cluster.bytebuilders.dev_clusterinfos.yaml":             {clusterBytebuildersDev_clusterinfosYaml, map[string]*bintree{}},
	"cluster.bytebuilders.dev_clusters.yaml":                 {clusterBytebuildersDev_clustersYaml, map[string]*bintree{}},
	"cluster.bytebuilders.dev_clusteruserauths.yaml":         {clusterBytebuildersDev_clusteruserauthsYaml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
