// Package crds Code generated by go-bindata. (@generated) DO NOT EDIT.
// sources:
// cloud.bytebuilders.dev_cloudproviders.yaml
// cloud.bytebuilders.dev_credentials.yaml
// cloud.bytebuilders.dev_machinetypes.yaml
// cluster.bytebuilders.dev_clusterauthinfotemplates.yaml
// cluster.bytebuilders.dev_clusterinfos.yaml
// cluster.bytebuilders.dev_clusteruserauths.yaml
// identity.bytebuilders.dev_orgusers.yaml
// identity.bytebuilders.dev_teams.yaml
// identity.bytebuilders.dev_teamusers.yaml
package crds

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _cloudBytebuildersDev_cloudprovidersYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x57\x41\x6f\x1b\x37\x13\xbd\xeb\x57\x0c\xf0\x7d\x40\xa4\xa6\xbb\xaa\xd1\x4b\xab\x8b\x51\xb8\x46\x11\xa4\x46\x0d\xdb\xc8\xc5\x71\x81\xd1\xee\x48\x62\xc5\x25\x59\x72\x28\x44\x81\x7f\x7c\x41\xee\xca\x2b\xad\xc4\x95\xec\xd4\xcd\x25\x3c\x89\x33\xc3\x47\xce\xbc\xe1\x5b\x0a\x8d\xf8\x40\xd6\x09\xad\x26\x80\x46\xd0\x27\x26\x15\x66\x2e\x5f\xfe\xe4\x72\xa1\xc7\xab\xb3\xc1\x52\xa8\x72\x02\x17\xde\xb1\xae\x6e\xc8\x69\x6f\x0b\xfa\x95\x66\x42\x09\x16\x5a\x0d\x2a\x62\x2c\x91\x71\x32\x00\x28\x2c\x61\x30\xde\x89\x8a\x1c\x63\x65\x26\xa0\xbc\x94\x03\x00\x89\x53\x92\x2e\xc4\x00\xa0\x31\xf9\xd2\x4f\xc9\x2a\x62\x8a\xbb\x28\xac\x68\x02\xd3\x35\xd3\xd4\x0b\x59\x92\x75\x03\x80\xda\x58\x48\xed\x4b\x63\xf5\x4a\x04\x73\x1e\xa7\xf9\x76\x64\x5e\xd2\x6a\xe0\x0c\x15\x01\x7c\x6e\xb5\x37\xcd\xa2\xfd\xa8\x1a\xb3\x39\x45\x81\x4c\x73\x6d\xc5\x66\x9e\xd5\xab\x9a\xdf\x68\x8c\x2b\x74\x49\x71\xda\x54\x20\xb8\xaf\x9b\x93\x44\xbb\x14\x8e\xdf\xef\xfb\x7e\x17\x8e\xa3\xdf\x48\x6f\x51\x76\x73\x88\x2e\x27\xd4\xdc\x4b\xb4\x1d\xe7\x00\xc0\x15\xda\x50\x40\xf4\x8e\xa3\x61\x55\x13\x14\x8f\x99\x35\x55\x59\x9d\xa1\x34\x0b\x3c\xab\xb1\x8a\x05\x55\x58\x67\x01\xa0\x0d\xa9\x5f\xae\xdf\x7d\xf8\xf1\x76\xc7\x0c\x60\xac\x36\x64\xf9\x29\xe1\x7a\x6c\x75\xc0\x96\x15\xa0\x24\x57\x58\x61\x38\xb6\xc6\x9b\x00\x58\x47\x41\x19\xa8\x27\x07\xbc\xa0\xcd\xd1\xa8\x6c\xce\x00\x7a\x06\xbc\x10\x0e\x2c\x19\x4b\x8e\x14\xc7\x76\xd8\x01\x86\x10\x84\x0a\xf4\xf4\x2f\x2a\x38\x87\x5b\xb2\x01\x06\xdc\x42\x7b\x59\x42\xa1\xd5\x8a\x2c\x83\xa5\x42\xcf\x95\xf8\xfc\x84\xed\x80\x75\xdc\x54\x22\x53\x53\xe0\x76\x08\xc5\x64\x15\x4a\x58\xa1\xf4\xf4\x3d\xa0\x2a\xa1\xc2\x35\x58\x0a\xbb\x80\x57\x5b\x78\x31\xc4\xe5\x70\xa5\x2d\x81\x50\x33\x3d\x81\x05\xb3\x71\x93\xf1\x78\x2e\x78\xd3\xf9\x85\xae\x2a\xaf\x04\xaf\xc7\x85\x56\x6c\xc5\xd4\xb3\xb6\x6e\x5c\xd2\x8a\xe4\xd8\x89\x79\x86\xb6\x58\x08\xa6\x82\xbd\xa5\x31\x1a\x91\xc5\xa3\x2b\x8e\xd7\xa7\x2a\xff\x67\x9b\xbb\xe2\xde\xec\x9c\x95\xd7\x81\x5e\xc7\x56\xa8\xf9\x96\x23\xf6\x58\x0f\x03\xa1\xcf\x40\x38\xc0\x66\x69\x9d\x45\x5b\xe8\x60\x0a\xd5\xb9\xb9\xbc\xbd\x83\xcd\xd6\x91\x8c\x6e\xf5\x63\xdd\xdb\x85\xae\xa5\x20\x14\x4c\xa8\x19\xd9\x9a\xc4\x99\xd5\x55\xc4\x24\x55\x1a\x2d\x14\xc7\x49\x21\x05\xa9\x6e\xf9\x9d\x9f\x56\x82\x03\xef\x7f\x7b\x72\x1c\xb8\xca\xe1\x02\x95\xd2\x0c\x53\x02\x6f\x4a\x64\x2a\x73\x78\xa7\xe0\x02\x2b\x92\x17\xe8\xe8\xd5\x09\x08\x95\x76\x59\x28\xec\x69\x14\x6c\x2b\x59\x37\xb8\xae\xda\x96\x63\xa3\x38\x09\xbe\x76\x04\xe1\xd6\x50\xb1\x73\x6f\x4a\x72\xc2\x86\xce\x66\x64\x0a\xf7\x61\x5f\x5b\x36\xe3\xf0\xad\x8d\xc7\xc5\x62\x21\x14\xdd\x85\x2c\xbb\x3e\x00\xc1\x54\x1d\x30\xf7\x01\xd6\x23\x25\x08\x89\x44\x9f\x2b\x0d\x09\x4c\xe8\x48\xc6\x73\x45\x22\x09\x7b\x50\x3c\x9e\x23\x17\x49\xe4\xaf\x2b\x23\xed\x48\x74\x73\x3b\xf6\xa5\x25\xc5\xe5\x8b\x44\x26\x59\xa0\x28\x22\x5f\x20\x37\x3d\xc0\x1b\x19\x7a\x99\xf0\x24\x81\xbf\x96\x20\x3d\x83\xcc\xc3\x22\xd5\x05\xd8\x93\xab\x76\xec\x0b\x57\x3b\x76\xba\xe1\xaa\xd5\x97\xe3\x02\xb6\x15\x9c\xc0\x3e\xa6\x3b\xd0\xbe\xc9\xd6\xe9\x88\x13\x2a\x14\x81\x8c\xef\xc3\x40\xb5\xfe\x63\xd6\x17\x90\x35\xdb\x04\x9d\x98\x77\x14\xf9\x70\xe4\x91\x03\x01\x18\xe4\xa0\x39\x13\xf8\x73\xf8\xf1\xed\x63\x36\x3a\x1f\x0e\xef\x7f\xc8\x7e\x7e\x78\x3b\xfc\x98\xc7\x1f\xdf\x8d\xce\x47\x8f\x9b\xc9\xdb\xd1\x68\x38\xbc\x7f\x7f\xf5\xdb\xdd\xf5\xe5\x83\x18\x3d\xde\x2b\x5f\x2d\xeb\xd9\xe3\xf0\x9e\x2e\x1f\x4e\x04\x19\x8d\xce\xff\xdf\x73\xa8\x4f\x59\xfb\x10\xcf\x84\xe2\x4c\xdb\xac\xce\x64\x02\x6c\x7d\xfa\x6e\x97\xe1\x3e\x07\xba\x92\xca\x02\x4f\x5c\x4d\xb5\x96\x84\xdd\x57\xe0\x36\x56\xdb\x75\x5f\x4a\x7c\x29\xdc\xf2\x1b\xf3\xaf\xc9\xbc\xc5\xea\x5b\x81\x5f\xb5\xc0\x34\xdf\xfc\xdd\x4b\x8d\xe4\xe3\xae\x1d\x27\x96\xae\x0e\x43\x6b\x71\x9d\x7e\x42\x2d\x7b\xc5\xf4\xa4\x9d\x3e\x6b\xd5\x27\xfc\xff\x6d\x4a\xe1\xb1\x10\x3e\x5f\xa9\xed\xb2\xf0\xfd\x48\xfa\x2c\x56\x49\x9f\x5b\xa6\xd6\x1d\xf9\x2e\xf7\xba\xd3\x19\x25\x7b\x25\x59\xce\x9d\x4f\xfc\x4d\x5c\xde\xff\x65\xaf\x63\x5e\xf0\x47\x42\xea\x02\xfb\x34\xfd\x28\x9d\x75\x72\x2f\x5e\xde\xdb\x72\x47\xda\xed\x84\x56\xeb\x6f\xb3\xbe\x16\xcb\x9a\xcc\xfe\xad\x36\x38\xb8\x68\xcf\xe8\xc2\xab\xbb\xdc\xd2\x1e\xc7\xda\xe2\x9c\x1a\xcb\x3f\x01\x00\x00\xff\xff\xae\x1f\x69\x9e\x0a\x14\x00\x00")

func cloudBytebuildersDev_cloudprovidersYamlBytes() ([]byte, error) {
	return bindataRead(
		_cloudBytebuildersDev_cloudprovidersYaml,
		"cloud.bytebuilders.dev_cloudproviders.yaml",
	)
}

func cloudBytebuildersDev_cloudprovidersYaml() (*asset, error) {
	bytes, err := cloudBytebuildersDev_cloudprovidersYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cloud.bytebuilders.dev_cloudproviders.yaml", size: 5130, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cloudBytebuildersDev_credentialsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x58\xc1\x8e\x1b\x37\x0f\xbe\xfb\x29\x08\xfc\x87\x5c\x62\x1b\xc1\x5f\x14\x85\x6f\x8b\xdd\x22\x58\x24\x6d\x82\xec\x36\x77\x59\xa2\xc7\xaa\x35\x92\x4a\x51\x76\x36\x45\xdf\xbd\x90\x66\xc6\x9e\xb5\xe5\xd9\xf5\x6c\x82\xb6\x73\x33\x29\x52\xe4\xf7\x51\x14\x2d\xe1\xf5\x67\xa4\xa0\x9d\x5d\x80\xf0\x1a\xbf\x30\xda\xf4\x2b\xcc\x36\x3f\x85\x99\x76\xf3\xed\x9b\xc9\x46\x5b\xb5\x80\xeb\x18\xd8\xd5\x9f\x30\xb8\x48\x12\x6f\x70\xa5\xad\x66\xed\xec\xa4\x46\x16\x4a\xb0\x58\x4c\x00\x24\xa1\x48\xc2\x7b\x5d\x63\x60\x51\xfb\x05\xd8\x68\xcc\x04\xc0\x88\x25\x9a\x90\xd6\x00\x08\xef\x67\x9b\xb8\x44\xb2\xc8\x98\x77\xb1\xa2\xc6\x05\x2c\x1f\x18\x97\x51\x1b\x85\x14\x26\x00\x8d\x50\x12\x2a\xb4\xac\x85\x09\x33\x69\x5c\x54\xb3\xfe\xb2\x99\xc2\xed\x24\x78\x94\xc9\x73\x45\x2e\xfa\x05\x9c\x59\xd5\x38\x6c\x43\x90\x82\xb1\x72\xa4\xbb\xdf\x53\x38\x04\xd4\x0a\xa8\x4d\x75\x5a\x3b\x85\xa6\x15\x0a\xef\x83\x74\x0a\xf3\xcf\x16\x98\x7d\x80\x59\x68\x74\xe0\x77\x47\x8a\xf7\x3a\x70\x56\x7a\x13\x49\x98\x47\x49\x65\x79\xd0\xb6\x8a\x46\x50\x5f\x33\x01\x08\xd2\x79\x5c\xc0\xb5\x89\x81\x91\x26\x00\xdb\x86\xab\x1c\xf4\xb4\x05\x68\xfb\x46\x18\xbf\x16\x6f\x1a\x47\x72\x8d\xb5\x68\x72\x02\x70\x1e\xed\xd5\xc7\xdb\xcf\xff\xbf\x7b\x24\x06\xf0\xe4\x3c\x12\xef\xd3\x6f\xbe\x5e\x31\xf4\xa4\x00\x0a\x83\x24\xed\x39\x57\xc9\xab\xe4\xb0\x59\x05\x2a\x55\x01\x06\xe0\x35\x76\xa1\xa1\x6a\x63\x00\xb7\x02\x5e\xeb\x00\x84\x9e\x30\xa0\xe5\x5c\x19\x8f\x1c\x43\x5a\x24\x2c\xb8\xe5\xef\x28\x79\x06\x77\x48\xc9\x0d\x84\xb5\x8b\x46\x81\x74\x76\x8b\xc4\x40\x28\x5d\x65\xf5\xd7\xbd\xef\x00\xec\xf2\xa6\x46\x30\xb6\xd0\x1e\x3e\x6d\x19\xc9\x0a\x03\x5b\x61\x22\xbe\x06\x61\x15\xd4\xe2\x01\x08\xd3\x2e\x10\x6d\xcf\x5f\x5e\x12\x66\xf0\x8b\x23\x04\x6d\x57\x6e\x01\x6b\x66\x1f\x16\xf3\x79\xa5\xb9\x3b\x04\xd2\xd5\x75\xb4\x9a\x1f\xe6\xd2\x59\x26\xbd\x8c\xec\x28\xcc\x15\x6e\xd1\xcc\x83\xae\xa6\x82\xe4\x5a\x33\x4a\x8e\x84\x73\xe1\xf5\x34\x87\x6e\x39\x9f\xa4\x5a\xfd\xaf\xab\xa5\xf0\xea\x51\xac\xfc\x90\xe8\x0d\x4c\xda\x56\x3d\x45\xae\xab\x01\x06\x52\x79\x81\x0e\x20\x5a\xd3\x26\x8b\x03\xd0\x49\x94\xd0\xf9\xf4\xf3\xdd\xfd\xbe\x8c\x33\x19\xc7\xe8\x67\xdc\x0f\x86\xe1\x40\x41\x02\x4c\xdb\x15\x52\x43\xe2\x8a\x5c\x9d\x7d\xa2\x55\xde\x69\xcb\xf9\x87\x34\x1a\xed\x31\xfc\x21\x2e\x6b\xcd\x89\xf7\x3f\x22\x06\x4e\x5c\xcd\xe0\x5a\x58\xeb\x18\x96\x08\xd1\x2b\xc1\xa8\x66\x70\x6b\xe1\x5a\xd4\x68\xae\x45\xc0\xef\x4e\x40\x42\x3a\x4c\x13\xb0\xcf\xa3\xa0\xdf\xd4\x8e\x17\x37\xa8\xf5\x14\x5d\xff\x39\x7c\xe5\xf3\x95\x3e\xb1\x3b\x11\x0d\x2d\xcf\x26\x52\x62\x08\xef\xf0\xe1\xf6\xa6\xa4\x3e\x9b\xc3\x3e\x3c\x94\x84\x7c\xd5\x79\x19\xe1\x23\x51\xa9\x09\xd5\xa9\xe9\xb4\x1f\x5d\x41\x7b\xb4\xf7\xc9\x8a\x33\x88\xe6\xb4\xbf\x46\xc2\x4b\xb1\x6a\x2a\x72\x24\x50\x8d\xf1\x5d\x0e\x79\x1c\xd2\x71\xb9\x3f\xa7\x23\x63\x60\xb4\x62\x64\x02\x43\x2c\x75\xb8\x9c\x55\x35\x59\x97\x18\x7c\x94\x53\x61\x41\x17\xf1\xc5\xdc\xde\xb1\x23\x51\x5d\x4c\xb1\x90\xd2\x45\x3b\x8e\xa0\xcd\xf7\x28\xff\x14\x4d\x41\xb3\xb9\xac\xdc\x95\xae\x34\x0b\xe3\x24\x0a\x7b\x29\x24\xec\x36\x58\x30\x7a\x51\x62\xd9\xe7\x25\x09\x54\xce\x55\x06\xaf\xd3\xf0\x75\x69\xfc\x9e\x5c\x72\x38\xba\xbf\xd1\x56\x4b\xbc\x1a\x5d\x17\x43\x30\xec\x43\x2b\x36\xb7\xfe\xc6\x97\x63\xf5\xe1\x2a\xf2\x7a\xdc\x6d\x70\x3f\x92\xf1\x7f\xba\x43\xe2\x17\xaf\xe9\xcc\x19\x5c\x39\xaa\x05\x2f\xd2\xfc\xf6\xe3\x0f\x03\xce\xd3\x7c\x57\xe5\x71\xf8\xf8\x23\x5c\x11\x86\xf5\x78\x70\xf2\xc0\x5d\x84\x1d\x40\x33\xd6\x67\x54\x4f\xfa\xed\x16\x08\x22\x71\xda\x15\x9e\xbe\x5e\xef\x8b\x87\x71\x7c\x5b\x1f\x28\x4d\xa3\xad\x53\x17\x37\xe5\x7f\x45\x07\xca\xff\x87\xce\x18\x14\xf7\x77\x3b\x8b\x54\x3a\x0a\xc3\xa5\x38\x54\x86\x5e\xc8\x4d\xe9\x6c\x3c\x71\xa8\xbd\x1e\x37\x99\xbd\xac\x77\x0e\x16\x5e\x0e\xe9\xa2\x8e\x38\x40\x4d\x90\xc2\xe0\x4e\x14\x52\x1c\x06\xc6\x51\x25\xac\xfe\x9a\xff\x3a\x8e\x9b\xa7\xbe\x43\x61\xf6\x83\xfa\x16\x75\x1b\x76\x7a\x75\x71\xc9\x28\x57\x0b\x3d\x0e\x13\x2f\x42\xd8\x39\x2a\xe4\xf6\x0c\x63\xc2\x6a\x34\x17\x79\x52\x4c\x97\xde\x6f\x9f\xde\xbf\xc0\xc3\xcd\xf8\xd4\x5f\x30\x5e\x77\xc6\xbf\x16\xbb\xcc\x33\xcc\x63\x40\x2a\xb7\xa8\x27\x8d\x07\x27\x94\x96\xcd\x82\xaa\xdb\xf1\x92\x62\xcc\xaa\x13\x03\xb4\xb1\x2e\x6d\x7e\xb5\x3b\x7e\x53\xc8\xd2\x34\xde\x9f\x93\xb7\x63\x7f\x41\x7d\xd3\x8c\xc0\x1f\xd2\x08\x5c\x50\xbf\x3d\x0c\x98\x67\xb5\x79\xa4\x2a\x68\xdf\xe7\x5b\xad\xa0\xf8\x98\xfb\x75\x41\x71\xd7\x76\xac\x82\xea\x73\x34\x7c\x3a\x7e\x0c\x10\xb8\x4d\x06\xff\xc1\x2b\xb5\xec\xaa\x79\x78\x3c\x12\xb5\x57\xe9\x91\x34\x79\x9e\x3c\x63\xab\xc0\x82\x63\x78\xee\x1b\x8a\x5b\xa6\xc9\x1b\xd5\x5b\xb4\x48\x67\xae\x86\x47\x2f\x66\x1f\x4e\x0c\x40\x37\xaf\x96\xb5\x0b\xf9\x7d\x11\x2d\x43\x75\xd0\x76\x3b\x14\xd0\x5f\x39\xea\xde\x35\x9b\x87\xb5\x19\xdc\x32\x48\x47\x84\xc1\x3b\xab\xf6\x6f\x93\x9d\xfe\x55\xe8\x79\x7e\x5d\xf0\xb8\x5b\x6b\xb9\x4e\x01\xb5\x4f\x63\xe0\x2c\xd4\xb1\x79\x2e\x85\xe5\x43\x76\x76\xf5\xf1\xb6\x7d\x9a\x9b\x7d\xb3\x61\xa5\xc8\xc5\x89\xb0\x01\x62\x01\x4c\xb1\xa1\x32\xb4\x7f\xdb\x7b\x92\xb8\xdc\x3f\x70\x76\x4c\xb4\x8c\xc2\x9f\x7f\x4d\xfe\x0e\x00\x00\xff\xff\x35\xef\xa5\x9b\x64\x18\x00\x00")

func cloudBytebuildersDev_credentialsYamlBytes() ([]byte, error) {
	return bindataRead(
		_cloudBytebuildersDev_credentialsYaml,
		"cloud.bytebuilders.dev_credentials.yaml",
	)
}

func cloudBytebuildersDev_credentialsYaml() (*asset, error) {
	bytes, err := cloudBytebuildersDev_credentialsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cloud.bytebuilders.dev_credentials.yaml", size: 6244, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cloudBytebuildersDev_machinetypesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x56\x5f\x6f\xdb\x36\x10\x7f\xf7\xa7\x38\x60\x03\x6a\x2f\x93\xbc\x60\x2f\x9b\x5e\x82\xc2\x0b\x86\x22\x0b\x16\x24\x59\x5f\xd2\x0c\x38\x93\x67\x9b\x35\x45\x72\xe4\xd1\xa8\xbb\xec\xbb\x0f\xa4\xac\x58\x92\xed\xb4\x05\xb6\xb7\xf2\x49\xbc\x7f\x3c\xfd\x7e\x77\x47\xa2\x53\x6f\xc9\x07\x65\x4d\x05\xe8\x14\x7d\x60\x32\x69\x17\xca\xf5\x4f\xa1\x54\x76\xba\x39\x1f\xad\x95\x91\x15\xcc\x62\x60\x5b\xdf\x52\xb0\xd1\x0b\xfa\x85\x16\xca\x28\x56\xd6\x8c\x6a\x62\x94\xc8\x58\x8d\x00\x84\x27\x4c\xc2\x7b\x55\x53\x60\xac\x5d\x05\x26\x6a\x3d\x02\xd0\x38\x27\x1d\x92\x0d\x00\x3a\x57\xae\xe3\x9c\xbc\x21\xa6\x7c\x8a\xc1\x9a\x2a\x98\x6f\x99\xe6\x51\x69\x49\x3e\x8c\x00\x1a\x61\x8d\x62\xa5\x0c\xf1\xd6\x51\x28\x85\xb6\x51\x96\x5d\xbb\x52\xd2\x66\x14\x1c\x89\x14\x7a\xe9\x6d\x74\x15\x9c\xb0\x6a\x22\xee\x72\x10\xc8\xb4\xb4\x5e\xb5\xfb\xa2\xf1\xda\x7d\xa3\x73\x41\x58\x49\x79\xdb\xfc\xff\x75\x93\xc7\xfd\xd6\x35\x52\xad\x02\x5f\x0d\x35\xbf\xa9\xc0\x59\xeb\x74\xf4\xa8\xfb\xd9\x67\x45\x50\x66\x19\x35\xfa\x9e\x6a\x04\x10\x84\x75\x54\xc1\x4c\xc7\xc0\xe4\x47\x00\x9b\x86\x96\x9c\x5e\x01\x28\x65\x46\x1b\xf5\x8d\x57\x86\xc9\xcf\xac\x8e\xb5\x79\x4e\xfe\x7d\xb0\xe6\x06\x79\x55\x41\x99\xc0\x28\xc3\x3a\x66\x4d\x8b\xe2\xdd\xd5\x1f\xbb\x7d\x3a\xaf\x82\xc0\x5e\x99\xe5\x09\x67\xe1\xfa\xce\xb3\x9b\x2f\x70\xf6\x58\xf7\x9c\x6f\x5f\x5f\x9f\x72\x6e\x0c\x36\xe7\xa8\xdd\x0a\xcf\x1b\x78\xc4\x8a\x6a\xac\x76\x1e\xd6\x91\x79\x7d\xf3\xe6\xed\x8f\x77\x3d\x31\x80\xf3\xd6\x91\xe7\x67\xf6\x9a\xd5\x29\xe6\x8e\x14\x40\x52\x10\x5e\x39\xce\x55\xfe\x2a\x05\x6c\xac\x40\xa6\x2a\xa6\x00\xbc\xa2\x16\x6f\x92\xbb\x1c\xc0\x2e\x80\x57\x2a\x80\x27\xe7\x29\x90\xe1\x5c\xd9\xbd\xc0\x90\x8c\xd0\x80\x9d\xbf\x27\xc1\x25\xdc\x91\x4f\x61\x20\xac\x6c\xd4\x12\x84\x35\x1b\xf2\x0c\x9e\x84\x5d\x1a\xf5\xf1\x39\x76\x00\xb6\xf9\x50\x8d\x4c\xbb\x8a\xd9\xaf\xcc\xaf\x41\x0d\x1b\xd4\x91\xbe\x07\x34\x12\x6a\xdc\x82\xa7\x74\x0a\x44\xd3\x89\x97\x4d\x42\x09\xd7\xd6\x13\x28\xb3\xb0\x15\xac\x98\x5d\xa8\xa6\xd3\xa5\xe2\xb6\x89\x85\xad\xeb\x68\x14\x6f\xa7\xc2\x1a\xf6\x6a\x1e\xd9\xfa\x30\x95\xb4\x21\x3d\x0d\x6a\x59\xa0\x17\x2b\xc5\x24\x38\x7a\x9a\xa2\x53\x45\x4e\xdd\x70\x9e\x04\xb5\xfc\xc6\xef\xda\x3e\xbc\xea\xe5\x7a\xc0\x68\xb3\x72\xc3\xbc\xc0\x40\x6a\x1b\x50\x01\x70\xe7\xda\xfc\xc5\x1e\xe8\x24\x4a\xe8\xdc\x5e\xde\xdd\x43\x7b\x74\x26\x63\x88\x7e\xc6\x7d\xef\x18\xf6\x14\x24\xc0\x94\x59\x90\x6f\x48\x5c\x78\x5b\xe7\x98\x64\xa4\xb3\xca\x70\xde\x08\xad\xc8\x0c\xe1\x0f\x71\x5e\x2b\x4e\xbc\xff\x15\x29\x70\xe2\xaa\x84\x19\x1a\x63\x19\xe6\x04\xd1\x49\x64\x92\x25\xbc\x31\x30\xc3\x9a\xf4\x0c\x03\xfd\xef\x04\xe4\x01\x52\x24\x60\x3f\x8f\x82\xee\x50\x1e\x1a\x37\xa8\x75\x14\xed\xf8\x3c\xc1\x57\x67\xbe\xdd\x39\x12\xbd\xae\x91\x14\x94\x4f\x75\xcd\xc8\x94\xba\x61\x38\x26\xdb\x75\xbc\x63\x61\x3f\x89\xb7\x43\xf9\xc9\x7f\xcb\x4e\x2e\x1e\xda\xa3\xd9\xfe\xbe\x38\x14\x17\xbb\x40\xa9\xaf\x96\x79\xb6\x1e\xd7\x1f\x3d\x08\xc0\x21\xa7\x7e\xac\xe0\xcf\xf1\xbb\xb3\xa7\x62\x72\x31\x1e\x3f\xfc\x50\xfc\xfc\x78\x36\x7e\x57\xe6\x8f\xef\x26\x17\x93\xa7\x76\x73\x36\x99\x8c\xc7\x0f\x57\xd7\xbf\xde\xdf\x5c\x3e\xaa\xc9\xd3\x83\x89\xf5\xba\xd9\x3d\x8d\x1f\xe8\xf2\xf1\x33\x83\x4c\x26\x17\xdf\x1e\xa4\xf2\xa1\xd8\x5f\x9b\x85\x32\x5c\x58\x5f\x34\x59\x57\xc0\x3e\xd2\xc0\x41\xa6\xbe\x48\xf0\xca\x53\xd8\xce\xad\xd5\x84\xc3\xa1\xd6\x65\xff\x4b\x48\x91\x2a\xac\xbf\xb2\xf2\x29\x56\x3c\xd6\x5f\x41\xfa\x24\x48\xb4\x6c\x1f\x3f\xfd\xa5\x98\xea\x23\xe2\x17\xeb\xb2\x55\xa2\xf7\xb8\x1d\x4e\xfb\xf5\x91\x41\xf2\x42\xac\x8f\xd6\x1c\x8e\xb0\xff\x3a\xad\x74\xf5\xa4\xb1\xda\x0f\x58\xc0\xfe\x61\xd6\x4a\xf6\xaf\xad\x56\xb2\x7f\xf9\x75\xcf\x18\xcc\xfc\x03\x61\x48\xd7\xa6\xec\x50\x11\xd8\x7a\x5c\x52\x57\x12\xe7\xcf\xcf\x80\x0a\xfe\xfe\x67\xf4\x6f\x00\x00\x00\xff\xff\x62\x2f\x20\x8f\x3c\x0c\x00\x00")

func cloudBytebuildersDev_machinetypesYamlBytes() ([]byte, error) {
	return bindataRead(
		_cloudBytebuildersDev_machinetypesYaml,
		"cloud.bytebuilders.dev_machinetypes.yaml",
	)
}

func cloudBytebuildersDev_machinetypesYaml() (*asset, error) {
	bytes, err := cloudBytebuildersDev_machinetypesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cloud.bytebuilders.dev_machinetypes.yaml", size: 3132, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterBytebuildersDev_clusterauthinfotemplatesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x57\xcd\x6e\x1b\x37\x10\xbe\xeb\x29\x06\xe8\x21\x97\x48\x42\xd0\xa2\x28\x74\x33\x9c\x20\x10\x92\xa0\x46\xec\xe4\xce\x25\x47\x2b\xd6\xbb\x24\xcb\x19\xca\x51\x8b\xbe\x7b\x31\xdc\x5d\x69\xbd\x3f\xb2\x5a\x34\xe5\x8d\xe4\x70\x38\xdf\x37\x7f\xa4\x0a\xf6\x2b\x46\xb2\xde\x6d\x40\x05\x8b\xdf\x18\x9d\xcc\x68\xf5\xf8\x0b\xad\xac\x5f\x1f\xde\x2c\x1e\xad\x33\x1b\xb8\x4d\xc4\xbe\xfe\x8c\xe4\x53\xd4\xf8\x16\x77\xd6\x59\xb6\xde\x2d\x6a\x64\x65\x14\xab\xcd\x02\x40\x47\x54\xb2\xf8\x60\x6b\x24\x56\x75\xd8\x80\x4b\x55\xb5\x00\xa8\x54\x81\x15\x89\x0c\x80\x0a\x61\xf5\x98\x0a\x8c\x0e\x19\xf3\x2d\x4e\xd5\xb8\x81\xe2\xc8\x58\x24\x5b\x19\x8c\xb4\x00\x68\x16\x75\x95\x88\x31\xaa\xc4\x7b\xeb\x76\x9e\xb1\x0e\x95\x92\x63\xed\xc6\xaa\x7f\x6a\x65\xf0\xb0\xa0\x80\x5a\x2e\x2a\xa3\x4f\xe1\xa4\x60\x2c\xd7\xdc\xd0\xda\xa4\x15\x63\xe9\xa3\xed\xe6\x4b\x38\x5b\xd8\x2e\xc4\x16\xfb\xb2\xf6\x06\xab\x76\x51\x85\x40\xda\x1b\xcc\xd3\x96\xa9\xe6\xc2\x9b\xc4\xfb\xad\xdb\xf9\x87\xd6\xe2\x2c\x51\x59\xe2\x0f\x97\xa4\x3e\x5a\xe2\x2c\x19\xaa\x14\x55\x35\x8f\x3f\x0b\x91\x75\x65\xaa\x54\x9c\x15\x5b\x00\x90\xf6\x01\x4f\xf7\x2d\x00\x0e\x8d\xc3\x33\xd0\x65\xcb\xf2\xe1\x8d\xaa\xc2\x5e\xbd\x69\xb4\xea\x3d\xd6\xaa\xe1\x01\xc0\x07\x74\x37\x77\xdb\xaf\x3f\xde\x3f\x5b\x06\x08\xd1\x07\x8c\x7c\xa2\xac\x19\xbd\x88\xea\xad\x02\x18\x24\x1d\x6d\xe0\x1c\x6a\xaf\x44\x61\x23\x05\x46\x42\x09\x09\x78\x8f\x9d\x69\x68\x5a\x1b\xc0\xef\x80\xf7\x96\x20\x62\x88\x48\xe8\x38\x87\xd7\x33\xc5\x20\x42\xca\x81\x2f\x7e\x43\xcd\x2b\xb8\xc7\x28\x6a\x80\xf6\x3e\x55\x06\xb4\x77\x07\x8c\x0c\x11\xb5\x2f\x9d\xfd\xe3\xa4\x9b\x80\x7d\xbe\x34\xd3\xc9\x03\x9d\xd6\x31\x46\xa7\x2a\x38\xa8\x2a\xe1\x6b\x50\xce\x40\xad\x8e\x10\x51\x6e\x81\xe4\x7a\xfa\xb2\x08\xad\xe0\x93\x8f\x08\xc2\xfe\x06\xf6\xcc\x81\x36\xeb\x75\x69\xb9\xcb\x24\xed\xeb\x3a\x39\xcb\xc7\xb5\xf6\x8e\xa3\x2d\x12\xfb\x48\x6b\x83\x07\xac\xd6\x64\xcb\xa5\x8a\x7a\x6f\x19\x35\xa7\x88\x6b\x15\xec\x32\x9b\xee\x38\xa7\x63\x6d\x7e\xe8\xe2\x8f\x5e\x3d\xb3\x95\x8f\xe2\x5e\xe2\x68\x5d\xd9\xdb\xc8\xb1\x78\xc1\x03\x12\x85\x60\x09\x54\x7b\xb4\x41\x71\x26\x5a\x96\x84\x9d\xcf\xef\xee\x1f\x4e\xa1\x9f\x9d\x31\x64\x3f\xf3\x7e\x3e\x48\x67\x17\x08\x61\xd6\xed\x30\x36\x4e\xdc\x45\x5f\x67\x9d\xe8\x4c\xf0\xd6\x71\x9e\xe8\xca\xa2\x1b\xd2\x4f\xa9\xa8\x2d\x8b\xdf\x7f\x4f\x48\x2c\xbe\x5a\xc1\xad\x72\xce\x33\x14\x08\x29\x18\xc5\x68\x56\xb0\x75\x70\xab\x6a\xac\x6e\x15\xe1\x77\x77\x80\x30\x4d\x4b\x21\xf6\x3a\x17\xf4\x2b\xe3\x50\xb8\x61\xad\xb7\xd1\x55\xad\xf3\x98\xce\x2f\x19\x92\xe5\x77\xd1\x1f\xac\xc1\x38\xdc\x1b\xf8\xf9\xa6\x27\x9a\xef\xb0\x3b\x8b\xe2\x75\x9d\xeb\x79\x56\x25\x10\x75\x4e\x2c\xa9\x3a\xa5\x1d\xe6\x97\x8c\x9d\x8f\xd9\x5b\xe7\xaa\x78\x2a\xac\x23\xe9\x79\xc3\x65\x68\xef\x76\xb6\x9c\xda\x01\x50\xc6\xe4\xa6\xa2\xaa\xbb\x8b\x3a\x60\x9e\xf4\xa1\xc0\x88\xe8\x6e\xe4\xc2\x77\xe1\xe0\x8c\x66\x89\x48\x1b\xd1\x8c\x8f\x36\xb5\x74\xb4\x7c\xc1\x0c\x2d\x08\x77\xc2\x3d\x8a\x9f\x7c\xb4\x7c\x7c\x3b\x0a\x18\x18\xfa\xf4\x76\xe6\x98\x50\xcb\xca\x3a\x82\xbb\x77\x9f\x96\xe8\xa4\x2f\x99\xfe\x25\x13\x68\x55\xa7\xa0\x2f\x47\x63\x9f\xee\x7c\xac\x15\x37\x3d\x7a\x06\xe2\x24\x61\x4d\x76\xf7\x2c\xbe\x06\xdf\xd4\x99\x69\x70\x92\x5e\xb9\xae\x4c\x41\x6b\x2f\xcf\xc8\x60\x67\x2b\xcc\x51\xfc\xf0\xf1\xfe\xbf\x86\xf7\x01\xaf\x72\x5b\x5f\xf6\x05\x38\x27\xe3\x27\x70\x3d\xe2\xf1\x3b\xa1\xb1\x75\xc0\x48\xde\x29\x9e\xc8\x8c\x67\x58\xb6\x67\x49\x69\x22\x52\x19\x12\x49\xc3\xac\x51\xda\xaa\xd2\xbc\x54\x13\x51\x74\xdd\xdd\xef\xe5\xe1\x36\x91\xf7\x73\x16\x34\xf2\x9d\x1d\x65\x33\x63\xdf\x57\x39\x36\xc5\x32\xd6\x93\xb5\xe5\x62\xf6\x37\x9b\x2a\x46\x75\x9c\xb7\xff\x0b\x61\x7c\xf7\x8d\xe3\x44\x40\x5c\x5b\xe0\x9e\x41\xcd\xba\xbe\xe6\xf6\x5c\x2b\x7a\x6c\x9f\x4a\x79\x4e\x5e\xaa\x2d\xfb\x22\xed\x40\x2b\x07\x25\x3a\x8c\xd3\x99\x3e\x0b\xf8\xc5\x52\x3a\x0f\x7a\xde\x27\x27\x0e\xce\x81\x7e\xc6\x9e\x7b\xb4\x84\xe8\xf8\x2d\x07\x6d\xaf\xe9\xd1\x69\x72\x68\xcd\x05\xd3\x64\x61\xf5\x4f\x0e\xe3\xf6\xed\x18\x6d\x97\x19\xd6\xf1\xcf\x3f\xcd\x68\x94\xa7\x5f\x99\x5f\xca\xfd\x11\x14\xd1\x93\x8f\x13\x75\xff\x19\x05\x77\xad\x58\x17\x8d\xdd\xb1\x0c\xaa\x50\x64\xf5\xb0\xe5\xb2\x9f\xa2\xfc\xca\x56\x7b\xc1\x73\xec\x1f\xd1\xbd\x60\xed\x83\xc8\x74\xa6\x16\xa8\xa2\x3c\xd5\xf2\x9a\x98\x3b\x32\x74\x60\xd6\x54\x73\xff\x17\x86\x26\x3b\x41\xea\x25\xf9\xb6\xd0\xbc\x80\xed\x4b\x57\x8f\x86\xf5\xe9\x7f\xf6\xc4\xf4\x83\x61\xd9\xc5\xe8\x60\x35\x59\x73\xd5\x6b\x91\x15\x27\xba\xf6\xbd\xe8\x0b\x92\x17\xb9\x79\xdf\x54\x87\xd1\xdf\x6c\xc4\xdd\xaf\xa3\x03\x1d\x8b\xb5\xa7\xfc\x97\x92\xbe\x5a\x9e\x77\xbb\x1b\x66\x5f\x8e\xf9\x0f\xd7\x7c\x22\x56\xb0\x65\xd0\x3e\x46\xa4\xe0\x9d\x39\xfd\xc3\xba\xfd\x57\xd4\xd3\xfc\x7a\x42\xe3\xd3\xde\xea\xbd\x18\xd4\x7e\x03\xc0\x3b\xa8\x53\xf3\x35\x84\xe2\x98\x95\xdd\xdc\x6d\xdb\x6f\xc8\x7c\x7b\xfc\xa7\x45\x60\xd2\x17\xa3\xc5\x86\x88\x0d\x70\x4c\x4d\x19\x26\xf6\x51\x95\xd8\x5f\x49\xc5\xe9\x33\xd7\x79\xa2\xf5\x28\xfc\xf9\xd7\xe2\xef\x00\x00\x00\xff\xff\xb4\xb0\x0d\xe8\x95\x11\x00\x00")

func clusterBytebuildersDev_clusterauthinfotemplatesYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterBytebuildersDev_clusterauthinfotemplatesYaml,
		"cluster.bytebuilders.dev_clusterauthinfotemplates.yaml",
	)
}

func clusterBytebuildersDev_clusterauthinfotemplatesYaml() (*asset, error) {
	bytes, err := clusterBytebuildersDev_clusterauthinfotemplatesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cluster.bytebuilders.dev_clusterauthinfotemplates.yaml", size: 4501, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterBytebuildersDev_clusterinfosYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\x41\x6f\x23\x37\x0f\xbd\xfb\x57\x10\xf8\x0e\xb9\xac\xc7\xc8\xb7\x45\x51\xf8\x16\x24\xc1\xc2\xc8\x76\x37\xd8\x2c\x72\x97\x25\x7a\xac\x46\x23\xa9\x24\xe5\xac\x5b\xf4\xbf\x17\xd2\xcc\xd8\xe3\xf1\xec\x22\x2e\xda\xb9\x89\x14\x9f\xa8\xc7\x27\x72\x54\xb4\xcf\x48\x6c\x83\x5f\x82\x8a\x16\xbf\x09\xfa\xbc\xe2\xea\xe5\x17\xae\x6c\x58\xec\xae\x67\x2f\xd6\x9b\x25\xdc\x26\x96\xd0\x7c\x41\x0e\x89\x34\xde\xe1\xc6\x7a\x2b\x36\xf8\x59\x83\xa2\x8c\x12\xb5\x9c\x01\x68\x42\x95\x8d\x5f\x6d\x83\x2c\xaa\x89\x4b\xf0\xc9\xb9\x19\x80\x53\x6b\x74\x9c\xf7\x00\xa8\x18\xab\x97\xb4\x46\xf2\x28\x58\x4e\xf1\xaa\xc1\x25\xac\xf7\x82\xeb\x64\x9d\x41\xe2\x19\x40\x6b\xd4\x2e\xb1\x20\x59\xbf\x09\x5c\x75\x8b\x6a\xb8\xb3\x32\xb8\x9b\x71\x44\x9d\xc1\x6b\x0a\x29\x1e\x82\xce\xf7\xb5\xa8\x5d\x1e\x5a\x09\xd6\x81\x6c\xbf\x9e\xc3\x31\xab\xce\x40\xdd\x7d\xe7\x4d\x30\xe8\x3a\xa3\x8a\x91\x75\x30\x58\x96\x1d\x3b\xed\x81\x2b\xbf\x09\xc5\xea\x2c\xcb\xc3\xd8\xf3\xd1\xb2\x14\x6f\x74\x89\x94\x3b\xbd\x5b\x71\xb0\xf5\x75\x72\x8a\x4e\x5c\x33\x00\xd6\x21\xe2\x01\x6b\x06\xb0\x6b\x8b\x56\x12\x9f\x77\x4c\xed\xae\x95\x8b\x5b\x75\xdd\x22\xe9\x2d\x36\xaa\xbd\x17\x40\x88\xe8\x6f\x1e\x57\xcf\xef\x9f\x4e\xcc\x00\x91\x42\x44\x92\x03\x05\xed\x37\x50\xc5\xc0\x0a\x60\x90\x35\xd9\x28\x45\x2e\x57\x19\xb0\xdd\x05\x26\xcb\x01\x19\x64\x8b\x7d\x6a\x68\xba\x1c\x20\x6c\x40\xb6\x96\x81\x30\x12\x32\x7a\x29\x12\x39\x01\x86\xbc\x49\x79\x08\xeb\xdf\x50\x4b\x05\x4f\x48\x19\x06\x78\x1b\x92\x33\xa0\x83\xdf\x21\x09\x10\xea\x50\x7b\xfb\xc7\x01\x9b\x41\x42\x39\xd4\x29\xc1\x8e\xdc\xe3\x67\xbd\x20\x79\xe5\x60\xa7\x5c\xc2\x77\xa0\xbc\x81\x46\xed\x81\x30\x9f\x02\xc9\x0f\xf0\xca\x16\xae\xe0\xd7\x40\x08\x99\xf5\x25\x6c\x45\x22\x2f\x17\x8b\xda\x4a\xff\x1a\x74\x68\x9a\xe4\xad\xec\x17\x3a\x78\x21\xbb\x4e\x12\x88\x17\x06\x77\xe8\x16\x6c\xeb\xb9\x22\xbd\xb5\x82\x5a\x12\xe1\x42\x45\x3b\x2f\xa9\x7b\x29\x4f\xaa\x31\xff\xeb\xf5\xc4\x57\x27\xb9\xca\x3e\x97\x97\x85\xac\xaf\x07\x8e\xa2\xad\x1f\x54\x20\x2b\x0c\x2c\x83\xea\x42\xdb\x5b\x1c\x89\xce\xa6\xcc\xce\x97\xfb\xa7\xaf\x07\x29\x97\x62\x8c\xd9\x2f\xbc\x1f\x03\xf9\x58\x82\x4c\x98\xf5\x1b\xa4\xb6\x88\x1b\x0a\x4d\xc1\x44\x6f\x62\xb0\x5e\xca\x42\x3b\x8b\x7e\x4c\x3f\xa7\x75\x63\x25\xd7\xfd\xf7\x84\x2c\xb9\x56\x15\xdc\x2a\xef\x83\xc0\x1a\x21\x45\xa3\x04\x4d\x05\x2b\x0f\xb7\xaa\x41\x77\xab\x18\xff\xf3\x02\x64\xa6\x79\x9e\x89\x7d\x5b\x09\x86\xdd\x6d\xbc\xb9\x65\x6d\xe0\xe8\xbb\xd0\xf1\x9b\x7e\x5f\xf9\x2b\xad\x12\xcd\x8d\x8c\x1d\x00\x9b\x40\x8d\x92\x65\xd6\xef\xcf\x3f\x9d\x79\xdb\xb3\xb3\xb6\xeb\xd2\x0a\x86\x5f\x5f\x94\x73\xcc\xef\x5c\xaf\x04\x7d\x6b\x9f\xc9\xea\xee\xa2\xb0\xd2\xff\x95\x7b\x38\xb4\xcc\xc9\x96\xf1\x36\x90\x4f\xc1\xe0\x6d\x48\x53\x89\x0f\xc8\x78\xff\xff\x8b\xc8\x70\x41\x97\x4e\x73\x51\x42\xa5\x95\x5e\x12\x10\x5e\x3d\xd2\x14\x75\xff\xbc\x8a\x05\xf2\xd3\xa5\x89\x44\x0a\x59\x8e\x97\xc6\xec\xac\x41\x3a\x0f\x42\x9f\x9a\x73\xeb\x1c\x6e\x1e\x9e\x26\xac\x77\xb6\xb6\xa2\xdc\x67\x8d\x6a\xdc\xd8\xb3\xfb\x7e\x32\xe8\xc3\xc3\xfd\x84\xf5\xa3\xf5\xfd\x68\x3d\x75\x3c\x2a\xfd\x82\xe3\x1e\x93\x1d\x4f\x5a\x39\x7c\x55\xfb\x09\xd7\x73\x72\x32\x66\xf7\x87\x84\x24\x6b\x2e\x20\x30\x77\x36\x4b\x38\x0a\x69\xe7\xf1\xc8\xd4\xc9\x64\x64\x4d\xd6\xbc\xa9\xaf\x88\x92\xc4\x6f\xed\x2c\x61\xcd\xb9\x77\x9b\x0f\xe8\x91\xbe\xf3\x02\x4e\xe6\xc8\xe7\xb3\x80\x3c\x54\x72\x5f\x6f\x02\x97\xa9\x8b\x5e\xa0\x3e\x7a\xfb\x13\xce\x60\x8b\xea\xfb\x69\xdf\x8e\x9b\x0a\x56\x02\x3a\x10\x21\xc7\xe0\xcd\x61\x62\xf7\xfe\x2b\x1e\x20\xbf\x9b\x40\x7c\xdd\x5a\xbd\xcd\x09\x75\x03\x03\x82\x87\x26\xb5\x3f\x11\xb0\xde\x17\xb0\x9b\xc7\x55\x37\xb0\xaa\x7f\xf1\x1d\xc6\xad\xe2\x89\x37\x78\xc2\xdd\x63\xde\x33\x18\x9c\xa0\x13\x51\xa6\xab\xad\x59\xfb\xf3\x83\xfd\xef\xdc\xdb\xa5\x35\xa9\x84\x33\x63\x5b\x86\x25\x08\xa5\x56\x70\x2c\x81\x54\x8d\x43\x4b\x5a\x1f\x7e\x3a\xfa\xbb\x74\x7a\x82\x3f\xff\x9a\xfd\x1d\x00\x00\xff\xff\x2a\x9b\xf3\x26\x01\x0c\x00\x00")

func clusterBytebuildersDev_clusterinfosYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterBytebuildersDev_clusterinfosYaml,
		"cluster.bytebuilders.dev_clusterinfos.yaml",
	)
}

func clusterBytebuildersDev_clusterinfosYaml() (*asset, error) {
	bytes, err := clusterBytebuildersDev_clusterinfosYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cluster.bytebuilders.dev_clusterinfos.yaml", size: 3073, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterBytebuildersDev_clusteruserauthsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x58\x5f\x8f\xdb\x36\x0c\x7f\xcf\xa7\x20\xb0\x87\xbe\x34\x09\x8a\x0d\xc3\x90\xb7\xc3\xf5\x50\x1c\xda\xae\x87\xde\xb5\xef\xb2\x4c\x3b\xda\xd9\x92\x47\xd2\xb9\xcb\x86\x7d\xf7\x41\x92\x9d\x38\xfe\x77\xb9\x0c\x9d\xdf\x2c\x51\x14\xf9\x23\xf9\x13\x25\x55\x99\xef\x48\x6c\x9c\xdd\x80\xaa\x0c\x3e\x0b\x5a\xff\xc7\xab\xc7\xdf\x78\x65\xdc\x7a\xf7\x6e\xf1\x68\x6c\xba\x81\xeb\x9a\xc5\x95\x5f\x91\x5d\x4d\x1a\xdf\x63\x66\xac\x11\xe3\xec\xa2\x44\x51\xa9\x12\xb5\x59\x00\x68\x42\xe5\x07\x1f\x4c\x89\x2c\xaa\xac\x36\x60\xeb\xa2\x58\x00\x14\x2a\xc1\x82\xbd\x0c\x80\xaa\xaa\xd5\x63\x9d\x20\x59\x14\x0c\xbb\x58\x55\xe2\x06\x92\xbd\x60\x52\x9b\x22\x45\xe2\x05\x40\x1c\xd4\x45\xcd\x82\x54\x33\x92\xaa\x65\xcb\xab\x66\x60\xd5\x95\x5e\xa5\xb8\x5b\x70\x85\xda\x6f\x90\x93\xab\xab\xc3\xc2\xa1\x5c\xd4\xdc\xd8\xa2\x95\x60\xee\xc8\xb4\xff\x4b\x38\x5a\xd6\x0c\x50\xe3\xf3\xb2\x74\x29\x16\xcd\xa0\xaa\x2a\xd6\x2e\xc5\xf0\xdb\x20\x14\x37\xfc\xc6\x48\x57\xb5\x6c\xc3\x4c\x61\x58\x3e\x8e\xcd\x7e\x32\x2c\x41\xa2\x2a\x6a\x52\xc5\xd0\xcf\x30\xc9\xc6\xe6\x75\xa1\x68\x30\xbd\x00\x60\xed\x2a\x3c\xe8\x5d\x00\xec\x62\x20\x83\x23\xcb\x06\xbd\xdd\x3b\x55\x54\x5b\xf5\x2e\x6a\xd3\x5b\x2c\x55\xf4\x13\xc0\x55\x68\xaf\xee\x6e\xbf\xff\x7c\x7f\x32\x0c\x50\x91\xab\x90\xe4\x00\x49\xfc\x3a\x99\xd2\x19\x05\x48\x91\x35\x99\x4a\x42\x0a\xbd\xf1\x0a\xa3\x14\xa4\x3e\x45\x90\x41\xb6\xd8\x9a\x86\x69\x63\x03\xb8\x0c\x64\x6b\x18\x08\x2b\x42\x46\x2b\x21\x6d\x4e\x14\x83\x17\x52\x16\x5c\xf2\x07\x6a\x59\xc1\x3d\x92\x57\x03\xbc\x75\x75\x91\x82\x76\x76\x87\x24\x40\xa8\x5d\x6e\xcd\x5f\x07\xdd\x0c\xe2\xc2\xa6\x85\x12\x6c\x40\x3e\x7e\xc6\x0a\x92\x55\x05\xec\x54\x51\xe3\x5b\x50\x36\x85\x52\xed\x81\xd0\xef\x02\xb5\xed\xe8\x0b\x22\xbc\x82\xcf\x8e\x10\x8c\xcd\xdc\x06\xb6\x22\x15\x6f\xd6\xeb\xdc\x48\x5b\x21\xda\x95\x65\x6d\x8d\xec\xd7\xda\x59\x21\x93\xd4\xe2\x88\xd7\x29\xee\xb0\x58\xb3\xc9\x97\x8a\xf4\xd6\x08\x6a\xa9\x09\xd7\xaa\x32\xcb\x60\xba\x95\x50\x66\x65\xfa\x53\x9b\x5f\xfc\xe6\xc4\x56\xd9\xfb\xf0\xb2\x90\xb1\x79\x67\x22\xe4\xda\x4c\x04\x7c\xb6\x81\x61\x50\xcd\xd2\xe8\xc5\x11\x68\x3f\xe4\xd1\xf9\x7a\x73\xff\x70\x48\xed\x10\x8c\x3e\xfa\x01\xf7\xe3\x42\x3e\x86\xc0\x03\x66\x6c\x86\x14\x83\x98\x91\x2b\x83\x4e\xb4\x69\xe5\x8c\x95\xf0\xa3\x0b\x83\xb6\x0f\x3f\xd7\x49\x69\xc4\xc7\xfd\xcf\x1a\x59\x7c\xac\x56\x70\xad\xac\x75\x02\x09\x42\x5d\xa5\x4a\x30\x5d\xc1\xad\x85\x6b\x55\x62\x71\xad\x18\x7f\x78\x00\x3c\xd2\xbc\xf4\xc0\x9e\x17\x82\x2e\xe3\xf5\x85\x23\x6a\x9d\x89\x96\x95\x8e\xdf\x78\x7d\xf9\xcf\x57\xf6\x1d\xb9\x9d\x49\x91\xfa\x73\xbd\x38\x5f\x75\x44\xc3\x1e\x26\x33\xe8\xa3\xae\x03\x4f\x07\x55\xde\x45\x1d\x0a\xcb\xb3\x4c\x6e\xfa\xf5\xe5\xbf\xcc\x51\x88\xd6\x91\xf5\x0e\xc4\x39\x90\x9e\x36\xdc\x7f\xda\xd9\xcc\xe4\x63\x33\x00\x2a\x4d\xc3\x61\xa1\x8a\xbb\x59\x1d\x30\x0d\x7a\x5f\x60\x00\x74\xfb\x05\xe2\x9b\x59\x38\xa1\xd9\x67\xa4\x21\x4c\x87\x4b\x23\x97\x0e\x86\x67\xcc\x50\x4f\x23\xde\xcd\xa3\xa7\xb4\x46\xe6\x8f\xb8\xbf\x7d\x7f\x81\xf1\x00\x8a\xb9\x2e\xf1\xab\x2b\xf0\x8a\xec\x7f\xd4\x70\xf3\x1c\x39\xf2\x42\x53\xb4\xd2\xdb\xd9\x08\x24\xce\x15\xa8\xc6\xb2\xb1\x49\xbd\x0b\x37\xce\x1c\x3d\x29\x4a\xef\x91\xfd\x61\xf3\xfb\x0b\x79\x30\x6d\x05\x61\x3e\x38\xe6\xce\x34\x81\x51\x13\xca\x55\x1b\xcc\x0b\x75\x9c\x65\xff\x05\x79\xdc\x49\xb2\x91\xd9\x9e\xed\xaf\x49\xf8\xc8\xf5\xd7\x3e\xbd\x33\x4f\x39\xf8\x7e\x40\x8f\xd0\x67\xb0\xeb\xb1\x35\x9e\x45\x44\x19\xcb\x70\x77\xf3\x79\x89\xd6\xb7\x58\x29\x78\xb2\x0d\xa7\xcc\x58\xda\x36\x9b\x83\xf6\xdd\x40\x66\x0a\x0c\x9c\xf6\xf0\xe9\x7e\x48\x60\x99\xa3\x52\x49\x6c\x34\x27\xdc\x1b\x45\x35\xee\xf0\x11\xf7\x67\xbb\xd5\xc8\xbe\xe0\xce\xc1\xf8\x11\xbf\x1e\x71\xff\xc3\xbc\x89\x9d\xe8\x58\x95\xcd\x2c\xcb\x9d\xcb\x0b\xfc\xe2\x0f\x9e\xcb\xc8\xed\xc1\x3d\xe2\x65\x55\x15\x41\xba\x94\x8e\xc2\xe2\xfb\x90\xdc\x17\x29\xc0\xe7\xca\xd0\x44\x29\xb7\x31\x30\x56\x7e\xfd\x65\x46\xb9\x6f\x3b\xf3\xd0\xa5\xf7\x3f\xc2\x8c\x90\xb7\x97\x82\xf3\x72\xb9\x07\xcd\x23\xb3\x2d\xa8\x93\x53\x11\xb2\xd7\xd0\x80\x29\x2b\x24\x76\x56\xc9\x08\x73\x9d\x54\xc9\xed\x51\xd2\x37\xab\xbe\x03\xf1\x57\x1b\x7f\xd0\xfa\xf6\x5d\x69\x59\x2a\x1e\xa6\xfc\x0c\x14\x9d\xbd\x3f\xf8\x0b\xe0\x48\x22\x4e\x59\x10\xe5\x5b\x3b\xf2\xf8\x27\xae\xab\x72\x68\x8a\x11\x2c\x47\x93\x7d\x36\x5c\x71\x52\x11\xa9\x3e\xbf\x76\x36\xf3\x77\xc4\x9b\x67\xa1\x11\xaa\x39\xb7\x91\x3a\x71\x35\xe8\xfa\x1e\xae\x01\xa5\xe2\xc7\xe6\x4a\x16\xfe\xd9\xf9\xd2\x15\x97\xd4\x19\x68\x65\x21\x47\x8b\xa4\x46\xf8\x64\xc6\xe1\x17\x0b\x68\xda\xe9\xe9\x98\x1c\x30\x38\x52\xe8\xd1\xf7\x70\x17\xf0\x85\x37\xbc\x33\x42\xd3\xd3\x76\xe0\x4c\x43\x6a\x4d\x25\xd3\x68\x22\x57\x8a\xf9\xc9\xd1\x48\x55\x9d\xd8\x7b\xd7\x88\xb5\xa9\xd3\x2e\x0b\x16\x24\x8a\x8d\xee\xf7\xe1\xe2\xc6\xf0\x39\xb3\xff\x9e\x81\xb9\x3a\xef\xd6\x70\xb8\x31\xc4\x53\x1e\x02\x37\x40\xa5\x48\x95\xfd\xeb\xdf\xec\x76\x32\xce\x56\x27\x7b\x45\xdd\x0d\x32\x09\x2a\xf2\xd7\xc5\x30\xe6\xd1\x19\xe0\xd2\x43\x61\xba\x39\x7c\x15\x2e\x3e\xf2\x63\xe7\xc6\x3c\x6f\xcf\x71\x76\x4b\x53\x2f\x78\xff\xad\x65\xb3\x3e\xbb\xfd\xcf\xa9\x31\x7e\x3e\x2c\x3b\x4d\x40\x6f\x22\x22\x76\xd6\xcd\x56\x94\xd4\x7c\xee\xdd\xd6\x25\x8c\xb4\xc3\xf4\x43\x64\x98\xd1\x06\xfb\x04\xc1\x2f\x83\x05\x2d\x96\xa5\xe3\xf0\xee\xe3\xbb\xbe\xfc\x38\xdb\xee\x30\x79\xcb\x0d\xef\x4d\xf1\xc1\x63\x05\xb7\x02\xda\x11\x21\x57\xce\xa6\x87\x37\xa3\x76\xfe\x0d\x77\x34\xbf\x1d\xd1\xf8\xb4\x35\x7a\xeb\x0d\x6a\x9e\x2c\xc0\x59\x28\xeb\xf8\x8c\x05\xc9\x3e\x28\xbb\xba\xbb\x6d\x9e\x4c\xa6\x9b\xb7\xd7\x26\xe0\x68\x2c\x06\x83\x11\x88\x0d\x08\xd5\x91\xca\x59\x1c\xa9\x1c\xbb\x23\x75\x72\x78\x78\x6a\x23\xd1\x44\x14\xfe\xfe\x67\xf1\x6f\x00\x00\x00\xff\xff\xe0\xd4\x11\x8b\x19\x16\x00\x00")

func clusterBytebuildersDev_clusteruserauthsYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterBytebuildersDev_clusteruserauthsYaml,
		"cluster.bytebuilders.dev_clusteruserauths.yaml",
	)
}

func clusterBytebuildersDev_clusteruserauthsYaml() (*asset, error) {
	bytes, err := clusterBytebuildersDev_clusteruserauthsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cluster.bytebuilders.dev_clusteruserauths.yaml", size: 5657, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _identityBytebuildersDev_orgusersYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\xc1\x8e\xe3\x36\x0c\xbd\xe7\x2b\x08\xf4\xb0\x97\x8d\x83\x41\x8b\xa2\xf0\x6d\x31\x5b\x14\x83\x6e\xbb\x83\x99\xdd\xbd\xd3\x36\xe3\xb0\x23\x4b\x2a\x49\xa5\x4d\x8b\xfe\x7b\x21\xd9\x49\x9c\x64\xa6\x98\x00\x5b\xdd\xfc\x24\x3e\x51\x7c\xd4\x93\x31\xf2\x17\x12\xe5\xe0\x6b\xc0\xc8\xf4\xa7\x91\xcf\x5f\x5a\x3d\xfd\xa0\x15\x87\xd5\xf6\x66\xf1\xc4\xbe\xab\xe1\x36\xa9\x85\xe1\x81\x34\x24\x69\xe9\x3d\xad\xd9\xb3\x71\xf0\x8b\x81\x0c\x3b\x34\xac\x17\x00\xad\x10\x66\xf0\x13\x0f\xa4\x86\x43\xac\xc1\x27\xe7\x16\x00\x0e\x1b\x72\x9a\xd7\x00\x60\x8c\xd5\x53\x6a\x48\x3c\x19\x95\x5d\x3c\x0e\x54\x43\xb3\x33\x6a\x12\xbb\x8e\x44\x17\x00\x23\x18\xa4\x4f\x4a\xa2\x15\x77\xe4\x8d\x6d\x57\xcd\x97\x55\x1d\x6d\x17\x1a\xa9\xcd\xcc\xbd\x84\x14\x6b\x78\x79\xe1\xc8\x39\x65\xd1\xa2\x51\x1f\x84\xf7\xdf\x4b\x38\xe6\x34\x01\x32\x9d\x76\x39\x84\x8e\xdc\x04\x62\x8c\xda\x86\x8e\xca\xe7\x58\x9b\x8f\xd2\x7f\x56\x92\x82\x38\x56\xfb\x79\x8e\x7e\x60\xb5\x32\x13\x5d\x12\x74\xc7\x13\x15\x50\xd9\xf7\xc9\xa1\x1c\xe0\x05\x80\xb6\x21\x52\x0d\xb7\x2e\xa9\x15\x60\x3b\x4a\x54\x12\x5d\x4e\x75\xd9\xde\xa0\x8b\x1b\xbc\x19\x59\xda\x0d\x0d\x38\x9e\x03\x20\x44\xf2\xef\xee\xef\xbe\x7c\xfb\x78\x02\x03\x44\x09\x91\xc4\x0e\x47\x1e\xc7\xac\x07\x66\x28\x40\x47\xda\x0a\x47\x2b\xcd\xf1\x26\x13\x8e\xab\xa0\xcb\xe2\x93\x82\x6d\x68\x9f\x1a\x75\x53\x0e\x10\xd6\x60\x1b\x56\x10\x8a\x42\x4a\xde\x4a\x43\x9c\x10\x43\x5e\x84\x1e\x42\xf3\x1b\xb5\x56\xc1\x23\x49\xa6\x01\xdd\x84\xe4\x3a\x68\x83\xdf\x92\x18\x08\xb5\xa1\xf7\xfc\xd7\x81\x5b\xc1\x42\xd9\xd4\xa1\xd1\x54\xd4\xe3\x60\x6f\x24\x1e\x1d\x6c\xd1\x25\x7a\x0b\xe8\x3b\x18\x70\x07\x42\x79\x17\x48\x7e\xc6\x57\x96\x68\x05\xbf\x04\x21\x60\xbf\x0e\x35\x6c\xcc\xa2\xd6\xab\x55\xcf\xb6\xef\xfd\x36\x0c\x43\xf2\x6c\xbb\x55\x1b\xbc\x09\x37\xc9\x82\xe8\xaa\xa3\x2d\xb9\x95\x72\xbf\x44\x69\x37\x6c\xd4\x5a\x12\x5a\x61\xe4\x65\x49\xdd\x5b\xb9\x40\x43\xf7\xcd\xbe\x7f\xf4\xcd\x49\xae\xb6\xcb\xf2\xaa\x09\xfb\x7e\x36\x51\x7a\xe9\x3f\x14\xc8\x5d\x05\xac\x80\x53\xe8\x78\x8a\x63\xa1\x33\x94\xab\xf3\xf0\xe3\xe3\xa7\x43\xeb\x16\x31\xce\xab\x5f\xea\x7e\x0c\xd4\xa3\x04\xb9\x60\xec\xd7\x24\xa3\x88\x6b\x09\x43\xe1\x24\xdf\xc5\xc0\xde\xca\x47\xeb\x98\xfc\x79\xf9\x35\x35\x03\x5b\xd6\xfd\xf7\x44\x6a\x59\xab\x0a\x6e\xd1\xfb\x60\xd0\x10\xa4\xd8\xa1\x51\x57\xc1\x9d\x87\x5b\x1c\xc8\xdd\xa2\xd2\xff\x2e\x40\xae\xb4\x2e\x73\x61\x5f\x27\xc1\xdc\xcb\xce\x17\x8f\x55\x9b\x4d\xec\x6d\xe7\x38\x9e\xbf\x5f\x79\xe0\x16\x0d\xe5\xf3\xc3\x87\xf3\x89\x17\x53\xc9\x83\x06\x64\x77\x55\xc4\x3a\x39\xf7\x6b\xf6\x87\x6b\x82\x58\xef\x53\xe3\xb8\x7d\x29\xa8\x09\xc1\x11\x5e\xdc\x61\xe9\xef\xde\x5f\x86\xac\x83\x0c\x68\x75\xbe\x8e\xdf\x7f\xf7\x02\x61\xbe\xaa\xfd\xe4\x97\x27\x84\x57\xa7\x6e\x84\xc3\xd5\x41\xd9\x66\xbf\x6e\xea\x99\xf1\xca\x34\xf2\x3d\x61\xa1\xb3\x1b\xbf\x3c\x88\x71\x06\x97\x6a\x9f\x61\xe3\x39\x5e\xd5\xaa\x86\x96\xf4\xb5\xcd\x1a\x1a\xcd\x76\xd0\xfd\x44\x9e\xa4\xd8\xf7\xe5\xb9\x4e\xac\xe9\xe3\x45\x40\xf6\xa9\x6c\x15\x43\xd0\x62\xe4\xe4\x0d\xfa\xe3\xec\x7e\x87\x0b\xda\x22\xc2\xfe\x01\x19\x1d\xac\x82\x3b\x83\x36\x88\x90\xc6\xe0\xbb\xc3\x23\xb0\x9f\x7f\xa3\x33\xe6\xb7\xcf\x30\xfe\xb1\xe1\x76\x93\x13\x9a\x3c\x08\x82\x87\x21\x8d\xef\x12\x34\xbb\x42\xf6\xee\xfe\x6e\xf2\xc0\xea\xab\xb5\xc5\xb3\x5a\x5c\x80\x63\x21\x6a\x30\x49\xe3\x2f\x85\x5a\x10\xec\x69\x8e\xa4\xe6\xf0\x92\xec\x95\x98\x14\x85\xbf\xff\x59\xfc\x1b\x00\x00\xff\xff\x0a\x76\xc9\x8c\xc4\x09\x00\x00")

func identityBytebuildersDev_orgusersYamlBytes() ([]byte, error) {
	return bindataRead(
		_identityBytebuildersDev_orgusersYaml,
		"identity.bytebuilders.dev_orgusers.yaml",
	)
}

func identityBytebuildersDev_orgusersYaml() (*asset, error) {
	bytes, err := identityBytebuildersDev_orgusersYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "identity.bytebuilders.dev_orgusers.yaml", size: 2500, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _identityBytebuildersDev_teamsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x58\x4f\x6f\xe3\xc6\x0f\xbd\xfb\x53\x10\xf8\x1d\xf6\xb2\xb6\xb1\xf8\x15\x45\xe1\xdb\x36\xd9\x16\x41\x77\xdb\x20\x49\xf7\x4e\x49\xb4\x3c\xcd\xfc\x51\x39\x1c\xa7\xde\xa2\xdf\xbd\x98\x91\x6c\x39\xb2\xc6\x89\x9d\x74\x97\x37\x91\xa3\x37\x1c\x3e\xfa\x0d\x65\x6c\xd4\x67\x62\xaf\x9c\x5d\x00\x36\x8a\xfe\x12\xb2\xf1\xc9\xcf\xee\x7f\xf0\x33\xe5\xe6\xeb\x77\x93\x7b\x65\xab\x05\x5c\x04\x2f\xce\xdc\x90\x77\x81\x4b\xba\xa4\xa5\xb2\x4a\x94\xb3\x13\x43\x82\x15\x0a\x2e\x26\x00\x25\x13\x46\xe7\x9d\x32\xe4\x05\x4d\xb3\x00\x1b\xb4\x9e\x00\x68\x2c\x48\xfb\xb8\x06\x00\x9b\x66\x76\x1f\x0a\x62\x4b\x42\x69\x17\x8b\x86\x16\x50\x6c\x84\x8a\xa0\x74\x45\xec\x27\x00\xad\x53\x08\x8d\x9f\xa9\x8a\xac\x28\xd9\xcc\xf6\xd7\xcc\x2a\x5a\x4f\x7c\x43\x65\x84\xad\xd9\x85\x66\x01\xf9\x85\x2d\x60\x97\x42\x89\x42\xb5\x63\xb5\x7d\x9e\x42\x9f\x50\xe7\xe0\xee\xa8\x53\xe3\x2a\xd2\x9d\x13\x9b\xc6\x97\xae\xa2\xf4\xd8\x16\xe6\x8e\xd0\xa4\x47\xad\xbc\xfc\xb2\x73\x7d\x54\x5e\x92\xbb\xd1\x81\x51\x77\x07\x49\x1e\xaf\x6c\x1d\x34\x72\xeb\x9b\x00\xf8\xd2\x35\xb4\x80\x0b\x1d\xbc\x10\x4f\x00\xd6\x2d\x27\x29\xb9\x69\x57\x88\xf5\x3b\xd4\xcd\x0a\xdf\xb5\x10\xe5\x8a\x0c\xb6\xb9\x03\xb8\x86\xec\xfb\xeb\xab\xcf\xff\xbf\x7d\xe4\x06\x68\xd8\x35\xc4\xb2\x3b\x66\x6b\x7b\xa4\xef\x79\x01\x2a\xf2\x25\xab\x46\x52\x37\xbc\x89\x80\xed\x2a\xa8\x22\xdb\xe4\x41\x56\xb4\x4d\x8d\xaa\x2e\x07\x70\x4b\x90\x95\xf2\xc0\xd4\x30\x79\xb2\x92\x3a\xe0\x11\x30\xc4\x45\x68\xc1\x15\x7f\x50\x29\x33\xb8\x25\x8e\x30\xe0\x57\x2e\xe8\x0a\x4a\x67\xd7\xc4\x02\x4c\xa5\xab\xad\xfa\xb2\xc3\xf6\x20\x2e\x6d\xaa\x51\xa8\x2b\x67\x6f\xca\x0a\xb1\x45\x0d\x6b\xd4\x81\xde\x02\xda\x0a\x0c\x6e\x80\x29\xee\x02\xc1\xee\xe1\xa5\x25\x7e\x06\x9f\x1c\x13\x28\xbb\x74\x0b\x58\x89\x34\x7e\x31\x9f\xd7\x4a\xb6\xcd\x5e\x3a\x63\x82\x55\xb2\x99\x97\xce\x0a\xab\x22\x88\x63\x3f\xaf\x68\x4d\x7a\xee\x55\x3d\x45\x2e\x57\x4a\xa8\x94\xc0\x34\xc7\x46\x4d\x53\xea\x56\xd2\x2f\xc6\x54\xff\xdb\xf6\x8c\x7f\xf3\x28\x57\xd9\x44\x7a\xbd\xb0\xb2\xf5\x5e\x20\xf5\xcf\x11\x06\x62\x33\x81\xf2\x80\xdd\xab\xed\x29\xfa\x42\x47\x57\xac\xce\xcd\x87\xdb\xbb\x5d\xbb\x26\x32\x86\xd5\x4f\x75\xef\x5f\xf4\x3d\x05\xb1\x60\xca\x2e\x89\x5b\x12\x97\xec\x4c\xc2\x24\x5b\x35\x4e\x59\x49\x0f\xa5\x56\x64\x87\xe5\xf7\xa1\x30\x4a\x22\xef\x7f\x06\xf2\x12\xb9\x9a\xc1\x05\x5a\xeb\x04\x0a\x82\xd0\x54\x28\x54\xcd\xe0\xca\xc2\x05\x1a\xd2\x17\xe8\xe9\x3f\x27\x20\x56\xda\x4f\x63\x61\x9f\x47\xc1\xbe\x78\x0d\x17\xb7\x55\xdb\x0b\x6c\xa5\xa6\xb7\xf1\xdf\x57\x34\x0c\xb2\x72\xac\xbe\xd0\x30\x90\x4d\x65\xc8\xff\x29\xef\x69\xf7\x40\xfc\x6b\x94\x89\x53\xde\x32\x64\x0a\xe2\x83\xd4\x01\x94\x90\x19\x71\x1f\x3b\x6f\x77\xea\x8c\xb2\x8c\x9f\xf0\x64\x8d\xc9\x60\xc2\x40\x7b\x4e\x55\x9b\x2c\xec\xa8\x0a\x9d\xa2\x3b\x59\xe4\x6f\xab\x47\xbd\x1d\xe9\x8e\xd6\x0e\x35\x2a\xc7\xe5\x59\x6a\x95\x2d\x50\x52\xa3\x17\xe8\xd6\x11\xe0\xad\x9e\x9d\xa7\x60\x59\xe0\x6f\xa5\x6c\x27\x90\x39\xae\x76\x43\x80\x03\xdd\xeb\xed\x50\x01\x7b\x7b\x4a\x1b\xa2\xe1\x1a\x05\xf9\xf7\x9b\x8f\xf9\x25\xcf\x38\x46\x34\x32\xa8\xf4\x8b\x51\x96\x41\xeb\x71\xd9\x3c\x11\x48\xf9\xeb\x50\x68\x95\x2d\x4e\x0f\x54\x38\xa7\x09\x87\xf3\x51\x6f\x8e\xeb\xab\xcb\x63\x30\x4b\xc7\x06\x65\x11\x65\xe8\xfb\xef\x9e\xdc\x2e\x8a\x55\x9d\x66\xca\xec\x76\xaf\x52\x80\x38\xc9\x7e\xcd\xbc\xe3\x7e\x4f\x25\xfe\xba\x3b\x06\x4f\xfc\x35\x4f\x18\xf7\x7b\x05\x6a\xa2\xb8\x29\xa6\xac\x88\x4f\x77\xbd\x9b\x5d\x90\x5a\x32\x1b\x6d\x99\xcf\x86\xdb\xb2\x9d\x2d\x38\x82\x12\xb2\x82\xf2\x1c\xc9\x71\x85\x8f\x57\x46\xf5\x33\x59\x62\x1c\x9f\xac\x7a\x7b\x74\xa5\xfd\x76\xf0\x6a\xbc\xdf\xe2\x05\x62\x9c\x4f\x03\x44\xbc\x45\xea\x5d\xf4\x08\x6e\x9f\x47\xec\x92\xed\x07\x53\x7b\x07\xce\xe0\x4a\xa0\x74\xcc\xe4\x1b\x67\xab\xdd\xb8\xb1\x8d\xbf\xc9\xcf\x3d\xd1\xfa\xfd\xdf\xc2\xc3\x4a\x95\xab\x98\x64\x77\x77\x81\xb3\x60\x42\x37\x15\x15\x9b\x04\xfb\xfe\xfa\xaa\xbb\x45\xf3\x77\xd9\xeb\xf6\xf2\x13\x2c\x1f\x0d\xb7\x41\x64\xc6\xcd\x20\x66\x4f\x1d\x77\x6d\x30\x9f\x72\x13\xef\xf1\xe3\x1e\x3b\x64\x56\x40\x8f\x64\xe2\x1e\xec\xb8\x96\x9c\x9f\x86\x60\x7d\xca\x20\x4f\x36\x98\x31\xff\x14\x2e\xd3\x5f\x25\x87\xfe\x9f\xd8\x59\x99\x7e\xb0\x63\x33\xed\x14\x7e\xc4\xf2\x3e\x13\x3c\xaa\x51\x79\x7a\x83\x1a\x91\xac\x2c\xd6\xb8\xca\x4d\xfb\xcf\xb0\x81\x7f\xf7\xc1\x34\xf0\xdb\x11\xd7\xae\x6d\x06\x81\x8e\xc5\x81\x37\x12\x31\x70\x05\x55\x3d\xeb\xf3\x72\x44\xeb\xf2\x0a\xf7\x1c\x5d\x7b\x91\x9a\xed\x76\x18\xe1\xf4\x0c\x0d\xdb\xd7\xa9\x11\xc4\x97\x2a\xd7\xb9\xbf\x9c\x51\x2e\x0e\x9c\x6d\x21\x16\x20\x1c\xda\xf6\xf0\xe2\x18\x6b\xda\xf7\x84\x62\xf7\xb5\xb5\x65\xa2\x63\x14\xfe\xfe\x67\xf2\x6f\x00\x00\x00\xff\xff\x15\x79\xa8\xb3\x69\x15\x00\x00")

func identityBytebuildersDev_teamsYamlBytes() ([]byte, error) {
	return bindataRead(
		_identityBytebuildersDev_teamsYaml,
		"identity.bytebuilders.dev_teams.yaml",
	)
}

func identityBytebuildersDev_teamsYaml() (*asset, error) {
	bytes, err := identityBytebuildersDev_teamsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "identity.bytebuilders.dev_teams.yaml", size: 5481, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _identityBytebuildersDev_teamusersYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\x4d\x6f\xe3\x36\x10\xbd\xfb\x57\x0c\xd0\xc3\x5e\xd6\x32\x82\x16\x45\xa1\xdb\x22\x5b\x14\x41\xb7\x6d\x90\x64\xf7\x3e\x12\xc7\x32\x1b\x7e\x75\x66\xe8\xd6\x2d\xfa\xdf\x0b\x52\xb2\x2d\xdb\x49\x91\x14\x29\x6f\x7a\x24\x1f\x87\xef\xcd\x0c\x85\xc9\x7e\x21\x16\x1b\x43\x0b\x98\x2c\xfd\xa1\x14\xca\x97\x34\x8f\xdf\x49\x63\xe3\x6a\x7b\xb5\x78\xb4\xc1\xb4\x70\x9d\x45\xa3\xbf\x23\x89\x99\x7b\xfa\x48\x6b\x1b\xac\xda\x18\x16\x9e\x14\x0d\x2a\xb6\x0b\x80\x9e\x09\x0b\xf8\x60\x3d\x89\xa2\x4f\x2d\x84\xec\xdc\x02\xc0\x61\x47\x4e\xca\x1a\x00\x4c\xa9\x79\xcc\x1d\x71\x20\xa5\x7a\x4a\x40\x4f\x2d\x74\x3b\xa5\x2e\x5b\x67\x88\x65\x01\x30\x82\x4a\xe8\xb3\x10\x4b\x63\x0d\x05\xb5\xba\x6b\xe6\xeb\x1a\x43\xdb\x85\x24\xea\x0b\xf5\xc0\x31\xa7\x16\x9e\x5f\x38\x92\x4e\x61\xf4\xa8\x34\x44\xb6\xfb\xef\x25\x1c\x83\x9a\x00\x9e\xae\xbb\xf4\xd1\x90\x9b\x40\x4c\x49\xfa\x68\xa8\x7e\x8e\xe2\x3c\x10\xfa\xcf\x42\x5c\x21\x67\x45\x7f\x3c\x81\x3f\x59\xd1\x3a\x95\x5c\x66\x74\xb3\x4b\x55\x54\x6c\x18\xb2\x43\x3e\xe2\x0b\x00\xe9\x63\xa2\x16\xae\x5d\x16\xad\xc0\x76\xf4\xa9\x06\xbb\x9c\xc4\xd9\x5e\xa1\x4b\x1b\xbc\x1a\x69\xfa\x0d\x79\x1c\xef\x02\x10\x13\x85\x0f\xb7\x37\x5f\xbe\xbe\x3f\x81\x01\x12\xc7\x44\xac\x87\x6b\x8f\x63\x96\x08\x33\x14\xc0\x90\xf4\x6c\x93\xd6\x0c\x79\x57\x08\xc7\x55\x60\x4a\x06\x90\x80\x6e\x68\x1f\x1a\x99\x29\x06\x88\x6b\xd0\x8d\x15\x60\x4a\x4c\x42\x41\x6b\x56\x9c\x10\x43\x59\x84\x01\x62\xf7\x2b\xf5\xda\xc0\x3d\x71\xa1\x01\xd9\xc4\xec\x0c\xf4\x31\x6c\x89\x15\x98\xfa\x38\x04\xfb\xe7\x81\x5b\x40\x63\x3d\xd4\xa1\xd2\x24\xeb\x71\xd8\xa0\xc4\x01\x1d\x6c\xd1\x65\x7a\x0f\x18\x0c\x78\xdc\x01\x53\x39\x05\x72\x98\xf1\xd5\x25\xd2\xc0\x4f\x91\x09\x6c\x58\xc7\x16\x36\xaa\x49\xda\xd5\x6a\xb0\xba\x2f\x80\x3e\x7a\x9f\x83\xd5\xdd\xaa\x8f\x41\xd9\x76\x59\x23\xcb\xca\xd0\x96\xdc\x4a\xec\xb0\x44\xee\x37\x56\xa9\xd7\xcc\xb4\xc2\x64\x97\x35\xf4\xa0\xb5\x8a\xbc\xf9\x6a\x9f\x43\xf2\xee\x24\x56\xdd\x15\x7b\x45\xd9\x86\x61\x36\x51\xf3\xe9\x5f\x1c\x28\x89\x05\x56\x00\xa7\xad\xe3\x2d\x8e\x42\x17\xa8\xa8\x73\xf7\xfd\xfd\xc3\x21\x7d\xab\x19\xe7\xea\x57\xdd\x8f\x1b\xe5\x68\x41\x11\xcc\x86\x35\xf1\x68\xe2\x9a\xa3\xaf\x9c\x14\x4c\x8a\x36\x68\xfd\xe8\x9d\xa5\x70\x2e\xbf\xe4\xce\x5b\x2d\xbe\xff\x96\x49\xb4\x78\xd5\xc0\x35\x86\x10\x15\x3a\x82\x9c\x0c\x2a\x99\x06\x6e\x02\x5c\xa3\x27\x77\x8d\x42\xff\xbb\x01\x45\x69\x59\x16\x61\x5f\x66\xc1\xbc\xa1\x9d\x2f\x1e\x55\x9b\x4d\xec\x5b\xcf\x71\x3c\x5d\x5f\x65\xe0\x16\x15\xf9\xf3\xdd\xa7\xf3\x89\x67\x43\x29\x83\x3c\x5a\xf7\xaa\x1d\xeb\xec\xdc\xcf\xa5\x3f\xbc\x66\x93\x95\xdb\xdc\x39\xdb\x3f\xb7\xa9\x8b\xd1\x11\x5e\xd4\x30\x0f\x37\x1f\x2f\xb7\xac\x23\x7b\xd4\xb6\x94\xe3\xb7\xdf\x3c\x43\x58\x4a\x75\x98\x5a\xe6\x09\xe1\xab\x43\x2f\x5d\xf3\x6d\xa3\x28\x8c\x4f\x87\xf1\xdf\x39\x4b\x5f\x7f\xdb\x28\x0b\xe3\x2b\xc5\x2a\x85\x69\x99\xce\x5a\xcc\xf2\xe0\xfe\x19\x5c\xed\x3d\xc3\x46\xb5\xcf\xc0\xf1\x72\x2f\x2a\x18\x45\xcd\xf2\xd2\x92\x89\x9d\x94\xa6\x64\x7e\xa0\x40\x5c\x1f\x91\xcb\xcb\x9e\x34\xc8\x5f\x2e\x36\x94\x6e\x59\x1a\x96\x8f\x52\x9f\x13\x0a\x0a\xc3\x71\x76\x7f\xc2\x05\x6d\x75\x66\xff\x8c\x8d\x7d\xb4\x81\x1b\x85\x3e\x32\x93\xa4\x18\xcc\xe1\x29\xda\xcf\xbf\x93\x19\xf3\xfb\x27\x18\x7f\xdf\xd8\x7e\x53\x02\x9a\x3a\x21\xc4\x00\x3e\x8f\xaf\x23\x74\xbb\x4a\xf6\xe1\xf6\x66\xea\xc4\xcd\x9b\xe5\xca\x93\x5e\x5c\x80\xa3\x10\x2d\x28\xe7\xf1\xe7\x46\x34\x32\x0e\x34\x47\x72\x77\x78\xcf\xf6\x4e\x4c\x8e\xc2\x5f\x7f\x2f\xfe\x09\x00\x00\xff\xff\xc8\xc3\x5f\xdb\x4f\x0a\x00\x00")

func identityBytebuildersDev_teamusersYamlBytes() ([]byte, error) {
	return bindataRead(
		_identityBytebuildersDev_teamusersYaml,
		"identity.bytebuilders.dev_teamusers.yaml",
	)
}

func identityBytebuildersDev_teamusersYaml() (*asset, error) {
	bytes, err := identityBytebuildersDev_teamusersYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "identity.bytebuilders.dev_teamusers.yaml", size: 2639, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"cloud.bytebuilders.dev_cloudproviders.yaml":             cloudBytebuildersDev_cloudprovidersYaml,
	"cloud.bytebuilders.dev_credentials.yaml":                cloudBytebuildersDev_credentialsYaml,
	"cloud.bytebuilders.dev_machinetypes.yaml":               cloudBytebuildersDev_machinetypesYaml,
	"cluster.bytebuilders.dev_clusterauthinfotemplates.yaml": clusterBytebuildersDev_clusterauthinfotemplatesYaml,
	"cluster.bytebuilders.dev_clusterinfos.yaml":             clusterBytebuildersDev_clusterinfosYaml,
	"cluster.bytebuilders.dev_clusteruserauths.yaml":         clusterBytebuildersDev_clusteruserauthsYaml,
	"identity.bytebuilders.dev_orgusers.yaml":                identityBytebuildersDev_orgusersYaml,
	"identity.bytebuilders.dev_teams.yaml":                   identityBytebuildersDev_teamsYaml,
	"identity.bytebuilders.dev_teamusers.yaml":               identityBytebuildersDev_teamusersYaml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"cloud.bytebuilders.dev_cloudproviders.yaml":             {cloudBytebuildersDev_cloudprovidersYaml, map[string]*bintree{}},
	"cloud.bytebuilders.dev_credentials.yaml":                {cloudBytebuildersDev_credentialsYaml, map[string]*bintree{}},
	"cloud.bytebuilders.dev_machinetypes.yaml":               {cloudBytebuildersDev_machinetypesYaml, map[string]*bintree{}},
	"cluster.bytebuilders.dev_clusterauthinfotemplates.yaml": {clusterBytebuildersDev_clusterauthinfotemplatesYaml, map[string]*bintree{}},
	"cluster.bytebuilders.dev_clusterinfos.yaml":             {clusterBytebuildersDev_clusterinfosYaml, map[string]*bintree{}},
	"cluster.bytebuilders.dev_clusteruserauths.yaml":         {clusterBytebuildersDev_clusteruserauthsYaml, map[string]*bintree{}},
	"identity.bytebuilders.dev_orgusers.yaml":                {identityBytebuildersDev_orgusersYaml, map[string]*bintree{}},
	"identity.bytebuilders.dev_teams.yaml":                   {identityBytebuildersDev_teamsYaml, map[string]*bintree{}},
	"identity.bytebuilders.dev_teamusers.yaml":               {identityBytebuildersDev_teamusersYaml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
