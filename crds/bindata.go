// Package crds Code generated by go-bindata. (@generated) DO NOT EDIT.
// sources:
// cluster.bytebuilders.dev_clusterauthinfotemplates.yaml
// cluster.bytebuilders.dev_clustercredentials.yaml
// cluster.bytebuilders.dev_clusterinfos.yaml
// cluster.bytebuilders.dev_clusters.yaml
// cluster.bytebuilders.dev_clusteruserauths.yaml
package crds

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _clusterBytebuildersDev_clusterauthinfotemplatesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x58\x4d\x8f\xdb\x36\x13\xbe\xfb\x57\x0c\xf0\x1e\x72\x89\x6d\x04\x6f\x51\x14\xbe\x2d\x36\x41\x60\x24\x41\x8d\xec\x26\x77\x8a\x1a\xc9\xac\x25\x92\x1d\x0e\xbd\x71\x8a\xfe\xf7\x82\xd4\x87\x65\x49\xf4\xba\xdd\xa6\xba\x91\x1c\x0e\x9f\x67\xbe\x38\x94\xb0\xea\x2b\x92\x53\x46\x6f\x40\x58\x85\xdf\x18\x75\x18\xb9\xd5\xe1\x17\xb7\x52\x66\x7d\x7c\xb3\x38\x28\x9d\x6f\xe0\xde\x3b\x36\xf5\x67\x74\xc6\x93\xc4\xb7\x58\x28\xad\x58\x19\xbd\xa8\x91\x45\x2e\x58\x6c\x16\x00\x92\x50\x84\xc9\x47\x55\xa3\x63\x51\xdb\x0d\x68\x5f\x55\x0b\x80\x4a\x64\x58\xb9\x20\x03\x20\xac\x5d\x1d\x7c\x86\xa4\x91\x31\x9e\xa2\x45\x8d\x1b\xc8\x4e\x8c\x99\x57\x55\x8e\xe4\x16\x00\xcd\xa4\xac\xbc\x63\x24\xe1\x79\xaf\x74\x61\x18\x6b\x5b\x89\xb0\xad\x5d\x58\x0d\x77\xad\x72\x3c\x2e\x9c\x45\x19\x0e\x2a\xc9\x78\xdb\x2b\x98\xca\x35\x27\xb4\x98\xa4\x60\x2c\x0d\xa9\x6e\xbc\x84\x33\xc2\x76\x82\x5a\xee\xcb\xda\xe4\x58\xb5\x93\xc2\x5a\x27\x4d\x8e\x71\xd8\x5a\xaa\x39\xf0\xce\xf3\x7e\xab\x0b\xf3\xd8\x22\x8e\x12\x95\x72\xfc\xe1\x9a\xd4\x47\xe5\x38\x4a\xda\xca\x93\xa8\xd2\xfc\xa3\x90\x53\xba\xf4\x95\xa0\xa4\xd8\x02\xc0\x49\x63\xb1\x3f\x6f\x01\x70\x6c\x1c\x1e\x89\x2e\x5b\x2b\x1f\xdf\x88\xca\xee\xc5\x9b\x46\xab\xdc\x63\x2d\x1a\x3b\x00\x18\x8b\xfa\x6e\xb7\xfd\xfa\xff\x87\x8b\x69\x00\x4b\xc6\x22\x71\x6f\xb2\xe6\x1b\x44\xd4\x60\x16\x20\x47\x27\x49\x59\x8e\xa1\xf6\x2a\x28\x6c\xa4\x20\x0f\xa1\x84\x0e\x78\x8f\x1d\x34\xcc\x5b\x0c\x60\x0a\xe0\xbd\x72\x40\x68\x09\x1d\x6a\x8e\xe1\x75\xa1\x18\x82\x90\xd0\x60\xb2\xdf\x50\xf2\x0a\x1e\x90\x82\x1a\x70\x7b\xe3\xab\x1c\xa4\xd1\x47\x24\x06\x42\x69\x4a\xad\xbe\xf7\xba\x1d\xb0\x89\x87\x46\x73\xf2\x48\xa7\xd2\x8c\xa4\x45\x05\x47\x51\x79\x7c\x0d\x42\xe7\x50\x8b\x13\x10\x86\x53\xc0\xeb\x81\xbe\x28\xe2\x56\xf0\xc9\x10\x42\xb0\xfe\x06\xf6\xcc\xd6\x6d\xd6\xeb\x52\x71\x97\x49\xd2\xd4\xb5\xd7\x8a\x4f\x6b\x69\x34\x93\xca\x3c\x1b\x72\xeb\x1c\x8f\x58\xad\x9d\x2a\x97\x82\xe4\x5e\x31\x4a\xf6\x84\x6b\x61\xd5\x32\x42\xd7\x1c\xd3\xb1\xce\xff\xd7\xc5\x9f\x7b\x75\x81\x95\x4f\xc1\xbd\x8e\x49\xe9\x72\xb0\x10\x63\xf1\x8a\x07\x42\x14\x82\x72\x20\xda\xad\x0d\x8b\xb3\xa1\xc3\x54\xb0\xce\xe7\x77\x0f\x8f\x7d\xe8\x47\x67\x8c\xad\x1f\xed\x7e\xde\xe8\xce\x2e\x08\x06\x53\xba\x40\x6a\x9c\x58\x90\xa9\xa3\x4e\xd4\xb9\x35\x4a\x73\x1c\xc8\x4a\xa1\x1e\x9b\xdf\xf9\xac\x56\x1c\xfc\xfe\xbb\x47\xc7\xc1\x57\x2b\xb8\x17\x5a\x1b\x86\x0c\xc1\xdb\x5c\x30\xe6\x2b\xd8\x6a\xb8\x17\x35\x56\xf7\xc2\xe1\x0f\x77\x40\xb0\xb4\x5b\x06\xc3\xde\xe6\x82\x61\x65\x1c\x0b\x37\x56\x1b\x2c\x74\x55\xeb\xfc\xcd\xe7\x57\xf8\x42\x96\xef\xc8\x1c\x55\x8e\x34\x5e\x1b\xf9\xf9\x6e\x20\x1a\xcf\x50\x85\xc2\xe0\x75\x19\xeb\x79\x54\x15\x28\xca\x98\x58\xa1\xea\x94\x6a\x9c\x5f\xe1\x2b\x0c\x45\x6f\x9d\xab\x62\x5f\x58\x27\xd2\x69\xe0\x11\xfc\x77\x4f\x78\x6f\x74\xa1\xca\xb9\xe5\xe7\xb6\x43\x53\x63\x5c\x0c\xb1\xa5\xca\x53\x32\x49\xaf\x0c\xbf\x26\xf6\x5e\xac\x25\x92\x89\xd7\xc2\x8b\xf4\xa0\x3e\x2a\x32\xba\x46\xcd\x2f\xd2\xc3\xa8\xc5\x4b\x59\x85\xc4\x53\x84\x09\x15\xcb\x0b\x17\x24\x44\x7a\xe3\x26\xd6\x07\x74\x13\x12\x3d\x91\xd9\xf5\x44\x22\x75\x5f\xbc\xd8\xae\x6c\x4c\x90\x4f\x13\x6f\xee\xca\xc9\xf4\x15\x18\x32\x84\x71\x11\x72\x0b\x43\x1e\x1a\x52\x7c\x7a\x3b\x29\x08\x30\xce\xd9\xfb\xc4\xb6\x10\x68\x2c\x94\x76\xb0\x7b\xf7\x69\x89\x3a\xf4\x1d\xf9\xf0\x90\xb9\x6c\xeb\x14\x0c\xe5\xdc\x34\x67\x0b\x43\xb5\xe0\xa6\x07\x4b\x50\x9c\x35\x58\xe3\xe4\x01\xe2\x5b\xf8\xcd\xed\x99\x27\x17\xca\x67\xbc\x37\xe6\xa8\xb5\x87\x47\x66\x50\xa8\x0a\x63\x95\x7a\xfc\xf8\xf0\x6f\xd3\xfb\x80\x37\xb9\x6d\x28\xfb\x0c\x9d\x1e\xfc\x0c\xaf\x03\x9e\x7e\x10\x1b\x55\x5b\x24\x67\xb4\xe0\x99\xcc\xb8\xe0\xb2\x3d\x4b\x86\x26\x21\x54\x7e\xef\x42\x43\x54\x63\x68\x9b\x84\xe4\xa5\x98\x89\xa2\xdb\xce\x7e\x1f\x1a\xf3\x99\xe2\x9e\x42\xd0\xc8\x77\x38\xca\x66\xc4\x66\xa8\x72\x0a\x45\x31\xd6\xb3\x17\xc8\xd5\xec\x6f\x16\x05\x91\x38\xa5\xf1\x7f\x71\x48\xef\xbe\x31\xcd\x04\x84\xc8\xf3\xf8\x2a\x12\xd5\xee\xea\x2d\x76\x41\x35\xea\xfa\x1a\xdb\xaf\x5a\xb8\x43\xdb\x0a\xc7\xb1\x33\xe1\x3a\x64\x93\xf9\x02\xa4\xd0\x50\xa2\x46\x9a\xcf\xf4\x24\xe1\x67\xab\x7d\x9a\x74\xda\x27\xbd\x0d\xce\x81\x7e\xe6\x1e\x7b\xb0\x10\xa2\xd3\x5e\x1d\xda\x5e\x62\x60\xce\x3c\x86\x56\x2a\x98\x66\x0b\x6b\xe8\x42\x52\x2d\xc4\x05\xe2\x0f\xbd\xe0\x19\x67\xa1\x02\xc4\xa0\xa2\xbd\xb9\xfb\xe6\x46\xf6\x6f\xa4\x9b\xed\x67\x9e\x34\xd2\xf6\xed\x14\x46\x97\xa3\x4a\xf3\xcf\x3f\x25\x34\x86\x47\x46\x39\x39\xcf\x0a\xe7\x9e\x0c\xcd\xdc\x40\x17\xd4\x76\xad\x58\x97\x17\xdd\xb6\xc8\x26\x13\x4e\xc9\x71\x73\xc7\x66\xce\xf9\x37\x36\x75\x57\x6c\xc0\xe6\x80\xfa\x19\xb4\x8f\x41\xa6\x83\x9a\xa1\xa0\xf0\x28\x88\x73\x01\xee\x04\xe8\x08\xd6\x0c\xee\x7f\x02\xd4\xcf\xb5\x44\xd7\xe4\xdb\x92\xf7\x0c\xb7\x2f\x5d\x65\x1c\x57\xca\xff\xd8\x13\xf3\xad\xcb\xb2\x8b\xd1\xd1\xac\x1f\xb5\x55\xa9\x77\x09\x0b\xf6\xee\xd6\x97\x89\xc9\x62\x57\x98\xbf\x6f\xea\xd4\xe4\x2f\xc0\xc4\x76\xbf\x4e\x36\x74\x56\xac\x8d\x8b\xaf\xf6\x70\xc3\x97\xe7\xd5\xee\x84\xe4\x1b\x25\xfe\x2d\x68\x9e\xab\x2b\xd8\x32\x48\x43\x84\xce\x1a\x9d\xf7\x2f\xfe\x6e\xfd\x95\x1b\x68\x7e\x3d\xa3\xf1\x69\xaf\xe4\x3e\x00\x6a\x1f\x9c\x60\x34\xd4\xbe\xf9\x09\x01\xd9\x29\x2a\xbb\xdb\x6d\xdb\x07\x6f\xfa\xa2\xfe\xbb\x45\x60\xd6\x17\x93\xc9\xc6\x10\x1b\x60\xf2\xcd\x85\xe0\xd8\x90\x28\x71\x38\xe3\xb3\xfe\xb7\x41\xe7\x89\xd6\xa3\xf0\xc7\x9f\x8b\xbf\x02\x00\x00\xff\xff\x3e\x4f\xaa\xa9\xff\x13\x00\x00")

func clusterBytebuildersDev_clusterauthinfotemplatesYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterBytebuildersDev_clusterauthinfotemplatesYaml,
		"cluster.bytebuilders.dev_clusterauthinfotemplates.yaml",
	)
}

func clusterBytebuildersDev_clusterauthinfotemplatesYaml() (*asset, error) {
	bytes, err := clusterBytebuildersDev_clusterauthinfotemplatesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cluster.bytebuilders.dev_clusterauthinfotemplates.yaml", size: 5119, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterBytebuildersDev_clustercredentialsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x58\x51\x6f\xe3\xb6\x0f\x7f\xcf\xa7\x20\xf0\x7f\xe8\xcb\xc5\x41\xf1\x1f\x86\x21\x6f\x45\x6f\x18\x8a\xdb\x70\x87\x6b\x71\xef\xb2\xcc\x38\x5a\x65\x49\x23\xa9\xf4\xd2\x61\xdf\x7d\x90\x6c\x27\x6e\xe2\xe4\x5a\xb7\x87\x6d\x7e\x33\x49\x51\xd4\xef\x47\xd2\xa2\x55\x30\x5f\x90\xd8\x78\xb7\x04\x15\x0c\x7e\x15\x74\xe9\x8d\x8b\xfb\x9f\xb8\x30\x7e\xb1\xb9\x9c\xdd\x1b\x57\x2d\xe1\x3a\xb2\xf8\xe6\x33\xb2\x8f\xa4\xf1\x3d\xae\x8c\x33\x62\xbc\x9b\x35\x28\xaa\x52\xa2\x96\x33\x00\x4d\xa8\x92\xf0\xce\x34\xc8\xa2\x9a\xb0\x04\x17\xad\x9d\x01\x58\x55\xa2\xe5\x64\x03\xa0\x42\x28\xee\x63\x89\xe4\x50\x30\xef\xe2\x54\x83\x4b\x28\xb7\x82\x65\x34\xb6\x42\xe2\x19\x40\x2b\xd4\x36\xb2\x20\x69\xc2\x0a\x9d\x18\x65\xb9\xe8\x44\xc5\xd0\xbe\xa8\x70\x33\xe3\x80\x3a\x6d\x51\x93\x8f\x61\xb7\xf4\xd8\xae\xf5\xdd\x45\xa3\x95\x60\xed\xc9\xf4\xef\x73\xd8\xc7\xd6\x09\xa8\x3b\xf5\xbc\xf1\x15\xda\x4e\xa8\x42\x60\xed\x2b\xcc\xaf\x1d\x46\xed\x86\xd7\xbb\x58\xb3\xce\x1a\x96\x0f\xe3\xfa\x5f\x0d\x4b\xb6\x09\x36\x92\xb2\x63\xa7\xcd\x6a\x36\xae\x8e\x56\xd1\x88\xc1\x0c\x80\xb5\x0f\xb8\xf3\x3e\x03\xd8\xb4\x94\xe6\x03\xcd\x3b\x1c\x37\x97\xca\x86\xb5\xba\x6c\xfd\xe9\x35\x36\xaa\x3d\x2f\x80\x0f\xe8\xae\x3e\xdd\x7c\xf9\xff\xed\x13\x31\x40\x20\x1f\x90\x64\x07\x4d\xfb\x0c\x72\x66\x20\x05\xa8\x90\x35\x99\x20\x39\x99\x2e\x92\xc3\xd6\x0a\xaa\x94\x2c\xc8\x20\x6b\xec\x43\xc3\xaa\x8b\x01\xfc\x0a\x64\x6d\x18\x08\x03\x21\xa3\x93\x9c\x40\x4f\x1c\x43\x32\x52\x0e\x7c\xf9\x3b\x6a\x29\xe0\x16\x29\xb9\x01\x5e\xfb\x68\x2b\xd0\xde\x6d\x90\x04\x08\xb5\xaf\x9d\x79\xdc\xf9\x66\x10\x9f\x37\xb5\x4a\xb0\x03\x7a\xff\x18\x27\x48\x4e\x59\xd8\x28\x1b\xf1\x1d\x28\x57\x41\xa3\xb6\x40\x98\x76\x81\xe8\x06\xfe\xb2\x09\x17\xf0\x9b\x27\x04\xe3\x56\x7e\x09\x6b\x91\xc0\xcb\xc5\xa2\x36\xd2\xd7\x8a\xf6\x4d\x13\x9d\x91\xed\x42\x7b\x27\x64\xca\x28\x9e\x78\x51\xe1\x06\xed\x82\x4d\x3d\x57\xa4\xd7\x46\x50\x4b\x24\x5c\xa8\x60\xe6\x39\x74\x27\xb9\xe0\x9a\xea\x7f\x7d\x9e\xf1\xc5\x93\x58\x65\x9b\xe8\x65\x21\xe3\xea\x81\x22\xe7\xdc\x19\x06\x52\xce\x81\x61\x50\xdd\xd2\xf6\x14\x7b\xa0\x93\x28\xa1\xf3\xf9\xe7\xdb\xbb\x5d\x8a\x67\x32\x0e\xd1\xcf\xb8\xef\x17\xf2\x9e\x82\x04\x98\x71\x2b\xa4\x96\xc4\x15\xf9\x26\xfb\x44\x57\x05\x6f\x9c\xe4\x17\x6d\x0d\xba\x43\xf8\x39\x96\x8d\x91\xc4\xfb\x1f\x11\x59\x12\x57\x05\x5c\x2b\xe7\xbc\x40\x89\x10\x43\xa5\x04\xab\x02\x6e\x1c\x5c\xab\x06\xed\xb5\x62\xfc\xee\x04\x24\xa4\x79\x9e\x80\x7d\x1e\x05\xc3\xde\x77\x68\xdc\xa2\x36\x50\xf4\xdd\x69\xff\x8c\xd7\x57\x7a\xd4\x03\xef\xbb\xc4\xa1\xf2\xdc\xc2\xbc\x58\x6b\x64\xfe\x80\xdb\x9b\xf7\x63\xea\x93\xa7\xd9\x05\x8a\x9a\x50\xae\x7a\x2f\x13\x7c\x24\x52\x0d\x61\x75\xbc\x74\x3e\x8c\x6e\x44\x7b\xb0\xf7\x91\xc5\x09\x6c\xf3\xb1\x1f\x23\xe1\x74\xd4\xda\x2c\x9d\x08\x59\xbb\xf8\x36\x07\x3f\x0d\xf3\x58\xee\x6a\x77\x62\x0c\x82\x4e\x4d\x3c\xc0\x39\xbe\x7a\x5c\x4e\xaa\xda\x53\x8f\x71\xf9\xe4\x4c\x23\x06\x7d\xc4\x2f\x61\xb9\x32\xb5\x11\x65\x3f\x6a\x54\x6e\x3a\xd9\xe2\xef\xd1\xbd\x31\x50\xd9\xe7\x4b\x8e\x52\xeb\x57\xa4\x6b\x20\x9f\x5c\x4e\x2e\x71\xda\x18\x8d\x57\x5a\xfb\xe8\xa6\x64\xec\x39\x20\x76\xa1\x8d\xd6\xf7\x70\xe3\x17\xa1\xe5\x7d\x6d\x5f\x01\x58\xdb\x77\xee\x26\x12\xff\x4f\xf7\x07\xfc\x1a\x0c\x9d\x68\xc5\x2b\x4f\x8d\x92\x65\xba\xd1\xfc\xf8\xc3\x19\xe7\xe9\xc6\x53\xe7\x0b\xe2\xe1\x43\xb8\x22\xe4\xf5\x74\x70\xf2\x15\x74\x14\x76\x00\x23\xd8\x9c\x50\x7d\xd3\x6f\x6f\xa0\x88\xd4\xf1\xc7\xe0\xdb\x9f\x99\xbb\xd1\x9a\x9c\xde\xd4\xce\xe4\xa7\x35\xce\x57\xaf\xc8\xcf\x7f\x45\x4b\xca\xb3\xc2\x89\x05\xa3\xfb\xfb\x07\x87\x34\x56\x14\xe7\x93\xf2\x5c\x42\x06\xa5\xef\x51\x5e\x51\xe8\xc1\x4c\xbb\xb5\xbc\xae\xa9\x9e\x4d\xc6\x1c\xd2\x8b\x5a\xe5\x19\x92\x02\xf9\x8d\xa9\x90\x5e\x44\x14\x6b\x65\xf1\x41\x6d\xa7\xe3\xea\xa9\x56\xce\x3c\xe6\xf9\x6c\xda\x05\xe5\x3b\x64\xf8\x30\xa8\xb7\x28\x80\x4d\xb4\x42\xff\xe9\x22\x1e\x77\xd5\xfe\x06\x38\x10\x75\xc5\x7b\x20\xed\xd3\xeb\x59\x33\x8d\x28\x89\xfc\xdc\xa9\xc6\x97\xe9\xf3\x8f\xd5\x2f\xe8\x90\x4e\xe4\xd1\x93\x19\xf6\xe3\xd1\x82\x34\xd0\xa6\x99\xb2\xf1\x9c\x27\x7e\x74\x02\xf5\x5e\xdb\xef\x30\xc2\xc0\xca\x53\xff\xa7\xa1\x1d\x75\x0b\xb8\x11\xd0\x9e\x08\x39\x78\x57\xed\xfe\x16\xf4\xfa\x0b\x1e\x78\x7e\x37\xe2\xf1\x61\x6d\xf4\x3a\x05\xd4\x0d\xab\xe0\x1d\x34\xb1\xfd\x81\x01\xe5\x36\x3b\xbb\xfa\x74\xd3\x0d\xcb\xc5\x9b\xb5\xc8\x51\x2e\x8e\x84\x2d\x10\x4b\x10\x8a\x2d\xef\x2c\x9e\x54\x8d\x43\x49\x2c\x77\xbf\x1c\x7a\x26\x3a\x46\xe1\xcf\xbf\x66\x7f\x07\x00\x00\xff\xff\xa7\x68\xca\xcb\x1d\x14\x00\x00")

func clusterBytebuildersDev_clustercredentialsYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterBytebuildersDev_clustercredentialsYaml,
		"cluster.bytebuilders.dev_clustercredentials.yaml",
	)
}

func clusterBytebuildersDev_clustercredentialsYaml() (*asset, error) {
	bytes, err := clusterBytebuildersDev_clustercredentialsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cluster.bytebuilders.dev_clustercredentials.yaml", size: 5149, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterBytebuildersDev_clusterinfosYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\x4d\x8f\xdb\x36\x10\xbd\xfb\x57\x0c\xd0\x43\x2e\xb1\x8c\x6d\x8a\xa2\xf0\x6d\xb1\x29\x0a\x23\x6d\xba\xc8\x06\xb9\x53\xe4\x58\x62\x97\x22\xd9\x99\xa1\x93\x6d\xd1\xff\x5e\x90\x94\x6c\xf9\x23\x85\x5d\xb4\xba\x71\x3e\x1e\x87\x6f\x1e\x87\x52\xd1\x7e\x42\x62\x1b\xfc\x1a\x54\xb4\xf8\x45\xd0\xe7\x15\x37\xcf\x3f\x70\x63\xc3\x6a\x77\xb7\x78\xb6\xde\xac\xe1\x21\xb1\x84\xe1\x03\x72\x48\xa4\xf1\x2d\x6e\xad\xb7\x62\x83\x5f\x0c\x28\xca\x28\x51\xeb\x05\x80\x26\x54\xd9\xf8\xd1\x0e\xc8\xa2\x86\xb8\x06\x9f\x9c\x5b\x00\x38\xd5\xa2\xe3\x1c\x03\xa0\x62\x6c\x9e\x53\x8b\xe4\x51\xb0\xec\xe2\xd5\x80\x6b\x68\x5f\x04\xdb\x64\x9d\x41\xe2\x05\x40\x35\x6a\x97\x58\x90\xac\xdf\x06\x6e\xc6\x45\x33\x8f\x6c\x0c\xee\x16\x1c\x51\x67\xf0\x8e\x42\x8a\xfb\xa4\xf3\xb8\x8a\x3a\xd6\xa1\x95\x60\x17\xc8\x4e\xeb\x25\x1c\xaa\x1a\x0d\x34\x9e\x77\x39\x04\x83\x6e\x34\xaa\x18\x59\x07\x83\x65\x39\xb2\x53\x37\xdc\xf8\x6d\x28\x56\x67\x59\xde\x9d\x7a\x7e\xb6\x2c\xc5\x1b\x5d\x22\xe5\x8e\xcf\x56\x1c\x6c\x7d\x97\x9c\xa2\x23\xd7\x02\x80\x75\x88\xb8\xc7\x5a\x00\xec\x6a\xd3\x4a\xe1\xcb\x91\xa9\xdd\x9d\x72\xb1\x57\x77\x15\x49\xf7\x38\xa8\x7a\x2e\x80\x10\xd1\xdf\x3f\x6e\x3e\xbd\x79\x3a\x32\x03\x44\x0a\x11\x49\xf6\x14\xd4\x6f\xa6\x8a\x99\x15\xc0\x20\x6b\xb2\x51\x8a\x5c\x5e\x65\xc0\x1a\x05\x26\xcb\x01\x19\xa4\xc7\xa9\x34\x34\x63\x0d\x10\xb6\x20\xbd\x65\x20\x8c\x84\x8c\x5e\x8a\x44\x8e\x80\x21\x07\x29\x0f\xa1\xfd\x0d\xb5\x34\xf0\x84\x94\x61\x80\xfb\x90\x9c\x01\x1d\xfc\x0e\x49\x80\x50\x87\xce\xdb\x3f\xf6\xd8\x0c\x12\xca\xa6\x4e\x09\x8e\xe4\x1e\x3e\xeb\x05\xc9\x2b\x07\x3b\xe5\x12\xbe\x06\xe5\x0d\x0c\xea\x05\x08\xf3\x2e\x90\xfc\x0c\xaf\x84\x70\x03\xbf\x04\x42\xc8\xac\xaf\xa1\x17\x89\xbc\x5e\xad\x3a\x2b\xd3\x6d\xd0\x61\x18\x92\xb7\xf2\xb2\xd2\xc1\x0b\xd9\x36\x49\x20\x5e\x19\xdc\xa1\x5b\xb1\xed\x96\x8a\x74\x6f\x05\xb5\x24\xc2\x95\x8a\x76\x59\x4a\xf7\x52\xae\xd4\x60\xbe\x99\xf4\xc4\xaf\x8e\x6a\x95\x97\xdc\x5e\x16\xb2\xbe\x9b\x39\x8a\xb6\xfe\xa1\x03\x59\x61\x60\x19\xd4\x98\x5a\x4f\x71\x20\x3a\x9b\x32\x3b\x1f\x7e\x7c\xfa\xb8\x97\x72\x69\xc6\x29\xfb\x85\xf7\x43\x22\x1f\x5a\x90\x09\xb3\x7e\x8b\x54\x9b\xb8\xa5\x30\x14\x4c\xf4\x26\x06\xeb\xa5\x2c\xb4\xb3\xe8\x4f\xe9\xe7\xd4\x0e\x56\x72\xdf\x7f\x4f\xc8\x92\x7b\xd5\xc0\x83\xf2\x3e\x08\xb4\x08\x29\x1a\x25\x68\x1a\xd8\x78\x78\x50\x03\xba\x07\xc5\xf8\xbf\x37\x20\x33\xcd\xcb\x4c\xec\x75\x2d\x98\x4f\xb7\xd3\xe0\xca\xda\xcc\x31\x4d\xa1\xc3\x77\xf9\x7e\xe5\xaf\x8c\x4a\x34\xf7\x72\xea\x00\xd8\x06\x1a\x94\xac\xb3\x7e\xbf\xff\xee\xcc\x5b\xf7\xce\xda\xee\xca\x28\x98\x7f\x53\x53\xce\x31\xbf\x72\xbc\x92\xf4\xa5\x5e\x93\xcd\xdb\x9b\xd2\xca\xfc\x57\xee\xdd\x7e\x64\x5e\x1c\x19\xd7\x81\xbc\x0f\x06\x1f\x42\xba\x54\xf8\x8c\x8c\x37\xdf\xde\x44\x86\x0b\xba\x4c\x9a\x9b\x0a\x2a\xa3\xf4\x96\x84\xf0\xd9\x23\x5d\xa2\xee\xdf\x77\xb1\x40\xbe\xbf\xb5\x90\x48\x21\xcb\xf1\xd6\x9c\x9d\x35\x48\x37\x25\x25\x6b\x6e\x88\xcf\xb7\xdf\x12\x9e\xa4\xd4\x37\xeb\xc4\x34\x52\x79\x62\x4d\xd6\x5c\x75\xf7\x44\x49\xe2\x6b\x6f\x5f\x68\x39\xcf\x37\xf3\x13\x7a\xa4\xaf\xa8\xe4\x68\xd6\xfe\x7a\x96\x90\x07\x6f\x9e\x7d\x43\xe0\xf2\x32\xa1\x17\xe8\x0e\xde\x69\x87\x33\xd8\xa2\x8c\xe9\x45\xac\x23\xb9\x81\x8d\x80\x0e\x44\xc8\x31\x78\xb3\x7f\xd5\x26\xff\x2b\x9e\x21\xbf\xbe\x80\xf8\xb9\xb7\xba\xcf\x05\x8d\x43\x15\x82\x87\x21\xd5\x87\x16\xda\x97\x02\x76\xff\xb8\x19\x87\x7a\xf3\x1f\x6a\x35\xf6\x8a\x2f\xe8\xf4\x88\xbb\xc7\x1c\x33\x7b\x5c\x40\x27\xa2\x4c\x57\xed\x59\xfd\x41\xc0\xe9\x97\xe7\x7a\x69\x5d\x54\xc2\x99\xb1\xb6\x61\x0d\x42\xa9\x0a\x8e\x25\x90\xea\x70\x6e\x49\xed\xfe\x61\x9e\xce\x32\xea\x09\xfe\xfc\x6b\xf1\x77\x00\x00\x00\xff\xff\x85\x33\xfe\xf8\x25\x0b\x00\x00")

func clusterBytebuildersDev_clusterinfosYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterBytebuildersDev_clusterinfosYaml,
		"cluster.bytebuilders.dev_clusterinfos.yaml",
	)
}

func clusterBytebuildersDev_clusterinfosYaml() (*asset, error) {
	bytes, err := clusterBytebuildersDev_clusterinfosYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cluster.bytebuilders.dev_clusterinfos.yaml", size: 2853, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterBytebuildersDev_clustersYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x54\x4d\x8f\xe3\x36\x0c\xbd\xe7\x57\x10\xe8\x61\x2e\x1b\x07\x83\x16\x45\xe1\xdb\x20\x2d\x8a\x41\xbf\x06\x3b\x8b\xbd\xd3\x12\x63\x6b\x47\x96\x54\x92\x4a\x9b\x16\xfd\xef\x85\x64\x3b\xf1\x24\x8b\x69\x2f\x9b\x53\xf4\x48\x3d\xd1\xef\x91\xc4\xe4\x3e\x12\x8b\x8b\xa1\x05\x4c\x8e\xfe\x54\x0a\xe5\x24\xcd\xcb\x77\xd2\xb8\xb8\x3b\xde\x6f\x5e\x5c\xb0\x2d\xec\xb3\x68\x1c\xdf\x93\xc4\xcc\x86\xbe\xa7\x83\x0b\x4e\x5d\x0c\x9b\x91\x14\x2d\x2a\xb6\x1b\x00\xc3\x84\x05\xfc\xe0\x46\x12\xc5\x31\xb5\x10\xb2\xf7\x1b\x00\x8f\x1d\x79\x29\x39\x00\x98\x52\xf3\x92\x3b\xe2\x40\x4a\xf5\x95\x80\x23\xb5\xd0\x9d\x94\xba\xec\xbc\x25\x96\x0d\xc0\x04\x1a\x9f\x45\x89\xa5\x99\xff\x34\xeb\xac\xc6\xd2\x71\x23\x89\x4c\x21\xee\x39\xe6\x74\xbe\x70\x9b\x37\x31\xce\x35\x18\x54\xea\x23\xbb\xe5\xbc\x85\x4b\x45\x33\x80\x29\x89\x89\x96\xea\x71\x16\x61\xe2\xae\x88\x77\xa2\x3f\xad\xd1\x9f\x9d\x68\x8d\x24\x9f\x19\xfd\xa5\xf4\x0a\x8a\x0b\x7d\xf6\xc8\x67\x78\x03\x20\x26\x26\x6a\xe1\xd7\x52\x56\x42\x43\x76\x03\x70\x9c\xec\xa8\x65\x6d\x01\xad\xad\x2a\xa3\x7f\x62\x17\x94\x78\x1f\x7d\x1e\xc3\xb9\xe8\x4f\x12\xc3\x13\xea\xd0\x42\xb3\xf8\xd0\xdc\x98\x50\x73\x17\x3d\x1f\x7a\x9a\xcf\x7a\x2a\x8f\x5b\xd4\x09\x98\xc2\xc7\x7b\xf4\x69\xc0\xfb\xa9\x66\x33\xd0\x88\xed\x9c\x1f\x13\x85\x87\xa7\xc7\x8f\x5f\x3f\xbf\x82\x01\x12\xc7\x44\xac\x67\x2d\xa7\xdf\xaa\xb5\x56\x28\x80\x25\x31\xec\x92\xd6\x9e\xbb\x2b\x84\x53\x16\xd8\xd2\x53\x24\xa0\x03\x2d\x2a\x90\x9d\x6b\x80\x78\x00\x1d\x9c\x00\x53\x62\x12\x0a\x5a\x3f\xf1\x15\x31\x94\x24\x0c\x10\xbb\x4f\x64\xb4\x81\x67\xe2\x42\x03\x32\xc4\xec\x2d\x98\x18\x8e\xc4\x0a\x4c\x26\xf6\xc1\xfd\x75\xe6\x16\xd0\x58\x1f\xf5\xa8\x34\x5b\x78\xf9\x55\xd5\x03\x7a\x38\xa2\xcf\xf4\x0e\x30\x58\x18\xf1\x04\x4c\xe5\x15\xc8\x61\xc5\x57\x53\xa4\x81\x5f\x22\x13\xb8\x70\x88\x2d\x0c\xaa\x49\xda\xdd\xae\x77\xba\x8c\x94\x89\xe3\x98\x83\xd3\xd3\xce\xc4\xa0\xec\xba\xac\x91\x65\x67\xe9\x48\x7e\x27\xae\xdf\x22\x9b\xc1\x29\x19\xcd\x4c\x3b\x4c\x6e\x5b\x4b\x0f\x5a\xe7\x72\xb4\x5f\xf1\x3c\x84\x72\xf7\xaa\xd6\xc9\x4f\x51\x76\xa1\x5f\x05\x6a\xe7\xbe\xe1\x40\xe9\x61\x70\x02\x38\x5f\x9d\xbe\xe2\x22\x74\x81\x8a\x3a\xef\x7f\x78\xfe\x00\xcb\xd3\xd5\x8c\x6b\xf5\xab\xee\x97\x8b\x72\xb1\xa0\x08\xe6\xc2\x81\x78\x32\xf1\xc0\x71\xac\x9c\x14\x6c\x8a\x2e\x68\x3d\x18\xef\x28\x5c\xcb\x2f\xb9\x1b\x9d\x16\xdf\x7f\xcf\x24\x5a\xbc\x6a\x60\x8f\x21\x44\x85\x8e\x20\xa7\xd2\xbf\xb6\x81\xc7\x00\x7b\x1c\xc9\xef\x51\xe8\x8b\x1b\x50\x94\x96\x6d\x11\xf6\xff\x59\xb0\x5e\x91\xd7\xc9\x93\x6a\xab\xc0\xb2\xce\xfe\x3b\x51\x51\xb3\xbc\x4e\xfd\xfc\x28\x4e\xee\x48\x31\xc3\xfe\x48\x81\xb8\x0e\xcf\x75\xc6\x55\x63\xfc\x76\x73\xa1\x74\x49\x31\x6a\x8c\x52\xc7\x88\x82\x42\x7f\x89\x2e\x2f\xdc\xd0\x02\x1c\xe2\xec\xfc\xbc\x2a\x1b\x78\x54\x30\x91\x99\x24\xc5\x60\xcf\x13\x38\x87\xef\x64\xc5\xfb\x0e\xfe\x18\x9c\x19\x3e\xc3\xea\x64\xf1\x1f\x62\x80\x31\x4f\x3b\x01\xba\x53\xe5\x7a\x78\x7a\x9c\xfb\xaf\xb9\xb9\x7b\x88\x3c\xa2\xb6\x65\xb8\xbf\xfd\xe6\x26\x3a\xe9\x5d\x06\xbf\x9f\x77\xfd\x9b\x4e\xdc\x80\x93\x0c\x2d\x28\xe7\x69\xb5\x8a\x46\xc6\x9e\xd6\x48\xee\xce\x53\xbc\xf8\x30\xfb\x09\x7f\xff\xb3\xf9\x37\x00\x00\xff\xff\xd6\xd2\x64\xd4\x97\x07\x00\x00")

func clusterBytebuildersDev_clustersYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterBytebuildersDev_clustersYaml,
		"cluster.bytebuilders.dev_clusters.yaml",
	)
}

func clusterBytebuildersDev_clustersYaml() (*asset, error) {
	bytes, err := clusterBytebuildersDev_clustersYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cluster.bytebuilders.dev_clusters.yaml", size: 1943, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterBytebuildersDev_clusteruserauthsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x58\xdf\x6f\xdb\xb8\x0f\x7f\xcf\x5f\x41\xe0\xfb\xb0\x97\x25\xc5\xf0\x3d\x1c\x0e\x79\x2b\xba\x62\x28\xb6\xdd\x15\x6b\xb7\x77\x59\xa6\x1d\x5d\x6d\xc9\x47\x52\x69\xb3\xc3\xfd\xef\x07\x49\xb6\xe3\x24\xb6\x9b\xb5\xd8\xf9\xcd\x22\x45\xf1\xc3\x5f\x22\xa5\x1a\xf3\x0d\x89\x8d\xb3\x6b\x50\x8d\xc1\x27\x41\x1b\xfe\x78\xf5\xf0\x1b\xaf\x8c\xbb\xd8\xbe\x5b\x3c\x18\x9b\xaf\xe1\xca\xb3\xb8\xfa\x0b\xb2\xf3\xa4\xf1\x3d\x16\xc6\x1a\x31\xce\x2e\x6a\x14\x95\x2b\x51\xeb\x05\x80\x26\x54\x61\xf1\xde\xd4\xc8\xa2\xea\x66\x0d\xd6\x57\xd5\x02\xa0\x52\x19\x56\x1c\x78\x00\x54\xd3\xac\x1e\x7c\x86\x64\x51\x30\x9e\x62\x55\x8d\x6b\xc8\x76\x82\x99\x37\x55\x8e\xc4\x0b\x80\xb4\xa8\x2b\xcf\x82\xe4\x19\x49\x79\xd9\xf0\xaa\x5d\x58\x0d\xb9\x57\x39\x6e\x17\xdc\xa0\x0e\x07\x94\xe4\x7c\xd3\x6f\x3c\xe5\x4b\x92\x5b\x5d\xb4\x12\x2c\x1d\x99\xee\x7f\x09\x7b\xcd\xda\x05\x6a\x31\x2f\x6b\x97\x63\xd5\x2e\xaa\xa6\x61\xed\x72\x8c\xbf\xad\x85\xd2\x81\x5f\x19\xe9\xd2\xcb\x26\x52\x2a\xc3\xf2\x71\x8c\xfa\xc9\xb0\x44\x8e\xa6\xf2\xa4\xaa\x53\x9c\x91\xc8\xc6\x96\xbe\x52\x74\x42\x5e\x00\xb0\x76\x0d\xf6\x72\x17\x00\xdb\xe4\xc8\x08\x64\xd9\x5a\x6f\xfb\x4e\x55\xcd\x46\xbd\x4b\xd2\xf4\x06\x6b\x95\x70\x02\xb8\x06\xed\xe5\xed\xcd\xb7\xff\xdf\x1d\x2c\x03\x34\xe4\x1a\x24\xe9\x4d\x92\xbe\x41\xa4\x0c\x56\x01\x72\x64\x4d\xa6\x91\x18\x42\x6f\x82\xc0\xc4\x05\x79\x08\x11\x64\x90\x0d\x76\xaa\x61\xde\xea\x00\xae\x00\xd9\x18\x06\xc2\x86\x90\xd1\x4a\x0c\x9b\x03\xc1\x10\x98\x94\x05\x97\xfd\x89\x5a\x56\x70\x87\x14\xc4\x00\x6f\x9c\xaf\x72\xd0\xce\x6e\x91\x04\x08\xb5\x2b\xad\xf9\xde\xcb\x66\x10\x17\x0f\xad\x94\x60\x6b\xe4\xfd\x67\xac\x20\x59\x55\xc1\x56\x55\x1e\xdf\x82\xb2\x39\xd4\x6a\x07\x84\xe1\x14\xf0\x76\x20\x2f\xb2\xf0\x0a\x3e\x3b\x42\x30\xb6\x70\x6b\xd8\x88\x34\xbc\xbe\xb8\x28\x8d\x74\x19\xa2\x5d\x5d\x7b\x6b\x64\x77\xa1\x9d\x15\x32\x99\x17\x47\x7c\x91\xe3\x16\xab\x0b\x36\xe5\x52\x91\xde\x18\x41\x2d\x9e\xf0\x42\x35\x66\x19\x55\xb7\x12\xd3\xac\xce\xff\xd7\xc5\x17\xbf\x39\xd0\x55\x76\xc1\xbd\x2c\x64\x6c\x39\x20\xc4\x58\x9b\xf1\x40\x88\x36\x30\x0c\xaa\xdd\x9a\x50\xec\x0d\x1d\x96\x82\x75\xbe\x5c\xdf\xdd\xf7\xa1\x1d\x9d\x71\x6c\xfd\x68\xf7\xfd\x46\xde\xbb\x20\x18\xcc\xd8\x02\x29\x39\xb1\x20\x57\x47\x99\x68\xf3\xc6\x19\x2b\xf1\x47\x57\x06\xed\xb1\xf9\xd9\x67\xb5\x91\xe0\xf7\xbf\x3c\xb2\x04\x5f\xad\xe0\x4a\x59\xeb\x04\x32\x04\xdf\xe4\x4a\x30\x5f\xc1\x8d\x85\x2b\x55\x63\x75\xa5\x18\x7f\xba\x03\x82\xa5\x79\x19\x0c\x7b\x9e\x0b\x86\x15\xef\x98\x39\x59\x6d\x40\xe8\xaa\xd2\xfe\x1b\xcf\xaf\xf0\x85\xcc\xbe\x25\xb7\x35\x39\xd2\x31\xed\xc8\xcf\x97\x03\xd6\x78\x86\x29\x0c\x06\xaf\xeb\x58\xa7\xa3\xa8\x00\x51\xc7\xc4\x0a\x55\xa6\x34\xc7\xf9\x15\xbe\xc2\x51\xf4\xd6\xbe\xea\xf5\x85\xf3\x84\x7b\x5a\xf1\xa8\xfc\x77\x4f\x78\xe5\x6c\x61\xca\x31\xf2\x73\xdb\x21\xd5\x18\x8e\x21\xb6\x34\xf9\x14\xcf\xa4\x57\x86\x5f\x8a\xbd\x57\x4b\x89\x60\x62\xd9\x7f\x95\x1c\xb4\x5b\x43\xce\xd6\x68\xe5\x55\x72\x04\xad\x7a\x2d\xaa\x90\x78\x86\x70\x42\xc4\xf2\xc0\x05\x13\x2c\xbd\x71\x27\xe8\x03\xb8\x13\x1c\x3d\x90\x51\xfa\x44\x22\x75\x5f\xbc\xd8\x66\x36\x4e\x80\x9f\x06\x9e\xee\xca\x93\xe5\x19\x35\xd4\x23\x4f\xa7\xe9\x33\x59\xc2\xec\x6b\xfc\xe2\x2a\xbc\x24\xfb\x02\x18\x43\x09\xd7\x4f\xe9\x2e\xbb\x79\xff\x22\x41\x5a\xe9\xcd\xac\x25\x33\xe7\x2a\x54\x63\x55\xa3\x2d\x11\x2f\x3c\xb8\x70\xf4\xa8\x28\xbf\x43\x0e\x4d\xc1\xef\xcf\xf8\x73\x5a\x0b\xc2\xf2\xa4\x1d\x39\x53\x05\x3e\xef\xec\x89\xfd\x33\xa1\x91\x92\xe3\x2a\x04\x40\x11\x8a\x2f\xbe\x3f\xb9\x28\xe0\xb8\x96\x5f\x8d\xed\x09\xd5\x47\x94\xb1\x0c\xb7\xd7\x9f\x97\x68\x43\xb3\x99\x43\xb8\x76\xe2\x7d\x3b\x16\x18\xed\xe1\xa0\x43\x5f\x54\x98\x0a\x63\x75\xbf\xff\x74\x77\x5a\xca\x0b\x47\xb5\x92\xd4\x72\x4f\xc0\x1b\xc5\x9e\x4e\xf8\x88\xbb\xb3\x61\xb5\xbc\xcf\xc0\xe9\x95\x1f\xc1\xf5\x80\xbb\x9f\x86\x26\xf5\xe4\x63\x71\x3c\xb3\xad\x7c\xc0\x17\xa7\xbf\xd6\xc8\x7c\xef\x1e\xf0\x65\x71\x9b\x8c\xf4\xd2\x84\x8f\x9b\xef\x50\x13\x4e\x5c\x44\xcf\x08\xc0\xa7\xc6\xd0\x6e\x7c\x6b\xe7\x03\x63\xe5\xd7\x5f\x66\x84\x87\x06\xbc\x8c\xf3\xca\xf1\x47\x58\x10\xf2\xe6\xa5\xc6\x99\x2b\xf0\x03\xb3\x8f\x50\x3b\xa3\x4e\x92\x92\xc9\x7e\xa4\x0c\x98\xba\x41\x62\x67\x95\x8c\xd4\x97\x83\x2c\xb9\xd9\x73\x86\xb6\x3d\xf4\x62\x61\xc8\x0b\x57\x52\x18\x64\x94\x96\xa5\xe2\xd3\x90\x9f\x31\xc5\xe0\xec\x0f\x61\x14\x1e\x09\xc4\x29\x0d\x12\x7f\xa7\x47\x99\xfe\xc4\x0d\x45\x9e\xaa\x62\x04\xeb\xd1\x60\x3f\xa3\x86\x2a\x22\xb5\x9b\xd6\x3f\x4c\xcb\xd7\x4f\x42\x23\xa5\x46\xe5\x79\x7c\x7f\x50\xd5\xed\x6c\xc6\x1d\x40\x8d\xb2\xbe\xc5\x81\xa8\x56\xfc\xd0\x0e\xa7\xf1\x9f\x5d\x48\x5d\x71\x99\x2f\x40\x2b\x0b\x25\x5a\x24\x35\x52\x4f\x66\x00\x3f\x9b\x40\xd3\xa0\xa7\x7d\xd2\xdb\x60\x5f\x42\xf7\xd8\xe3\x54\x14\x12\xef\x74\x7a\x86\xb6\xbb\x1f\x98\x33\x8f\xa1\x35\x15\x4c\xa3\x81\x1c\xe6\x82\xa9\xa6\xfe\x40\xe3\x8f\x3d\xe3\x5e\xcf\xc2\x04\x15\x83\x88\xb6\x97\xee\xc7\x0d\xdd\xbf\x5a\x9c\x6d\xbf\x46\x31\x3f\x3a\x1a\xc9\xef\x03\x3d\x6e\x5b\xb6\x2e\x88\xbb\x6d\xf1\xe8\x4c\xb1\xd1\xc7\xb3\x91\xb8\x31\x4f\x9d\x39\x13\xcd\x29\x3c\x79\x47\xcc\x6c\x92\xf1\xea\x77\x00\x31\xd6\xb1\x0e\x5f\x86\x8a\xc2\x20\x1e\xd7\x02\xc6\x13\x74\x47\x58\xa6\xdb\xb9\x1f\x42\x17\x22\x69\xec\x1e\x9a\xbf\x07\xe6\xee\x80\xae\xec\x3d\x83\xfe\x6b\x57\x1d\x8f\xab\xe5\x7f\xec\xe0\xf1\xfb\x66\x39\x68\x2a\x8e\x08\xc9\x62\x67\xbd\x19\x88\x12\xcf\xe7\xbe\x1a\xb8\x2c\x4e\x6c\xf9\x87\x54\xb1\x46\x5b\xe2\x03\x0b\xfe\x71\xb2\xa1\xb3\x65\xed\x38\xbe\xa8\x85\x2e\xb2\xdc\x53\xbb\x13\x26\xdf\x0f\xe2\x4b\x5e\x7a\x4a\x5a\xc1\x8d\x80\x76\x44\xc8\x8d\xb3\x79\xff\x1a\xd7\xd1\xdf\xf0\x40\xf2\xdb\x11\x89\x8f\x1b\xa3\x37\x41\xa1\xf6\x31\x08\x9c\x85\xda\xa7\x07\x42\xc8\x76\x51\xd8\xe5\xed\x4d\xfb\x18\x35\xdd\x0c\xfe\x68\x00\x8e\xfa\xe2\x64\x31\x19\x62\x0d\x42\x3e\x5d\x0d\x2c\x8e\x54\x89\xc3\x15\x9f\xf5\x4f\x7a\x9d\x27\x5a\x8f\xc2\xdf\xff\x2c\xfe\x0d\x00\x00\xff\xff\xc2\x3d\x63\x4c\x73\x17\x00\x00")

func clusterBytebuildersDev_clusteruserauthsYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterBytebuildersDev_clusteruserauthsYaml,
		"cluster.bytebuilders.dev_clusteruserauths.yaml",
	)
}

func clusterBytebuildersDev_clusteruserauthsYaml() (*asset, error) {
	bytes, err := clusterBytebuildersDev_clusteruserauthsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cluster.bytebuilders.dev_clusteruserauths.yaml", size: 6003, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"cluster.bytebuilders.dev_clusterauthinfotemplates.yaml": clusterBytebuildersDev_clusterauthinfotemplatesYaml,
	"cluster.bytebuilders.dev_clustercredentials.yaml":       clusterBytebuildersDev_clustercredentialsYaml,
	"cluster.bytebuilders.dev_clusterinfos.yaml":             clusterBytebuildersDev_clusterinfosYaml,
	"cluster.bytebuilders.dev_clusters.yaml":                 clusterBytebuildersDev_clustersYaml,
	"cluster.bytebuilders.dev_clusteruserauths.yaml":         clusterBytebuildersDev_clusteruserauthsYaml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"cluster.bytebuilders.dev_clusterauthinfotemplates.yaml": {clusterBytebuildersDev_clusterauthinfotemplatesYaml, map[string]*bintree{}},
	"cluster.bytebuilders.dev_clustercredentials.yaml":       {clusterBytebuildersDev_clustercredentialsYaml, map[string]*bintree{}},
	"cluster.bytebuilders.dev_clusterinfos.yaml":             {clusterBytebuildersDev_clusterinfosYaml, map[string]*bintree{}},
	"cluster.bytebuilders.dev_clusters.yaml":                 {clusterBytebuildersDev_clustersYaml, map[string]*bintree{}},
	"cluster.bytebuilders.dev_clusteruserauths.yaml":         {clusterBytebuildersDev_clusteruserauthsYaml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
