// Package crds Code generated by go-bindata. (@generated) DO NOT EDIT.
// sources:
// cluster.bytebuilders.dev_clusterauthinfotemplates.yaml
// cluster.bytebuilders.dev_clustercredentials.yaml
// cluster.bytebuilders.dev_clusterinfos.yaml
// cluster.bytebuilders.dev_clusters.yaml
// cluster.bytebuilders.dev_clusteruserauths.yaml
package crds

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _clusterBytebuildersDev_clusterauthinfotemplatesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x58\x4d\x8f\xdb\x36\x13\xbe\xfb\x57\x0c\xf0\x1e\x72\x89\x6d\x04\x6f\x51\x14\xbe\x2d\x36\x41\x60\x24\x41\x8d\xec\x26\x77\x8a\x1a\xc9\xac\x25\x92\x1d\x0e\xbd\x71\x8a\xfe\xf7\x82\xd4\x87\x65\x49\xf4\xba\xdd\xa6\xba\x91\x1c\x0e\x9f\x67\xbe\x38\x94\xb0\xea\x2b\x92\x53\x46\x6f\x40\x58\x85\xdf\x18\x75\x18\xb9\xd5\xe1\x17\xb7\x52\x66\x7d\x7c\xb3\x38\x28\x9d\x6f\xe0\xde\x3b\x36\xf5\x67\x74\xc6\x93\xc4\xb7\x58\x28\xad\x58\x19\xbd\xa8\x91\x45\x2e\x58\x6c\x16\x00\x92\x50\x84\xc9\x47\x55\xa3\x63\x51\xdb\x0d\x68\x5f\x55\x0b\x80\x4a\x64\x58\xb9\x20\x03\x20\xac\x5d\x1d\x7c\x86\xa4\x91\x31\x9e\xa2\x45\x8d\x1b\xc8\x4e\x8c\x99\x57\x55\x8e\xe4\x16\x00\xcd\xa4\xac\xbc\x63\x24\xe1\x79\xaf\x74\x61\x18\x6b\x5b\x89\xb0\xad\x5d\x58\x0d\x77\xad\x72\x3c\x2e\x9c\x45\x19\x0e\x2a\xc9\x78\xdb\x2b\x98\xca\x35\x27\xb4\x98\xa4\x60\x2c\x0d\xa9\x6e\xbc\x84\x33\xc2\x76\x82\x5a\xee\xcb\xda\xe4\x58\xb5\x93\xc2\x5a\x27\x4d\x8e\x71\xd8\x5a\xaa\x39\xf0\xce\xf3\x7e\xab\x0b\xf3\xd8\x22\x8e\x12\x95\x72\xfc\xe1\x9a\xd4\x47\xe5\x38\x4a\xda\xca\x93\xa8\xd2\xfc\xa3\x90\x53\xba\xf4\x95\xa0\xa4\xd8\x02\xc0\x49\x63\xb1\x3f\x6f\x01\x70\x6c\x1c\x1e\x89\x2e\x5b\x2b\x1f\xdf\x88\xca\xee\xc5\x9b\x46\xab\xdc\x63\x2d\x1a\x3b\x00\x18\x8b\xfa\x6e\xb7\xfd\xfa\xff\x87\x8b\x69\x00\x4b\xc6\x22\x71\x6f\xb2\xe6\x1b\x44\xd4\x60\x16\x20\x47\x27\x49\x59\x8e\xa1\xf6\x2a\x28\x6c\xa4\x20\x0f\xa1\x84\x0e\x78\x8f\x1d\x34\xcc\x5b\x0c\x60\x0a\xe0\xbd\x72\x40\x68\x09\x1d\x6a\x8e\xe1\x75\xa1\x18\x82\x90\xd0\x60\xb2\xdf\x50\xf2\x0a\x1e\x90\x82\x1a\x70\x7b\xe3\xab\x1c\xa4\xd1\x47\x24\x06\x42\x69\x4a\xad\xbe\xf7\xba\x1d\xb0\x89\x87\x46\x73\xf2\x48\xa7\xd2\x8c\xa4\x45\x05\x47\x51\x79\x7c\x0d\x42\xe7\x50\x8b\x13\x10\x86\x53\xc0\xeb\x81\xbe\x28\xe2\x56\xf0\xc9\x10\x42\xb0\xfe\x06\xf6\xcc\xd6\x6d\xd6\xeb\x52\x71\x97\x49\xd2\xd4\xb5\xd7\x8a\x4f\x6b\x69\x34\x93\xca\x3c\x1b\x72\xeb\x1c\x8f\x58\xad\x9d\x2a\x97\x82\xe4\x5e\x31\x4a\xf6\x84\x6b\x61\xd5\x32\x42\xd7\x1c\xd3\xb1\xce\xff\xd7\xc5\x9f\x7b\x75\x81\x95\x4f\xc1\xbd\x8e\x49\xe9\x72\xb0\x10\x63\xf1\x8a\x07\x42\x14\x82\x72\x20\xda\xad\x0d\x8b\xb3\xa1\xc3\x54\xb0\xce\xe7\x77\x0f\x8f\x7d\xe8\x47\x67\x8c\xad\x1f\xed\x7e\xde\xe8\xce\x2e\x08\x06\x53\xba\x40\x6a\x9c\x58\x90\xa9\xa3\x4e\xd4\xb9\x35\x4a\x73\x1c\xc8\x4a\xa1\x1e\x9b\xdf\xf9\xac\x56\x1c\xfc\xfe\xbb\x47\xc7\xc1\x57\x2b\xb8\x17\x5a\x1b\x86\x0c\xc1\xdb\x5c\x30\xe6\x2b\xd8\x6a\xb8\x17\x35\x56\xf7\xc2\xe1\x0f\x77\x40\xb0\xb4\x5b\x06\xc3\xde\xe6\x82\x61\x65\x1c\x0b\x37\x56\x1b\x2c\x74\x55\xeb\xfc\xcd\xe7\x57\xf8\x42\x96\xef\xc8\x1c\x55\x8e\x34\x5e\x1b\xf9\xf9\x6e\x20\x1a\xcf\x50\x85\xc2\xe0\x75\x19\xeb\x79\x54\x15\x28\xca\x98\x58\xa1\xea\x94\x6a\x9c\x5f\xe1\x2b\x0c\x45\x6f\x9d\xab\x62\x5f\x58\x27\xd2\x69\xe0\x11\xfc\x77\x4f\x78\x6f\x74\xa1\xca\xb9\xe5\xe7\xb6\x43\x53\x63\x5c\x0c\xb1\xa5\xca\x53\x32\x49\xaf\x0c\xbf\x26\xf6\x5e\xac\x25\x92\x89\xd7\xc2\x8b\xf4\xa0\x3e\x2a\x32\xba\x46\xcd\x2f\xd2\xc3\xa8\xc5\x4b\x59\x85\xc4\x53\x84\x09\x15\xcb\x0b\x17\x24\x44\x7a\xe3\x26\xd6\x07\x74\x13\x12\x3d\x91\xd9\xf5\x44\x22\x75\x5f\xbc\xd8\xae\x6c\x4c\x90\x4f\x13\x6f\xee\xca\xc9\xf4\x15\x18\x32\x84\x71\x11\x72\x0b\x43\x1e\x1a\x52\x7c\x7a\x3b\x29\x08\x30\xce\xd9\xfb\xc4\xb6\x10\x68\x2c\x94\x76\xb0\x7b\xf7\x69\x89\x3a\xf4\x1d\xf9\xf0\x90\xb9\x6c\xeb\x14\x0c\xe5\xdc\x34\x67\x0b\x43\xb5\xe0\xa6\x07\x4b\x50\x9c\x35\x58\xe3\xe4\x01\xe2\x5b\xf8\xcd\xed\x99\x27\x17\xca\x67\xbc\x37\xe6\xa8\xb5\x87\x47\x66\x50\xa8\x0a\x63\x95\x7a\xfc\xf8\xf0\x6f\xd3\xfb\x80\x37\xb9\x6d\x28\xfb\x0c\x9d\x1e\xfc\x0c\xaf\x03\x9e\x7e\x10\x1b\x55\x5b\x24\x67\xb4\xe0\x99\xcc\xb8\xe0\xb2\x3d\x4b\x86\x26\x21\x54\x7e\xef\x42\x43\x54\x63\x68\x9b\x84\xe4\xa5\x98\x89\xa2\xdb\xce\x7e\x1f\x1a\xf3\x99\xe2\x9e\x42\xd0\xc8\x77\x38\xca\x66\xc4\x66\xa8\x72\x0a\x45\x31\xd6\xb3\x17\xc8\xd5\xec\x6f\x16\x05\x91\x38\xa5\xf1\x7f\x71\x48\xef\xbe\x31\xcd\x04\x84\xc8\xf3\xf8\x2a\x12\xd5\xee\xea\x2d\x76\x41\x35\xea\xfa\x1a\xdb\xaf\x5a\xb8\x43\xdb\x0a\xc7\xb1\x33\xe1\x3a\x64\x93\xf9\x02\xa4\xd0\x50\xa2\x46\x9a\xcf\xf4\x24\xe1\x67\xab\x7d\x9a\x74\xda\x27\xbd\x0d\xce\x81\x7e\xe6\x1e\x7b\xb0\x10\xa2\xd3\x5e\x1d\xda\x5e\x62\x60\xce\x3c\x86\x56\x2a\x98\x66\x0b\x6b\xe8\x42\x52\x2d\xc4\x05\xe2\x0f\xbd\xe0\x19\x67\xa1\x02\xc4\xa0\xa2\xbd\xb9\xfb\xe6\x46\xf6\x6f\xa4\x9b\xed\x67\x9e\x34\xd2\xf6\xed\x14\x46\x97\xa3\x4a\xf3\xcf\x3f\x25\x34\x86\x47\x46\x39\x39\xcf\x0a\xe7\x9e\x0c\xcd\xdc\x40\x17\xd4\x76\xad\x58\x97\x17\xdd\xb6\xc8\x26\x13\x4e\xc9\x71\x73\xc7\x66\xce\xf9\x37\x36\x75\x57\x6c\xc0\xe6\x80\xfa\x19\xb4\x8f\x41\xa6\x83\x9a\xa1\xa0\xf0\x28\x88\x73\x01\xee\x04\xe8\x08\xd6\x0c\xee\x7f\x02\xd4\xcf\xb5\x44\xd7\xe4\xdb\x92\xf7\x0c\xb7\x2f\x5d\x65\x1c\x57\xca\xff\xd8\x13\xf3\xad\xcb\xb2\x8b\xd1\xd1\xac\x1f\xb5\x55\xa9\x77\x09\x0b\xf6\xee\xd6\x97\x89\xc9\x62\x57\x98\xbf\x6f\xea\xd4\xe4\x2f\xc0\xc4\x76\xbf\x4e\x36\x74\x56\xac\x8d\x8b\xaf\xf6\x70\xc3\x97\xe7\xd5\xee\x84\xe4\x1b\x25\xfe\x2d\x68\x9e\xab\x2b\xd8\x32\x48\x43\x84\xce\x1a\x9d\xf7\x2f\xfe\x6e\xfd\x95\x1b\x68\x7e\x3d\xa3\xf1\x69\xaf\xe4\x3e\x00\x6a\x1f\x9c\x60\x34\xd4\xbe\xf9\x09\x01\xd9\x29\x2a\xbb\xdb\x6d\xdb\x07\x6f\xfa\xa2\xfe\xbb\x45\x60\xd6\x17\x93\xc9\xc6\x10\x1b\x60\xf2\xcd\x85\xe0\xd8\x90\x28\x71\x38\xe3\xb3\xfe\xb7\x41\xe7\x89\xd6\xa3\xf0\xc7\x9f\x8b\xbf\x02\x00\x00\xff\xff\x3e\x4f\xaa\xa9\xff\x13\x00\x00")

func clusterBytebuildersDev_clusterauthinfotemplatesYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterBytebuildersDev_clusterauthinfotemplatesYaml,
		"cluster.bytebuilders.dev_clusterauthinfotemplates.yaml",
	)
}

func clusterBytebuildersDev_clusterauthinfotemplatesYaml() (*asset, error) {
	bytes, err := clusterBytebuildersDev_clusterauthinfotemplatesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cluster.bytebuilders.dev_clusterauthinfotemplates.yaml", size: 5119, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterBytebuildersDev_clustercredentialsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x57\xcd\x6e\xe3\x36\x10\xbe\xfb\x29\x06\xe8\x61\x2f\x6b\x19\x41\x8b\xa2\xf0\x2d\xc8\x16\x85\xb1\x2d\x76\xb1\x09\xf6\x4e\x51\x63\x99\x0d\x45\xb2\x33\x43\xa7\x4e\xd1\x77\x2f\x48\x49\xb6\xe2\xc8\x46\xac\x24\x97\xf2\xa6\x99\xe1\xfc\x7c\xdf\x90\xe2\xa8\x60\xbe\x23\xb1\xf1\x6e\x09\x2a\x18\xfc\x5b\xd0\xa5\x2f\x2e\xee\x7f\xe1\xc2\xf8\xc5\xf6\x6a\x76\x6f\x5c\xb5\x84\x9b\xc8\xe2\x9b\x6f\xc8\x3e\x92\xc6\x4f\xb8\x36\xce\x88\xf1\x6e\xd6\xa0\xa8\x4a\x89\x5a\xce\x00\x34\xa1\x4a\xc2\x3b\xd3\x20\x8b\x6a\xc2\x12\x5c\xb4\x76\x06\x60\x55\x89\x96\x93\x0d\x80\x0a\xa1\xb8\x8f\x25\x92\x43\xc1\x1c\xc5\xa9\x06\x97\x50\xee\x04\xcb\x68\x6c\x85\xc4\x33\x80\x56\xa8\x6d\x64\x41\xd2\x84\x15\x3a\x31\xca\x72\xd1\x89\x8a\xa1\x7d\x51\xe1\x76\xc6\x01\x75\x0a\x51\x93\x8f\x61\xbf\xf5\xb9\x5d\xeb\xbb\xcb\x46\x2b\xc1\xda\x93\xe9\xbf\xe7\x70\xc8\xad\x13\x50\x57\xf5\xbc\xf1\x15\xda\x4e\xa8\x42\x60\xed\x2b\xcc\x9f\x1d\x46\x6d\xc0\x9b\x7d\xae\x59\x67\x0d\xcb\xe7\x71\xfd\xef\x86\x25\xdb\x04\x1b\x49\xd9\xb1\x6a\xb3\x9a\x8d\xab\xa3\x55\x34\x62\x30\x03\x60\xed\x03\xee\xbd\xcf\x00\xb6\x2d\xa5\xb9\xa0\x79\x87\xe3\xf6\x4a\xd9\xb0\x51\x57\xad\x3f\xbd\xc1\x46\xb5\xf5\x02\xf8\x80\xee\xfa\xeb\xea\xfb\x8f\xb7\x4f\xc4\x00\x81\x7c\x40\x92\x3d\x34\xed\x1a\xf4\xcc\x40\x0a\x50\x21\x6b\x32\x41\x72\x33\x7d\x48\x0e\x5b\x2b\xa8\x52\xb3\x20\x83\x6c\xb0\x4f\x0d\xab\x2e\x07\xf0\x6b\x90\x8d\x61\x20\x0c\x84\x8c\x4e\x72\x03\x3d\x71\x0c\xc9\x48\x39\xf0\xe5\x9f\xa8\xa5\x80\x5b\xa4\xe4\x06\x78\xe3\xa3\xad\x40\x7b\xb7\x45\x12\x20\xd4\xbe\x76\xe6\x71\xef\x9b\x41\x7c\x0e\x6a\x95\x60\x07\xf4\x61\x19\x27\x48\x4e\x59\xd8\x2a\x1b\xf1\x23\x28\x57\x41\xa3\x76\x40\x98\xa2\x40\x74\x03\x7f\xd9\x84\x0b\xf8\xc3\x13\x82\x71\x6b\xbf\x84\x8d\x48\xe0\xe5\x62\x51\x1b\xe9\xcf\x8a\xf6\x4d\x13\x9d\x91\xdd\x42\x7b\x27\x64\xca\x28\x9e\x78\x51\xe1\x16\xed\x82\x4d\x3d\x57\xa4\x37\x46\x50\x4b\x24\x5c\xa8\x60\xe6\x39\x75\x27\xf9\xc0\x35\xd5\x0f\x7d\x9f\xf1\x87\x27\xb9\xca\x2e\xd1\xcb\x42\xc6\xd5\x03\x45\xee\xb9\x33\x0c\xa4\x9e\x03\xc3\xa0\xba\xad\x6d\x15\x07\xa0\x93\x28\xa1\xf3\xed\xd7\xdb\xbb\x7d\x8b\x67\x32\x8e\xd1\xcf\xb8\x1f\x36\xf2\x81\x82\x04\x98\x71\x6b\xa4\x96\xc4\x35\xf9\x26\xfb\x44\x57\x05\x6f\x9c\xe4\x0f\x6d\x0d\xba\x63\xf8\x39\x96\x8d\x91\xc4\xfb\x5f\x11\x59\x12\x57\x05\xdc\x28\xe7\xbc\x40\x89\x10\x43\xa5\x04\xab\x02\x56\x0e\x6e\x54\x83\xf6\x46\x31\xbe\x3b\x01\x09\x69\x9e\x27\x60\x5f\x46\xc1\xf0\xee\x3b\x36\x6e\x51\x1b\x28\xfa\xdb\xe9\xb0\xc6\xcf\x57\x5a\xea\x81\x0f\xb7\xc4\xb1\xf2\xdc\xc6\xbc\x59\x6b\x64\xfe\x8c\xbb\x55\x35\xa6\x3e\x59\xcd\x3e\x51\xd4\x84\x72\xdd\x7b\x99\xe0\x23\x91\x6a\x08\x47\xc2\xcf\x87\xd9\x8d\x68\x8f\x62\x3f\xb3\x38\x81\x6d\x2e\xfb\x31\x12\x4e\x47\xad\xed\xd2\x89\x90\xb5\x9b\x6f\x73\xf2\xd3\x30\x8f\xe5\xfe\xec\x4e\xcc\x41\xd0\xa9\x89\x05\x9c\xe3\xab\xc7\xe5\xa4\xaa\xad\x7a\x8c\xcb\x27\x35\x8d\x18\xf4\x19\x5f\xc2\x72\x65\x6a\x23\xca\x7e\xd1\xa8\xdc\x74\xb2\x03\x12\x7b\xa7\x6c\xdb\x68\x77\xfe\x1e\xdd\x1b\xc3\x36\x12\xe1\x92\x32\x6b\xfd\x8a\x56\x0e\xe4\x93\xcb\xc9\xc7\x9f\xb6\x46\xe3\xb5\xd6\x3e\xba\x29\xdd\x7c\x16\x96\x3e\xb5\xd1\xb3\x3f\x0c\x7c\x09\x5a\xd6\x38\x5f\xbd\x02\x30\x79\x87\x06\x90\x4b\x29\xcf\xef\xb4\x13\x1b\x46\xe3\xfb\x07\x87\xb4\xfa\xf4\x7c\xcf\xda\x53\xa3\x64\x99\x9e\x38\x3f\xff\x74\xc2\x63\x7a\xfe\xd4\xf9\xb5\x38\x5c\x41\xe9\x7b\x94\x57\xfc\x7a\x82\x99\xf6\xc7\x78\x5d\xd3\x9e\xfd\xdf\xe4\x94\x2e\x6a\xc5\x33\x24\x05\xf2\x5b\x53\x21\x5d\x44\x14\x6b\x65\xf1\x41\xed\xa6\xe3\xea\xa9\x56\xce\x3c\xe6\xb7\xf1\xb4\x9f\xc3\x3b\x74\xf8\x30\xa9\xb7\x38\x00\xdb\x68\x85\xfe\xb7\x77\xfa\xb8\xe3\x76\x3c\x3b\x12\x75\x07\xfb\x48\xda\xb7\xde\x8b\xde\x9a\xa2\x24\xf2\x4b\x5f\x9b\xbe\x4c\x57\x2f\x56\xbf\xa1\x43\x3a\xd1\x63\x4f\x66\x8b\x2f\xcf\x36\xa4\x41\x23\xbd\xf5\x1b\xcf\x79\x12\x43\x27\x50\x1f\xb4\x7d\x84\x11\x3e\xd6\x9e\xfa\x09\xb0\x1d\x41\x0a\x58\x09\x68\x4f\x84\x1c\xbc\xab\xf6\x53\x5c\xaf\xff\xc0\x03\xcf\x1f\x47\x3c\x3e\x6c\x8c\xde\xa4\x84\xba\x21\x02\xbc\x83\x26\xb6\x83\x25\x94\xbb\xec\xec\xfa\xeb\xaa\x1b\x62\x8a\x37\xbb\x3e\x47\xb9\x78\x26\x6c\x81\x58\x82\x50\x6c\x79\x67\xf1\xa4\x6a\x1c\x4a\x62\xb9\x1f\x05\x7b\x26\x3a\x46\xe1\x9f\x7f\x67\xff\x05\x00\x00\xff\xff\xff\x97\xd0\xe8\xb5\x11\x00\x00")

func clusterBytebuildersDev_clustercredentialsYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterBytebuildersDev_clustercredentialsYaml,
		"cluster.bytebuilders.dev_clustercredentials.yaml",
	)
}

func clusterBytebuildersDev_clustercredentialsYaml() (*asset, error) {
	bytes, err := clusterBytebuildersDev_clustercredentialsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cluster.bytebuilders.dev_clustercredentials.yaml", size: 4533, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterBytebuildersDev_clusterinfosYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\x4f\x8f\x1b\xb7\x0f\xbd\xfb\x53\x10\xf8\x1d\xf6\x12\x8f\xb1\xbf\x14\x45\xe1\xdb\x62\x53\x14\x46\xda\x74\x91\x0d\x72\xd7\x48\xb4\xad\xae\x46\x54\x49\xca\xe9\xb6\xe8\x77\x2f\xa4\x99\xb1\xc7\x7f\x52\xd8\x40\x3a\x37\x91\xd4\x13\xf5\xf8\x48\x8d\x49\xfe\x33\xb2\x78\x8a\x4b\x30\xc9\xe3\x1f\x8a\xb1\xac\xa4\x79\xf9\x41\x1a\x4f\x8b\xdd\xfd\xec\xc5\x47\xb7\x84\xc7\x2c\x4a\xdd\x47\x14\xca\x6c\xf1\x1d\xae\x7d\xf4\xea\x29\xce\x3a\x54\xe3\x8c\x9a\xe5\x0c\xc0\x32\x9a\x62\xfc\xe4\x3b\x14\x35\x5d\x5a\x42\xcc\x21\xcc\x00\x82\x69\x31\x48\x89\x01\x30\x29\x35\x2f\xb9\x45\x8e\xa8\x58\x4f\x89\xa6\xc3\x25\xb4\xaf\x8a\x6d\xf6\xc1\x21\xcb\x0c\xa0\x37\xda\x90\x45\x91\x7d\x5c\x93\x34\xc3\xa2\x99\x46\x36\x0e\x77\x33\x49\x68\x0b\xf8\x86\x29\xa7\xfd\xa6\xf3\xb8\x1e\x75\xc8\xc3\x1a\xc5\x0d\xb1\x1f\xd7\x73\x38\x64\x35\x18\x78\xb8\xef\xbc\x23\x87\x61\x30\x9a\x94\xc4\x92\xc3\xba\x1c\xd8\xe9\x0f\x5c\xc5\x35\x55\x6b\xf0\xa2\xef\x4f\x3d\x3f\x7b\xd1\xea\x4d\x21\xb3\x09\xc7\x77\xab\x0e\xf1\x71\x93\x83\xe1\x23\xd7\x0c\x40\x2c\x25\xdc\x63\xcd\x00\x76\x7d\xd1\x6a\xe2\xf3\x81\xa9\xdd\xbd\x09\x69\x6b\xee\x7b\x24\xbb\xc5\xce\xf4\xf7\x02\xa0\x84\xf1\xe1\x69\xf5\xf9\xed\xf3\x91\x19\x20\x31\x25\x64\xdd\x53\xd0\x7f\x13\x55\x4c\xac\x00\x0e\xc5\xb2\x4f\x5a\xe5\x72\x57\x00\xfb\x28\x70\x45\x0e\x28\xa0\x5b\x1c\x53\x43\x37\xe4\x00\xb4\x06\xdd\x7a\x01\xc6\xc4\x28\x18\xb5\x4a\xe4\x08\x18\x4a\x90\x89\x40\xed\x6f\x68\xb5\x81\x67\xe4\x02\x03\xb2\xa5\x1c\x1c\x58\x8a\x3b\x64\x05\x46\x4b\x9b\xe8\xff\xdc\x63\x0b\x28\xd5\x43\x83\x51\x1c\xc8\x3d\x7c\x3e\x2a\x72\x34\x01\x76\x26\x64\x7c\x03\x26\x3a\xe8\xcc\x2b\x30\x96\x53\x20\xc7\x09\x5e\x0d\x91\x06\x7e\x21\x46\x28\xac\x2f\x61\xab\x9a\x64\xb9\x58\x6c\xbc\x8e\xdd\x60\xa9\xeb\x72\xf4\xfa\xba\xb0\x14\x95\x7d\x9b\x95\x58\x16\x0e\x77\x18\x16\xe2\x37\x73\xc3\x76\xeb\x15\xad\x66\xc6\x85\x49\x7e\x5e\x53\x8f\x5a\x5b\xaa\x73\xff\x1b\xf5\x24\x77\x47\xb9\xea\x6b\x29\xaf\x28\xfb\xb8\x99\x38\xaa\xb6\xfe\xa5\x02\x45\x61\xe0\x05\xcc\xb0\xb5\xbf\xc5\x81\xe8\x62\x2a\xec\x7c\xfc\xf1\xf9\xd3\x5e\xca\xb5\x18\xa7\xec\x57\xde\x0f\x1b\xe5\x50\x82\x42\x98\x8f\x6b\xe4\xbe\x88\x6b\xa6\xae\x62\x62\x74\x89\x7c\xd4\xba\xb0\xc1\x63\x3c\xa5\x5f\x72\xdb\x79\x2d\x75\xff\x3d\xa3\x68\xa9\x55\x03\x8f\x26\x46\x52\x68\x11\x72\x72\x46\xd1\x35\xb0\x8a\xf0\x68\x3a\x0c\x8f\x46\xf0\x3f\x2f\x40\x61\x5a\xe6\x85\xd8\xeb\x4a\x30\x9d\x6e\xa7\xc1\x3d\x6b\x13\xc7\x38\x85\x0e\xdf\xe5\xfe\x2a\x5f\x1d\x95\xe8\x1e\xf4\xd4\x01\xb0\x26\xee\x8c\x2e\x8b\x7e\xbf\xff\xee\xcc\xdb\x9f\x5d\xb4\xbd\xa9\xa3\x60\xfa\x8d\x45\x39\xc7\xfc\xca\xf5\xa0\xb6\x89\x57\x6f\xc2\xfb\xfd\xec\xbb\xd8\xfb\xd7\x81\x7c\x20\x87\x8f\x94\x2f\x65\x30\xb9\xd5\xdb\xff\xdf\x74\xab\x40\xb6\x8e\x8c\x9b\x12\xaa\x33\xf1\x96\x0d\xf4\x25\x22\xaf\xde\x7d\xcb\x72\x54\xc8\x0f\xb7\x26\x92\x98\x8a\xae\x6e\xda\x93\xbd\xbb\x21\xbe\x74\xa4\x67\x3c\xd9\xd2\xbf\x23\x27\xa6\x81\x95\x13\x6b\xf6\xee\xaa\x7e\x50\xa3\x59\xae\xed\x08\x6a\xa5\xcc\x1c\xf7\x13\x46\xe4\xaf\x14\xfc\x68\xfe\xfd\x7a\xb6\xa1\x0c\xc3\x32\x8f\x3a\x92\xfa\x5a\x60\x54\xd8\x1c\xbc\xe3\x09\x67\xb0\xb5\xc8\xe3\x2b\xd5\x8f\xc9\x06\x56\x0a\x96\x98\x51\x12\x45\xb7\x7f\x69\x46\xff\x9d\x4c\x90\xdf\x5c\x40\xfc\xb2\xf5\x76\x5b\x12\x1a\x06\x1d\x50\x84\x2e\xf7\x8f\x1f\xb4\xaf\x15\xec\xe1\x69\x35\x0c\xda\xe6\x1b\xca\x2e\x6d\x8d\x5c\x90\xdc\x11\x77\x4f\x25\x66\x32\xf0\xc1\x66\xe6\x42\x57\x5f\xb3\xfe\xd1\xc6\xf1\x37\xe4\x7a\x69\x5d\x54\xc2\x99\xb1\x2f\xc3\x12\x94\x73\x2f\x38\x51\x62\xb3\xc1\xa9\x25\xb7\xfb\xc7\x72\xbc\xcb\xa0\x27\xf8\xeb\xef\xd9\x3f\x01\x00\x00\xff\xff\x3f\xcc\xf5\x32\xb9\x0a\x00\x00")

func clusterBytebuildersDev_clusterinfosYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterBytebuildersDev_clusterinfosYaml,
		"cluster.bytebuilders.dev_clusterinfos.yaml",
	)
}

func clusterBytebuildersDev_clusterinfosYaml() (*asset, error) {
	bytes, err := clusterBytebuildersDev_clusterinfosYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cluster.bytebuilders.dev_clusterinfos.yaml", size: 2745, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterBytebuildersDev_clustersYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x54\x4d\x8f\xe3\x36\x0c\xbd\xe7\x57\x10\xe8\x61\x2e\x1b\x07\x83\x16\x45\xe1\xdb\x20\x2d\x8a\x41\xbf\x06\x3b\x8b\xbd\xd3\x12\x63\x6b\x47\x96\x54\x92\x4a\x9b\x16\xfd\xef\x85\x64\x3b\xf1\x24\x8b\x69\x2f\x9b\x53\xf4\x48\x3d\xd1\xef\x91\xc4\xe4\x3e\x12\x8b\x8b\xa1\x05\x4c\x8e\xfe\x54\x0a\xe5\x24\xcd\xcb\x77\xd2\xb8\xb8\x3b\xde\x6f\x5e\x5c\xb0\x2d\xec\xb3\x68\x1c\xdf\x93\xc4\xcc\x86\xbe\xa7\x83\x0b\x4e\x5d\x0c\x9b\x91\x14\x2d\x2a\xb6\x1b\x00\xc3\x84\x05\xfc\xe0\x46\x12\xc5\x31\xb5\x10\xb2\xf7\x1b\x00\x8f\x1d\x79\x29\x39\x00\x98\x52\xf3\x92\x3b\xe2\x40\x4a\xf5\x95\x80\x23\xb5\xd0\x9d\x94\xba\xec\xbc\x25\x96\x0d\xc0\x04\x1a\x9f\x45\x89\xa5\x99\xff\x34\xeb\xac\xc6\xd2\x71\x23\x89\x4c\x21\xee\x39\xe6\x74\xbe\x70\x9b\x37\x31\xce\x35\x18\x54\xea\x23\xbb\xe5\xbc\x85\x4b\x45\x33\x80\x29\x89\x89\x96\xea\x71\x16\x61\xe2\xae\x88\x77\xa2\x3f\xad\xd1\x9f\x9d\x68\x8d\x24\x9f\x19\xfd\xa5\xf4\x0a\x8a\x0b\x7d\xf6\xc8\x67\x78\x03\x20\x26\x26\x6a\xe1\xd7\x52\x56\x42\x43\x76\x03\x70\x9c\xec\xa8\x65\x6d\x01\xad\xad\x2a\xa3\x7f\x62\x17\x94\x78\x1f\x7d\x1e\xc3\xb9\xe8\x4f\x12\xc3\x13\xea\xd0\x42\xb3\xf8\xd0\xdc\x98\x50\x73\x17\x3d\x1f\x7a\x9a\xcf\x7a\x2a\x8f\x5b\xd4\x09\x98\xc2\xc7\x7b\xf4\x69\xc0\xfb\xa9\x66\x33\xd0\x88\xed\x9c\x1f\x13\x85\x87\xa7\xc7\x8f\x5f\x3f\xbf\x82\x01\x12\xc7\x44\xac\x67\x2d\xa7\xdf\xaa\xb5\x56\x28\x80\x25\x31\xec\x92\xd6\x9e\xbb\x2b\x84\x53\x16\xd8\xd2\x53\x24\xa0\x03\x2d\x2a\x90\x9d\x6b\x80\x78\x00\x1d\x9c\x00\x53\x62\x12\x0a\x5a\x3f\xf1\x15\x31\x94\x24\x0c\x10\xbb\x4f\x64\xb4\x81\x67\xe2\x42\x03\x32\xc4\xec\x2d\x98\x18\x8e\xc4\x0a\x4c\x26\xf6\xc1\xfd\x75\xe6\x16\xd0\x58\x1f\xf5\xa8\x34\x5b\x78\xf9\x55\xd5\x03\x7a\x38\xa2\xcf\xf4\x0e\x30\x58\x18\xf1\x04\x4c\xe5\x15\xc8\x61\xc5\x57\x53\xa4\x81\x5f\x22\x13\xb8\x70\x88\x2d\x0c\xaa\x49\xda\xdd\xae\x77\xba\x8c\x94\x89\xe3\x98\x83\xd3\xd3\xce\xc4\xa0\xec\xba\xac\x91\x65\x67\xe9\x48\x7e\x27\xae\xdf\x22\x9b\xc1\x29\x19\xcd\x4c\x3b\x4c\x6e\x5b\x4b\x0f\x5a\xe7\x72\xb4\x5f\xf1\x3c\x84\x72\xf7\xaa\xd6\xc9\x4f\x51\x76\xa1\x5f\x05\x6a\xe7\xbe\xe1\x40\xe9\x61\x70\x02\x38\x5f\x9d\xbe\xe2\x22\x74\x81\x8a\x3a\xef\x7f\x78\xfe\x00\xcb\xd3\xd5\x8c\x6b\xf5\xab\xee\x97\x8b\x72\xb1\xa0\x08\xe6\xc2\x81\x78\x32\xf1\xc0\x71\xac\x9c\x14\x6c\x8a\x2e\x68\x3d\x18\xef\x28\x5c\xcb\x2f\xb9\x1b\x9d\x16\xdf\x7f\xcf\x24\x5a\xbc\x6a\x60\x8f\x21\x44\x85\x8e\x20\xa7\xd2\xbf\xb6\x81\xc7\x00\x7b\x1c\xc9\xef\x51\xe8\x8b\x1b\x50\x94\x96\x6d\x11\xf6\xff\x59\xb0\x5e\x91\xd7\xc9\x93\x6a\xab\xc0\xb2\xce\xfe\x3b\x51\x51\xb3\xbc\x4e\xfd\xfc\x28\x4e\xee\x48\x31\xc3\xfe\x48\x81\xb8\x0e\xcf\x75\xc6\x55\x63\xfc\x76\x73\xa1\x74\x49\x31\x6a\x8c\x52\xc7\x88\x82\x42\x7f\x89\x2e\x2f\xdc\xd0\x02\x1c\xe2\xec\xfc\xbc\x2a\x1b\x78\x54\x30\x91\x99\x24\xc5\x60\xcf\x13\x38\x87\xef\x64\xc5\xfb\x0e\xfe\x18\x9c\x19\x3e\xc3\xea\x64\xf1\x1f\x62\x80\x31\x4f\x3b\x01\xba\x53\xe5\x7a\x78\x7a\x9c\xfb\xaf\xb9\xb9\x7b\x88\x3c\xa2\xb6\x65\xb8\xbf\xfd\xe6\x26\x3a\xe9\x5d\x06\xbf\x9f\x77\xfd\x9b\x4e\xdc\x80\x93\x0c\x2d\x28\xe7\x69\xb5\x8a\x46\xc6\x9e\xd6\x48\xee\xce\x53\xbc\xf8\x30\xfb\x09\x7f\xff\xb3\xf9\x37\x00\x00\xff\xff\xd6\xd2\x64\xd4\x97\x07\x00\x00")

func clusterBytebuildersDev_clustersYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterBytebuildersDev_clustersYaml,
		"cluster.bytebuilders.dev_clusters.yaml",
	)
}

func clusterBytebuildersDev_clustersYaml() (*asset, error) {
	bytes, err := clusterBytebuildersDev_clustersYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cluster.bytebuilders.dev_clusters.yaml", size: 1943, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterBytebuildersDev_clusteruserauthsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x58\x4b\x6f\x1b\xb7\x13\xbf\xeb\x53\x0c\xf0\x3f\xe4\x12\xc9\x08\xfe\x45\x51\xe8\x66\x38\x46\x60\x24\x69\x8d\xd8\xc9\x9d\xcb\x9d\x5d\xb1\xda\x25\xb7\x33\x43\xd9\x4a\xd1\xef\x5e\x90\xfb\xd0\x4a\xfb\x90\x62\x23\xe5\x8d\xe4\x70\x38\xbf\x79\x71\x86\xaa\x32\xdf\x90\xd8\x38\xbb\x06\x55\x19\x7c\x16\xb4\x61\xc6\xab\xed\x6f\xbc\x32\xee\x6a\xf7\x6e\xb1\x35\x36\x5d\xc3\x8d\x67\x71\xe5\x17\x64\xe7\x49\xe3\x7b\xcc\x8c\x35\x62\x9c\x5d\x94\x28\x2a\x55\xa2\xd6\x0b\x00\x4d\xa8\xc2\xe2\xa3\x29\x91\x45\x95\xd5\x1a\xac\x2f\x8a\x05\x40\xa1\x12\x2c\x38\xd0\x00\xa8\xaa\x5a\x6d\x7d\x82\x64\x51\x30\xde\x62\x55\x89\x6b\x48\xf6\x82\x89\x37\x45\x8a\xc4\x0b\x80\x7a\x51\x17\x9e\x05\xc9\x33\x92\xf2\xb2\xe1\x55\xb3\xb0\xea\x53\xaf\x52\xdc\x2d\xb8\x42\x1d\x2e\xc8\xc9\xf9\xaa\x3b\x38\xa4\xab\x39\x37\xb2\x68\x25\x98\x3b\x32\xed\x7c\x09\x07\xc9\x9a\x05\x6a\x30\x2f\x4b\x97\x62\xd1\x2c\xaa\xaa\x62\xed\x52\x8c\xd3\x46\x43\xf5\x85\x5f\x19\xe9\xda\xcb\x26\xee\x14\x86\xe5\xe3\xd8\xee\x27\xc3\x12\x29\xaa\xc2\x93\x2a\x86\x38\xe3\x26\x1b\x9b\xfb\x42\xd1\x60\x7b\x01\xc0\xda\x55\xd8\xf1\x5d\x00\xec\x6a\x43\x46\x20\xcb\x46\x7b\xbb\x77\xaa\xa8\x36\xea\x5d\xcd\x4d\x6f\xb0\x54\x35\x4e\x00\x57\xa1\xbd\xbe\xbf\xfb\xf6\xff\x87\xa3\x65\x80\x8a\x5c\x85\x24\x9d\x4a\xea\xd1\xf3\x94\xde\x2a\x40\x8a\xac\xc9\x54\x12\x5d\xe8\x4d\x60\x58\x53\x41\x1a\x5c\x04\x19\x64\x83\xad\x68\x98\x36\x32\x80\xcb\x40\x36\x86\x81\xb0\x22\x64\xb4\x12\xdd\xe6\x88\x31\x04\x22\x65\xc1\x25\x7f\xa2\x96\x15\x3c\x20\x05\x36\xc0\x1b\xe7\x8b\x14\xb4\xb3\x3b\x24\x01\x42\xed\x72\x6b\xbe\x77\xbc\x19\xc4\xc5\x4b\x0b\x25\xd8\x28\xf9\x30\x8c\x15\x24\xab\x0a\xd8\xa9\xc2\xe3\x5b\x50\x36\x85\x52\xed\x81\x30\xdc\x02\xde\xf6\xf8\x45\x12\x5e\xc1\x67\x47\x08\xc6\x66\x6e\x0d\x1b\x91\x8a\xd7\x57\x57\xb9\x91\x36\x42\xb4\x2b\x4b\x6f\x8d\xec\xaf\xb4\xb3\x42\x26\xf1\xe2\x88\xaf\x52\xdc\x61\x71\xc5\x26\x5f\x2a\xd2\x1b\x23\xa8\xc5\x13\x5e\xa9\xca\x2c\xa3\xe8\x56\x62\x98\x95\xe9\xff\x5a\xff\xe2\x37\x47\xb2\xca\x3e\x98\x97\x85\x8c\xcd\x7b\x1b\xd1\xd7\x66\x2c\x10\xbc\x0d\x0c\x83\x6a\x8e\xd6\x28\x0e\x8a\x0e\x4b\x41\x3b\x5f\x6e\x1f\x1e\x3b\xd7\x8e\xc6\x38\xd5\x7e\xd4\xfb\xe1\x20\x1f\x4c\x10\x14\x66\x6c\x86\x54\x1b\x31\x23\x57\x46\x9e\x68\xd3\xca\x19\x2b\x71\xa2\x0b\x83\xf6\x54\xfd\xec\x93\xd2\x48\xb0\xfb\x5f\x1e\x59\x82\xad\x56\x70\xa3\xac\x75\x02\x09\x82\xaf\x52\x25\x98\xae\xe0\xce\xc2\x8d\x2a\xb1\xb8\x51\x8c\x3f\xdd\x00\x41\xd3\xbc\x0c\x8a\xbd\xcc\x04\xfd\x8c\x77\x4a\x5c\x6b\xad\xb7\xd1\x66\xa5\xc3\x18\x8f\xaf\x30\x42\x64\xdf\x93\xdb\x99\x14\xe9\x74\xef\xc4\xce\xd7\x3d\xd2\x78\x87\xc9\x0c\x06\xab\xeb\x98\xa7\x23\xab\x00\x51\xc7\xc0\x0a\x59\x26\x37\xa7\xf1\x15\x46\xe6\x28\x5a\xeb\x90\xf5\xba\xc4\x39\xa0\x9e\x16\x3c\x0a\xff\xdd\x13\xde\x38\x9b\x99\x7c\x6c\xfb\xdc\x71\xa8\x73\x0c\x47\x17\x5b\x9a\x74\x8a\x66\xd2\x2a\xfd\x51\xfb\xde\xab\xb9\x44\x30\x31\xed\xbf\x8a\x0f\xda\x9d\x21\x67\x4b\xb4\xf2\x2a\x3e\x82\x56\xbd\x16\x55\x08\x3c\x43\x38\xc1\x62\x79\x64\x82\x09\x92\x4e\xb9\x13\xfb\x3d\xb8\x13\x14\x1d\x90\xd1\xfd\x89\x40\x6a\x47\x7c\xd8\x66\x0e\x4e\x80\x9f\x06\x5e\xbf\x95\x83\xe5\x19\x31\xd4\x13\x4f\x87\xe9\x99\x28\x61\xf6\x25\x7e\x71\x05\x5e\x93\x7d\x01\x8c\x3e\x87\xdb\xe7\xfa\x2d\xbb\x9b\xb0\xe6\x19\x46\x5a\xe9\xcd\xac\x26\x13\xe7\x0a\x54\x63\x59\xa3\x49\x11\x2f\xbc\x38\x73\xf4\xa4\x28\x7d\x40\x0e\x45\xc1\xef\x67\xec\x39\x2d\x05\x61\x3e\x28\x47\x2e\x14\x81\x2f\xbb\x7b\xe2\xfc\x8c\x6b\xd4\xc1\x71\x13\x1c\x20\x0b\xc9\x17\xdf\x0f\x1e\x0a\x38\xcd\xe5\x37\x63\x67\x42\xf6\x11\x65\x2c\xc3\xfd\xed\xe7\x25\xda\x50\x6c\xa6\x10\x9e\x9d\xf8\xde\x8e\x39\x46\x73\x39\xe8\x50\x17\x65\xa6\xc0\x98\xdd\x1f\x3f\x3d\x0c\x53\x79\xe6\xa8\x54\x52\x97\xdc\x13\xf0\x46\xb1\xd7\x37\x7c\xc4\xfd\xc5\xb0\x1a\xda\x33\x70\x3a\xe1\x47\x70\x6d\x71\xff\xd3\xd0\xd4\x35\xf9\xdd\xfb\x21\x94\x99\x63\xf9\x16\x5f\x1c\xfe\x5a\x23\xf3\xa3\xdb\xe2\xcb\xfc\x16\x9f\x2b\x43\xfb\xf1\xa3\xad\x16\x8c\x95\x5f\x7f\x99\x61\x1e\x4a\xe0\x3c\x76\x0c\xa7\x83\x30\x23\xe4\xcd\x4b\xc5\x9b\x09\x0b\x53\x56\x48\xec\xac\x92\x91\x78\x3b\xf2\x9a\xbb\x03\x65\x28\x63\x43\x6d\x12\x9a\x9e\x90\xa2\x43\x61\xaf\xb4\x2c\x15\x0f\x5d\x60\x46\xb0\xde\xdd\x1f\x42\x6b\x38\x62\x98\x29\x09\x6a\xfa\x56\x8e\xbc\x9e\x89\xeb\xb3\x1c\x8a\x62\x04\xcb\x51\xe3\x5f\xa0\x3c\x45\xa4\xf6\xd3\xf2\x87\xee\xf1\xf6\x59\x68\x24\xf4\x54\x9a\xc6\x7e\x5c\x15\xf7\xb3\x1e\x78\x04\x35\xf2\xfa\x16\x1b\x84\x52\xf1\xb6\x69\xd6\xe2\x9c\x5d\x70\x65\x71\x89\xcf\x40\x2b\x0b\x39\x5a\x24\x35\x12\x5f\x33\x80\xcf\xba\xf3\x34\xe8\x69\x9b\x74\x3a\x38\xa4\x94\x03\xf6\xd8\x25\x84\x30\x18\x76\x93\xd0\x54\xbb\x3d\x75\xa6\xd1\xb5\xa6\x9c\x69\xd4\x91\x43\x9d\x3c\x55\xe4\x1e\x49\xfc\xb1\x23\x3c\xc8\x99\x99\x20\x62\x60\xd1\xd4\x96\x5d\xf9\xad\xbb\x2e\xfe\x62\xfd\x55\x8a\xf9\xc9\xd1\xc8\x13\x7c\x24\xc7\x7d\x43\xd6\x3a\x71\x7b\x2c\x5e\x9d\x28\x36\xfa\xb4\x57\x10\x37\x66\xa9\x0b\x7b\x84\x39\x81\x27\x73\xe6\xcc\x21\x19\xcf\x45\x47\x10\x63\xbe\x6a\xf1\x25\xa8\x28\x34\xa6\x71\x2d\x60\x1c\xa0\x3b\xc1\x32\x5d\xde\xfc\x10\xba\xe0\x49\x63\xef\xc8\x7c\x56\x9e\xcb\xc8\x6d\xda\x3b\x83\xfe\x6b\x9b\x1d\x4f\xb3\xe5\x7f\x6c\xe0\xf1\x02\x7b\xd9\x7b\x64\x4f\x36\x6a\x8d\x5d\xd4\x43\x8b\x12\xcf\x97\x76\xd1\x2e\x89\x1d\x4c\xfa\xa1\xce\x58\xa3\x25\xe2\x91\x06\xff\x18\x1c\x68\x75\x59\x3a\x8e\x3f\x4c\xa1\xaa\xca\x0f\xbb\xed\x0d\x93\xfd\x74\xfc\xd9\xaa\xbf\x56\x56\x70\x27\xa0\x1d\x11\x72\xe5\x6c\xda\xfd\x4e\xb5\xfb\x6f\xb8\xc7\xf9\xed\x08\xc7\xa7\x8d\xd1\x9b\x20\x50\xf3\x39\x02\xce\x42\xe9\xeb\x0f\x33\x48\xf6\x91\xd9\xf5\xfd\x5d\xf3\x39\x33\x5d\x1c\xfd\xa8\x03\x8e\xda\x62\xb0\x58\x2b\x62\x0d\x42\xbe\x7e\x1a\x58\x1c\xa9\x1c\xfb\x2b\x3e\xe9\xbe\xb8\x5a\x4b\x34\x16\x85\xbf\xff\x59\xfc\x1b\x00\x00\xff\xff\xee\xe7\xd4\xcf\x83\x16\x00\x00")

func clusterBytebuildersDev_clusteruserauthsYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterBytebuildersDev_clusteruserauthsYaml,
		"cluster.bytebuilders.dev_clusteruserauths.yaml",
	)
}

func clusterBytebuildersDev_clusteruserauthsYaml() (*asset, error) {
	bytes, err := clusterBytebuildersDev_clusteruserauthsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cluster.bytebuilders.dev_clusteruserauths.yaml", size: 5763, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"cluster.bytebuilders.dev_clusterauthinfotemplates.yaml": clusterBytebuildersDev_clusterauthinfotemplatesYaml,
	"cluster.bytebuilders.dev_clustercredentials.yaml":       clusterBytebuildersDev_clustercredentialsYaml,
	"cluster.bytebuilders.dev_clusterinfos.yaml":             clusterBytebuildersDev_clusterinfosYaml,
	"cluster.bytebuilders.dev_clusters.yaml":                 clusterBytebuildersDev_clustersYaml,
	"cluster.bytebuilders.dev_clusteruserauths.yaml":         clusterBytebuildersDev_clusteruserauthsYaml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"cluster.bytebuilders.dev_clusterauthinfotemplates.yaml": {clusterBytebuildersDev_clusterauthinfotemplatesYaml, map[string]*bintree{}},
	"cluster.bytebuilders.dev_clustercredentials.yaml":       {clusterBytebuildersDev_clustercredentialsYaml, map[string]*bintree{}},
	"cluster.bytebuilders.dev_clusterinfos.yaml":             {clusterBytebuildersDev_clusterinfosYaml, map[string]*bintree{}},
	"cluster.bytebuilders.dev_clusters.yaml":                 {clusterBytebuildersDev_clustersYaml, map[string]*bintree{}},
	"cluster.bytebuilders.dev_clusteruserauths.yaml":         {clusterBytebuildersDev_clusteruserauthsYaml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
